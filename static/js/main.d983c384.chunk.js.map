{"version":3,"sources":["Theme/Solarized/solarized.module.scss","Theme/theme.module.scss","Theme/Solarized/dark.module.scss","Theme/Solarized/light.module.scss","Theme/Solarized/auto.module.scss","graphics/noto-emoji/symbols.svg","lib/NumeralSystem.ts","lib/toRomanNumeral.ts","lib/zero.ts","lib/assertNever.ts","lib/hex.ts","Game/grid.ts","Game/coordinate.ts","Game/board.ts","Game/cell.ts","Theme/theme.ts","Theme/Solarized/index.ts","Theme/index.ts","store/contexts/settings/useLocalStorage.ts","store/contexts/settings/theme.tsx","store/contexts/settings/fitWindow.tsx","store/contexts/settings/numeralSystem.tsx","store/contexts/settings/rotate.tsx","store/contexts/settings/index.tsx","Game/game.ts","Game/index.ts","Components/ErrorBoundary.tsx","graphics/index.ts","graphics/noto-emoji/index.ts","Components/Svg/Board/getContent.ts","store/reducer.ts","Components/index.ts","Hooks/useAsyncDispatch.ts","Components/Svg/Board/SvgCell.tsx","Components/Svg/Board/SvgBoard.tsx","store/context.ts","lib/getFitWindowCss.ts","Hooks/useTheme.ts","Hooks/useDomTokenList.ts","Hooks/useTicker.ts","Components/FormatNumber.tsx","Components/Timer.tsx","router.tsx","Components/Svg/registerEvent.ts","Components/Svg/StatusBar.tsx","Components/Svg/SvgMinesweeper.tsx","Components/Settings/ThemeChooser.tsx","Components/CloseButton.tsx","Components/Settings/SettingsDialog.tsx","Components/LevelChooser.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","NumeralSystem","data","toRomanNumeral","number","returnUnicode","toString","result","Math","abs","forEach","digit","unicode","ascii","push","join","NumeralSystemLocaleMap","Object","freeze","ROMAN_NUMERAL","SMALL_ROMAN_NUMERAL","ARABIC_INDIC","EXTENDED_ARABIC_INDIC","NKO","DEVANAGARI","BENGALI","GURMUKHI","GUJARATI","ORIYA","TAMIL","TELUGU","KANNADA","MALAYALAM","SINHALA_LITH","THAI","LAO","TIBETAN","MYANMAR","MYANMAR_SHAN","ETHIOPIC","KHMER","MONGOLIAN","LIMBU","NEW_TAI_LUE","TAI_THAM_HORA","TAI_THAM_THAM","BALINESE","SUNDANESE","LEPCHA","OL_CHIKI","VAI","SAURASHTRA","KAYAH_LI","JAVANESE","MYANMAR_TAI_LAING","CHAM","MEETEI_MAYEK","OSMANYA","HANIFI_ROHINGYA","BRAHMI","SORA_SOMPENG","CHAKMA","SHARADA","KHUDAWADI","NEWA","TIRHUTA","MODI","TAKRI","AHOM","WARANG_CITI","BHAIKSUKI","MASARAM_GONDI","GUNJALA_GONDI","MRO","PAHAWH_HMONG","NYIAKENG_PUACHUE_HMONG","WANCHO","ADLAM","isRomanNumeral","ns","formatNumber","n","options","Number","isInteger","toLocaleString","numberingSystem","undefined","getLocaleString","formatTime","d","Date","seconds","getSeconds","minutes","getMinutes","hours","getHours","arr","unshift","map","x","s","assertNever","Error","GridType","hexOffset","sqrt","calculateCoordinate","cols","index","col","row","calculateIndex","coordinate","Topology","GameState","resolver","a","b","hexNeighboursMemoized","_","memoize","origo","origin","flat","squareNeighboursMemoized","GameError","msg","err","cause","message","immerable","this","CellState","getCell","level","cells","isNumThreats","Mode","setValue","mask","prev","value","RangeError","getValue","cell","setState","state","getState","setMine","mine","getMine","setThreats","threats","getThreats","fromObject","o","threatCount","createTheme","partial","classNames","styles","t","Theme","simple","name","theme","dark","solarized","_dark","mode","DARK","light","_light","LIGHT","auto","_auto","AUTO","defaultTheme","Solarized","validateType","type","includes","TypeError","loadValue","key","nskey","json","localStorage","getItem","v","isNaN","parsed","JSON","parse","console","warn","removeItem","_err","saveValue","setItem","stringify","useLocalStorage","defaultValue","fromLocalStorage","React","useState","useCallback","ThemeContext","createContext","setTheme","noop","themes","Map","Themes","ThemeContextProvider","props","c","get","Array","isArray","find","symbols","flag","Provider","children","FitWindowContext","fitWindow","setFitWindow","FitWindowContextProvider","defaultNumeralSystem","NumeralSystemContext","numeralSystem","setNumeralSystem","NumeralSystemContextProvider","RotateContext","rotate","setRotate","createSettingsContext","Providers","Child","reduce","acc","useProviders","useSettingsContext","useContext","initialTheme","initialFitWindow","initialNumeralSystem","initialRotate","createLevel","rows","mines","SQUARE","topology","LIMITED","createCellStateStats","stats","NEW","OPEN","FLAGGED","UNCERTAIN","EXPLODED","createBoard","game","produce","draft","Uint16Array","NOT_INITIALIZED","cellStates","error","version","onGameOver","createEmptyCells","initialize","mineSet","Set","add","iterations","dim","size","randomInt","has","coord","board","p","visitNeighbours","countThreats","updateCell","newCell","oldCell","oldThreatCount","newThreatCount","PLAYING","max","floor","random","Cmd","getNeighbours","neighbours","HEX","getNeighbourMatrix","torusAdjust","TOROIDAL","filter","callbacks","length","cb","nextState","command","PAUSE","UNPAUSE","PAUSED","POKE","toggleOpen","FLAG","INITIALIZED","GAME_OVER","COMPLETED","ERROR","DEMO","newCellState","toggleFlagged","countBy","done","newState","predicate","cellRecord","visitor","cc","cr","flaggedNeighboursCount","openNeighbours","maxMines","minMines","ceil","validateLevel","errors","field","isGridType","ValidationError","e","createGame","zero","func","cmd","expectUnPause","_cmd","legend","_ignore","i","enableAllPlugins","ErrorBoundary","_error","_errorInfo","Component","getFlag","today","getDate","getMonth","componentMap","MINES","takeWhile","keys","isSvgDataHref","startsWith","isSvgHref","href","getContent","defs","external","gameState","getSymbol","render","isMined","gameWon","gameOver","demo","isFlagged","isDisarmed","renderThreats","String","fromCodePoint","ModalType","onContextMenu","stopPropagation","preventDefault","useAsyncDispatch","dispatch","handlers","action","promise","onfinally","onfulfilled","onrejected","then","catch","finally","Text","memo","domProps","content","className","center","y","width","cellSize","height","dominantBaseline","textAnchor","fill","fontSize","_dispatch","gridType","role","test","viewBox","onMouseDown","button","window","navigator","vibrate","data-s","data-t","data-m","background","cover","SvgBoard","ref","style","rotated","boardState","textAlign","shouldRotate","pointerEvents","xOffset","yFactor","getOffsets","v2","classes","transform","preserveAspectRatio","data-grid","data-r","mapCell","additional","active","jsx","isEqual","isCmdAction","isCmdName","isGameAction","lives","reducer","commandActionReducer","isPauseCmd","isPauseAction","boardVersion","addTimingEvent","tmp","timingEvents","elapsedTime","len","elapsed","pop","chunk","calulateElapsedTime","lastStart","now","debug","old","new","withLives","modalStackSize","modalStack","modal","showMenu","maxBoardDimensions","current","maxHeight","maxWidth","top","getBoundingClientRect","BOARD_BORDER_WIDTH","getFitWindowCss","containerRef","menuActionReducer","document","fullscreen","documentElement","requestFullscreen","exitFullscreen","LEVELS","BEGINNER","INTERMEDIATE","EXPERT","HANGZHOU_NUMERAL","initialState","loading","createRef","useTheme","useDomTokenList","body","element","tokens","useEffect","classList","remove","useTicker","timeout","isActive","id","setInterval","clearInterval","fractionDigits","asTime","minimumFractionDigits","maximumFractionDigits","format","data-numeralsystem","title","aria-label","Timer","running","timer","setTimer","aria-live","BASE","process","split","base","Link","to","navigate","reachNavigate","registerEvent","event","callback","addEventListener","removeEventListener","StatusBar","Store","remaining","remainingLives","handleGameStateClick","fullScreen","setFullScreen","itemsProps","onClick","repeat","renderGameState","open","aria-checked","onChange","currentTarget","checked","SvgMinesweeper","keyCode","visibilityState","handleRestartGame","boardStyle","onPointerDown","borderWidth","indexOf","parseInt","close","text","tooltip","aria","NumeralSystemChooser","selected","_v","color","SettingsDialog","values","onSubmit","onReset","display","justifyContent","flexWrap","predefinedLevels","formatLevel","asString","r","m","LevelChooser","initialLevel","setLevel","maxM","minM","selectedLevel","handleTypeChange","handleTopologyChange","lvl","l","getLevel","target","hidden","entries","k","valueAsNumber","min","disabled","verticalAlign","Game","_props","Settings","Levels","hexPoints","squarePoints","gap","SettingsContextProvider","useReducer","basepath","default","path","visibility","cx","cy","points","fillOpacity","strokeWidth","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","onUpdate","onSuccess","ReactDOM","getElementById","URL","fetch","headers","response","contentType","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.d983c384.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Theme\":\"solarized_Theme__36Ttp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Theme\":\"theme_Theme__1KsyP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Theme\":\"dark_Theme__n6cmj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Theme\":\"light_Theme__3XUtO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Theme\":\"auto_Theme__2DBna\"};","module.exports = __webpack_public_path__ + \"static/media/symbols.bdf98f4c.svg\";","/*\n# http://unicode.org/Public/UNIDATA/UnicodeData.txt\ngrep -E '(NUMERAL EIGHT|DIGIT EIGHT);' /usr/share/unicode/ucd/UnicodeData.txt \\\n  | awk -F\\; '$9 == \"8\" {sub(/ (DIGIT )?EIGHT/,\"\"); printf \"%s = 0x%s - 8,\\n\", gensub(/[^A-Z0-9]/, \"_\", \"g\", $2), $1};' \\\n  | sed 's|^DIGIT|ASCII|'\n  | xclip -selection clipboard\n*/\n\nimport toRomanNumeral from './toRomanNumeral';\n\n/*\nadlm\tAdlam digits\nahom\tAhom digits\narab\tArabic-Indic digits\narabext\tExtended Arabic-Indic digits\narmn\tArmenian upper case numerals — algorithmic\narmnlow\tArmenian lower case numerals — algorithmic\nbali\tBalinese digits\nbeng\tBengali digits\nbhks\tBhaiksuki digits\nbrah\tBrahmi digits\ncakm\tChakma digits\ncham\tCham digits\ncyrl\tCyrillic numerals — algorithmic\ndeva\tDevanagari digits\nethi\tEthiopic numerals — algorithmic\nfinance\tFinancial numerals — may be algorithmic\nfullwide\tFull width digits\ngeor\tGeorgian numerals — algorithmic\ngong\tGunjala Gondi digits\ngonm\tMasaram Gondi digits\ngrek\tGreek upper case numerals — algorithmic\ngreklow\tGreek lower case numerals — algorithmic\ngujr\tGujarati digits\nguru\tGurmukhi digits\nhanidays\tHan-character day-of-month numbering for lunar/other traditional calendars\nhanidec\tPositional decimal system using Chinese number ideographs as digits\nhans\tSimplified Chinese numerals — algorithmic\nhansfin\tSimplified Chinese financial numerals — algorithmic\nhant\tTraditional Chinese numerals — algorithmic\nhantfin\tTraditional Chinese financial numerals — algorithmic\nhebr\tHebrew numerals — algorithmic\nhmng\tPahawh Hmong digits\nhmnp\tNyiakeng Puachue Hmong digits\njava\tJavanese digits\njpan\tJapanese numerals — algorithmic\njpanfin\tJapanese financial numerals — algorithmic\njpanyear\tJapanese first-year Gannen numbering for Japanese calendar\nkali\tKayah Li digits\nkhmr\tKhmer digits\nknda\tKannada digits\nlana\tTai Tham Hora (secular) digits\nlanatham\tTai Tham Tham (ecclesiastical) digits\nlaoo\tLao digits\nlatn\tLatin digits\nlepc\tLepcha digits\nlimb\tLimbu digits\nmathbold\tMathematical bold digits\nmathdbl\tMathematical double-struck digits\nmathmono\tMathematical monospace digits\nmathsanb\tMathematical sans-serif bold digits\nmathsans\tMathematical sans-serif digits\nmlym\tMalayalam digits\nmodi\tModi digits\nmong\tMongolian digits\nmroo\tMro digits\nmtei\tMeetei Mayek digits\nmymr\tMyanmar digits\nmymrshan\tMyanmar Shan digits\nmymrtlng\tMyanmar Tai Laing digits\nnative\tNative digits\nnewa\tNewa digits\nnkoo\tN'Ko digits\nolck\tOl Chiki digits\norya\tOriya digits\nosma\tOsmanya digits\nrohg\tHanifi Rohingya digits\nroman\tRoman upper case numerals — algorithmic\nromanlow\tRoman lowercase numerals — algorithmic\nsaur\tSaurashtra digits\nshrd\tSharada digits\nsind\tKhudawadi digits\nsinh\tSinhala Lith digits\nsora\tSora_Sompeng digits\nsund\tSundanese digits\ntakr\tTakri digits\ntalu\tNew Tai Lue digits\ntaml\tTamil numerals — algorithmic\ntamldec\tModern Tamil decimal digits\ntelu\tTelugu digits\nthai\tThai digits\ntirh\tTirhuta digits\ntibt\tTibetan digits\ntraditio\tTraditional numerals — may be algorithmic\nvaii\tVai digits\nwara\tWarang Citi digits\nwcho\tWancho digits\n*/\n\nenum NumeralSystem {\n  ascii = 0x0038 - 8,\n  DOUBLE_CIRCLED = 0x24fc - 8,\n  ROMAN_NUMERAL = 0x2167 - 8,\n  SMALL_ROMAN_NUMERAL = 0x2177 - 8,\n  HANGZHOU_NUMERAL = 0x3028 - 8,\n  COUNTING_ROD_UNIT = 0x1d367 - 8,\n  ARABIC_INDIC = 0x0668 - 8,\n  EXTENDED_ARABIC_INDIC = 0x06f8 - 8,\n  NKO = 0x07c8 - 8,\n  DEVANAGARI = 0x096e - 8,\n  BENGALI = 0x09ee - 8,\n  GURMUKHI = 0x0a6e - 8,\n  GUJARATI = 0x0aee - 8,\n  ORIYA = 0x0b6e - 8,\n  TAMIL = 0x0bee - 8,\n  TELUGU = 0x0c6e - 8,\n  KANNADA = 0x0cee - 8,\n  MALAYALAM = 0x0d6e - 8,\n  SINHALA_LITH = 0x0dee - 8,\n  SINHALA_ARCHAIC = 0x111e8 - 8,\n  THAI = 0x0e58 - 8,\n  LAO = 0x0ed8 - 8,\n  TIBETAN = 0x0f28 - 8,\n  MYANMAR = 0x1048 - 8,\n  MYANMAR_SHAN = 0x1098 - 8,\n  ETHIOPIC = 0x1370 - 8,\n  KHMER = 0x17e8 - 8,\n  LEPCHA = 0x1c48 - 8,\n  VAI = 0xa628 - 8,\n  MYANMAR_TAI_LAING = 0xa9f8 - 8,\n  // FULLWIDTH = 0xff18 - 8,\n  COPTIC_EPACT = 0x102e8 - 8,\n  OSMANYA = 0x104a8 - 8,\n  /*\n  MAYAN_NUMERAL = 0x1d2e8 - 8,\n  BALINESE = 0x1b58 - 8,\n  MONGOLIAN = 0x1818 - 8,\n  LIMBU = 0x194e - 8,\n  NEW_TAI_LUE = 0x19d8 - 8,\n  TAI_THAM_HORA = 0x1a88 - 8,\n  TAI_THAM_THAM = 0x1a98 - 8,\n  SUNDANESE = 0x1bb8 - 8,\n  OL_CHIKI = 0x1c58 - 8,\n  SAURASHTRA = 0xa8d8 - 8,\n  KAYAH_LI = 0xa908 - 8,\n  JAVANESE = 0xa9d8 - 8,\n  CHAM = 0xaa58 - 8,\n  MEETEI_MAYEK = 0xabf8 - 8,\n  HANIFI_ROHINGYA = 0x10d38 - 8,\n  RUMI = 0x10e67 - 8,\n  BRAHMI = 0x1106e - 8,\n  SORA_SOMPENG = 0x110f8 - 8,\n  CHAKMA = 0x1113e - 8,\n  SHARADA = 0x111d8 - 8,\n  KHUDAWADI = 0x112f8 - 8,\n  NEWA = 0x11458 - 8,\n  TIRHUTA = 0x114d8 - 8,\n  MODI = 0x11658 - 8,\n  TAKRI = 0x116c8 - 8,\n  AHOM = 0x11738 - 8,\n  WARANG_CITI = 0x118e8 - 8,\n  DIVES_AKURU = 0x11958 - 8, // Unicode version 13.0\n  BHAIKSUKI = 0x11c58 - 8,\n  MASARAM_GONDI = 0x11d58 - 8,\n  GUNJALA_GONDI = 0x11da8 - 8,\n  MRO = 0x16a68 - 8,\n  PAHAWH_HMONG = 0x16b58 - 8,\n  MEDEFAIDRIN = 0x16e88 - 8,\n  NYIAKENG_PUACHUE_HMONG = 0x1e148 - 8,\n  WANCHO = 0x1e2f8 - 8,\n  MENDE_KIKAKUI = 0x1e8ce - 8,\n  ADLAM = 0x1e958 - 8,\n  SEGMENTED = 0x1fbf8 - 8,\n  */\n  /*\n  SUPERSCRIPT = 0x2078 - 8,\n  SUBSCRIPT = 0x2088 - 8,\n  PARENTHESIZED = 0x247b - 8,\n  CIRCLED = 0x2467 - 8,\n  DINGBAT_NEGATIVE_CIRCLED = 0x277d - 8,\n  DINGBAT_CIRCLED_SANS_SERIF = 0x2787 - 8,\n  DINGBAT_NEGATIVE_CIRCLED_SANS_SERIF = 0x2791 - 8,\n  */\n  /*\n    MATHEMATICAL_BOLD = 0x1d7d6 - 8,\n    MATHEMATICAL_DOUBLE_STRUCK = 0x1d7e0 - 8,\n    MATHEMATICAL_SANS_SERIF = 0x1d7ea - 8,\n    MATHEMATICAL_SANS_SERIF_BOLD = 0x1d7f4 - 8,\n    MATHEMATICAL_MONOSPACE = 0x1d7fe - 8,\n    */\n}\n\nexport const isNumeralSystem = (c: any): c is NumeralSystem =>\n  typeof c === 'number' && NumeralSystem[c] != null;\n\n// type NumeralSystemName = keyof typeof NumeralSystem;\n\nexport const NumeralSystemLocaleMap: {\n  [key: string]: string;\n} = Object.freeze({\n  // ascii: undefined,\n  ROMAN_NUMERAL: 'roman',\n  SMALL_ROMAN_NUMERAL: 'romanlow',\n  // HANGZHOU_NUMERAL: 0x3028 - 8,\n  // MAYAN_NUMERAL: 0x1d2e8 - 8,\n  // COUNTING_ROD_UNIT: 0x1d367 - 8,\n  ARABIC_INDIC: 'arab',\n  EXTENDED_ARABIC_INDIC: 'arabext',\n  NKO: 'nkoo',\n  DEVANAGARI: 'deva',\n  BENGALI: 'beng',\n  GURMUKHI: 'guru',\n  GUJARATI: 'gujr',\n  ORIYA: 'orya',\n  // TODO taml eller tamldec?\n  TAMIL: 'tamldec',\n  TELUGU: 'telu',\n  KANNADA: 'knda',\n  MALAYALAM: 'mlym',\n  SINHALA_LITH: 'sinh',\n  THAI: 'thai',\n  LAO: 'laoo',\n  TIBETAN: 'tibt',\n  MYANMAR: 'mymr',\n  MYANMAR_SHAN: 'mymrshan',\n  ETHIOPIC: 'ethi',\n  KHMER: 'khmr',\n  MONGOLIAN: 'mong',\n  LIMBU: 'limb',\n  NEW_TAI_LUE: 'talu',\n  TAI_THAM_HORA: 'lana',\n  TAI_THAM_THAM: 'lanatham',\n  BALINESE: 'bail',\n  SUNDANESE: 'sund',\n  LEPCHA: 'lepc',\n  OL_CHIKI: 'olck',\n  /*\n    SUPERSCRIPT : 0x2078 - 8,\n    SUBSCRIPT : 0x2088 - 8,\n    CIRCLED : 0x2467 - 8,\n    PARENTHESIZED : 0x247b - 8,\n    DOUBLE_CIRCLED : 0x24fc - 8,\n    DINGBAT_NEGATIVE_CIRCLED : 0x277d - 8,\n    DINGBAT_CIRCLED_SANS_SERIF : 0x2787 - 8,\n    DINGBAT_NEGATIVE_CIRCLED_SANS_SERIF : 0x2791 - 8,\n    */\n  VAI: 'vaii',\n  SAURASHTRA: 'saur',\n  KAYAH_LI: 'kali',\n  JAVANESE: 'java',\n  MYANMAR_TAI_LAING: 'mymrtlng',\n  CHAM: 'cham',\n  MEETEI_MAYEK: 'mtei',\n  // FULLWIDTH : 0xff18 - 8,\n  // COPTIC_EPACT: 0x102e8 - 8,\n  OSMANYA: 'osma',\n  HANIFI_ROHINGYA: 'rohg',\n  // RUMI: 0x10e67 - 8,\n  BRAHMI: 'brah',\n  SORA_SOMPENG: 'sora',\n  CHAKMA: 'cakm',\n  SHARADA: 'shrd',\n  // SINHALA_ARCHAIC: 0x111e8 - 8,\n  KHUDAWADI: 'sind',\n  NEWA: 'newa',\n  TIRHUTA: 'tirh',\n  MODI: 'modi',\n  TAKRI: 'takr',\n  AHOM: 'ahom',\n  WARANG_CITI: 'wara',\n  // DIVES_AKURU: 0x11958 - 8, // Unicode version 13.0\n  BHAIKSUKI: 'bhks',\n  MASARAM_GONDI: 'gonm',\n  GUNJALA_GONDI: 'gong',\n  MRO: 'mroo',\n  PAHAWH_HMONG: 'hmng',\n  // MEDEFAIDRIN: 0x16e88 - 8,\n  /*\n    MATHEMATICAL_BOLD : 0x1d7d6 - 8,\n    MATHEMATICAL_DOUBLE_STRUCK : 0x1d7e0 - 8,\n    MATHEMATICAL_SANS_SERIF : 0x1d7ea - 8,\n    MATHEMATICAL_SANS_SERIF_BOLD : 0x1d7f4 - 8,\n    MATHEMATICAL_MONOSPACE : 0x1d7fe - 8,\n    */\n  NYIAKENG_PUACHUE_HMONG: 'hmnp',\n  WANCHO: 'wcho',\n  // MENDE_KIKAKUI: 0x1e8ce - 8,\n  ADLAM: 'adlm',\n  // SEGMENTED: 0x1fbf8 - 8,\n});\n\nexport const getLocaleString = (ns: NumeralSystem) => {\n  const numberingSystem = NumeralSystemLocaleMap[NumeralSystem[ns]];\n  const locale =\n    numberingSystem != null ? `en-u-nu-${numberingSystem}` : undefined;\n  return locale;\n};\n\nconst isRomanNumeral = (ns: NumeralSystem) =>\n  ns === NumeralSystem.ROMAN_NUMERAL ||\n  ns === NumeralSystem.SMALL_ROMAN_NUMERAL;\n\nexport const formatNumber = (\n  ns: NumeralSystem,\n  n: number,\n  options?: Intl.NumberFormatOptions\n) => {\n  if (Number.isInteger(n) && isRomanNumeral(ns)) {\n    const r = toRomanNumeral(n, false);\n    return r;\n    // return ns === NumeralSystem.SMALL_ROMAN_NUMERAL ? r.toLowerCase() : r;\n  }\n\n  return n.toLocaleString(getLocaleString(ns), options);\n};\n\nexport const formatTime = (\n  ns: NumeralSystem,\n  n: number,\n  options?: Intl.DateTimeFormatOptions\n) => {\n  const d = new Date(0, 0, 0, 0, 0, n);\n  const seconds = d.getSeconds();\n  const minutes = d.getMinutes();\n  const hours = d.getHours();\n  const arr = [seconds];\n  if (minutes > 0 || hours > 0) {\n    arr.unshift(minutes);\n    if (hours > 0) {\n      arr.unshift(hours);\n    }\n  }\n  if (isRomanNumeral(ns)) {\n    ns = NumeralSystem.ascii;\n  }\n  return arr\n    .map(x => [x, formatNumber(ns, x, options)])\n    .map(([x, s]) => (x < 10 ? formatNumber(ns, 0, options) + s : s))\n    .join(':');\n  // return d.toLocaleTimeString(getLocaleString(ns), { hour12: false, ...options });\n};\n\nexport default NumeralSystem;\n","const data: Array<[number, string, string]> = [\n  [1000, 'Ⅿ', 'M'],\n  [900, 'ⅭⅯ', 'CM'],\n  [500, 'Ⅾ', 'D'],\n  [400, 'ⅭⅮ', 'CD'],\n  [100, 'Ⅽ', 'C'],\n  [90, 'ⅩⅭ', 'XC'],\n  [50, 'Ⅼ', 'L'],\n  [40, 'ⅩⅬ', 'XL'],\n  [12, 'Ⅻ', 'XII'],\n  [11, 'Ⅺ', 'XI'],\n  [10, 'Ⅹ', 'X'],\n  [9, 'Ⅸ', 'IX'],\n  [8, 'Ⅷ', 'VIII'],\n  [7, 'Ⅶ', 'VII'],\n  [6, 'Ⅵ', 'VI'],\n  [5, 'Ⅴ', 'V'],\n  [4, 'Ⅳ', 'IV'],\n  [3, 'Ⅲ', 'III'],\n  [2, 'Ⅱ', 'II'],\n  [1, 'Ⅰ', 'I'],\n];\n\nconst toRomanNumeral = (number: number, returnUnicode: boolean): string => {\n  if (number === 0 || number > 4000) {\n    return number.toString();\n  }\n  let result = [number < 0 ? '−' : ''];\n  number = Math.abs(number);\n\n  data.forEach(([digit, unicode, ascii]) => {\n    while (number >= digit && number > 0) {\n      if ((digit === 12 && number > 12) || (digit === 11 && number > 11)) {\n        break;\n      }\n\n      result.push(returnUnicode ? unicode : ascii);\n      number -= digit;\n    }\n  });\n  return result.join('');\n};\n\nexport default toRomanNumeral;\n","export default () => 0;\n","export default function assertNever(x: never): never {\n  throw new Error('Unexpected value: ' + x);\n}\n","export const hexOffset = Math.sqrt(3) / 2;\n\nexport const hexagonPoints = () => [\n  { y: 0, x: 1 },\n  { y: 0.5, x: hexOffset + 1 },\n  { y: 1.5, x: hexOffset + 1 },\n  { y: 2, x: 1 },\n  { y: 1.5, x: -hexOffset + 1 },\n  { y: 0.5, x: -hexOffset + 1 },\n];\n","import { assertNever } from '../lib';\nimport { calculateCoordinate } from './coordinate';\nimport _ from 'lodash';\n\nexport enum GridType {\n  SQUARE,\n  HEX,\n}\n\nexport const isGridType = (c: any): c is GridType =>\n  typeof c === 'number' && GridType[c] != null;\n\nexport enum Topology {\n  LIMITED,\n  TOROIDAL,\n}\n\nexport const isTopology = (c: any): c is Topology =>\n  typeof c === 'number' && Topology[c] != null;\n\nexport type Grid = {\n  cols: number;\n  rows: number;\n  type: GridType;\n  topology: Topology;\n};\n\nconst resolver = (a: number, b: number) => (a << 16) | b;\n\nconst hexNeighbours = (\n  cols: number,\n  origo: number\n): Array<{\n  row: number;\n  col: number;\n}> => {\n  const origin = calculateCoordinate(cols, origo);\n  const [even, odd] = [\n    [\n      [1, 0],\n      [1, -1],\n      [0, -1],\n      [-1, -1],\n      [-1, 0],\n      [0, 1],\n    ],\n    [\n      [1, 1],\n      [1, 0],\n      [0, -1],\n      [-1, 0],\n      [-1, 1],\n      [0, 1],\n    ],\n  ];\n\n  const neighbours = (origin.row & 1) === 0 ? even : odd;\n  return neighbours\n    .map(([row, col]) => ({\n      row: row + origin.row,\n      col: col + origin.col,\n    }))\n    .flat(1);\n};\n\nconst hexNeighboursMemoized = _.memoize(hexNeighbours, resolver);\n\nconst squareNeighbours = (\n  cols: number,\n  origo: number\n): Array<{\n  row: number;\n  col: number;\n}> => {\n  const origin = calculateCoordinate(cols, origo);\n  return [-1, 0, 1]\n    .map(col =>\n      [-1, 0, 1].map(row => ({\n        row: row + origin.row,\n        col: col + origin.col,\n      }))\n    )\n    .flat(1);\n};\n\nconst squareNeighboursMemoized = _.memoize(squareNeighbours, resolver);\n\nexport const getNeighbourMatrix = (\n  type: GridType\n): ((cols: number, origo: number) => Array<{ row: number; col: number }>) => {\n  switch (type) {\n    case GridType.SQUARE:\n      return squareNeighboursMemoized;\n    case GridType.HEX:\n      return hexNeighboursMemoized;\n  }\n  assertNever(type);\n};\n","export type CoordinateObject = { row: number; col: number };\nexport type Coordinate = number | CoordinateObject;\n\nexport const calculateCoordinate = (cols: number, index: Coordinate) => {\n  if (typeof index === 'object') {\n    return index;\n  }\n  const col = index % cols;\n  const row = (index - col) / cols;\n  return { col, row };\n};\n\nexport const calculateIndex = (cols: number, coordinate: Coordinate): number =>\n  typeof coordinate === 'number'\n    ? coordinate\n    : coordinate.col + cols * coordinate.row;\n","import { immerable } from 'immer';\nimport { Coordinate, calculateIndex } from './coordinate';\nimport { CellRecord, CellStateStats } from './cell';\nimport { Grid } from './grid';\n\nexport class GameError {\n  readonly cause?: Error;\n  readonly message: string;\n  [immerable] = true;\n  constructor(msg: string, err?: Error) {\n    this.message = msg;\n    this.cause = Object.freeze(err);\n  }\n}\n\nexport enum GameState {\n  NOT_INITIALIZED,\n  INITIALIZED,\n  PLAYING,\n  PAUSED,\n  COMPLETED,\n  GAME_OVER,\n  ERROR,\n  DEMO,\n}\n\nexport type Level = Grid & {\n  mines: number;\n};\n\nexport type CellArray = Uint16Array;\n\nexport type GameRecord = {\n  cells: CellArray;\n  state: GameState;\n  level: Readonly<Level>;\n  cellStates: CellStateStats;\n  error: GameError | null;\n  version: number;\n  onGameOver: () => void;\n};\n\nexport const getCell = (\n  {\n    level,\n    cells,\n  }:\n    | {\n        level: Level;\n        cells: CellArray;\n      }\n    | GameRecord,\n  coordinate: Coordinate\n): CellRecord => {\n  return cells[calculateIndex(level.cols, coordinate)] as CellRecord;\n};\n","export type NumThreats = 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8;\n\nexport function isNumThreats(n: any): n is NumThreats {\n  return Number.isInteger(Number(n)) && n >= 0 && n <= 8;\n}\n\ntype value =\n  | 0\n  | 1\n  | 2\n  | 3\n  | 4\n  | 5\n  | 6\n  | 7\n  | 8\n  | 9\n  | 10\n  | 11\n  | 12\n  | 13\n  | 14\n  | 15;\n\nexport type Mine = Exclude<value, 0>;\n\nexport enum CellState {\n  NEW,\n  OPEN,\n  FLAGGED,\n  UNCERTAIN,\n  EXPLODED,\n}\n\nexport type CellStateStats = { [key in CellState]: number };\n\n// ?       | State   | Mine    | Threats\n// --------|---------|---------|--------\n// 0 0 0 0 | 0 0 0 0 | 0 0 0 0 | 0 0 0 0\n// f e d c | b a 9 8 | 7 6 5 4 | 3 2 1 0\n\n// const ?Mask = 12;\nconst stateMask = 8;\nconst mineMask = 4;\nconst threatsMask = 0;\n\ntype mask = typeof stateMask | typeof mineMask | typeof threatsMask;\n\nexport const setValue = (mask: mask, prev: number, value: value) => {\n  if (value < 0 || value > 0b1111) {\n    throw new RangeError(`Invalid value: ${value}`);\n  }\n  return (prev & ~(0xf << mask)) | (value << mask);\n};\n\nconst getValue = (mask: mask, cell: number): value =>\n  ((cell & (0xf << mask)) >> mask) as value;\n\nexport const setState = (prev: number, state: CellState) => {\n  if (CellState[state] == null) {\n    throw new RangeError(`Unknown state ${state}`);\n  }\n  return setValue(stateMask, prev, state);\n};\n\nexport const getState = (cell: number): CellState => getValue(stateMask, cell);\n\nexport const setMine = (prev: number, mine: value) =>\n  setValue(mineMask, prev, mine);\n\nexport const getMine = (cell: number): Mine | undefined => {\n  const mine = getValue(mineMask, cell);\n  return mine !== 0 ? mine : undefined;\n};\n\nexport const setThreats = (prev: number, threats: NumThreats) => {\n  if (!isNumThreats(threats)) {\n    throw new RangeError(`Invalid threat count: ${threats}`);\n  }\n\n  return setValue(threatsMask, prev, threats);\n};\n\nexport const getThreats = (cell: number): NumThreats => {\n  const threats = getValue(threatsMask, cell);\n  if (!isNumThreats(threats)) {\n    throw new RangeError(`Invalid threat count: ${threats}`);\n  }\n\n  return threats;\n};\n\nexport const toObject = (cell: number): CellRecordObject => {\n  const mine = getMine(cell);\n  const threatCount = mine !== undefined ? getThreats(cell) : undefined;\n  const state = getState(cell);\n\n  return {\n    state,\n    threatCount,\n    mine,\n  };\n};\n\nexport const fromObject = (o: CellRecordObject) =>\n  setThreats(setMine(setState(0, o.state), o.mine ?? 0), o.threatCount ?? 0);\n\nexport type CellRecordObject = {\n  state: CellState;\n  threatCount?: NumThreats;\n  mine?: Mine;\n};\n\nexport type CellRecord = number;\n","import theme from './theme.module.scss';\n\nexport enum Mode {\n  DARK,\n  LIGHT,\n  AUTO,\n}\n\ntype PartialTheme = {\n  name: string;\n  styles: Array<{ readonly [key: string]: string }>;\n  mode?: Mode;\n  symbols?: {\n    flag: string;\n  };\n};\n\nexport type ITheme = Readonly<\n  PartialTheme & {\n    classNames: ReadonlyArray<string>;\n  }\n>;\n\nexport const isTheme = (c: any): c is ITheme =>\n  c != null &&\n  typeof c.name === 'string' &&\n  (c.mode == null || Mode[c.mode] != null) &&\n  Array.isArray(c.styles) &&\n  (c.styles as Array<any>).find(v => typeof v !== 'string') != null &&\n  (c.symbols == null || typeof c.symbols.flag === 'string');\n\nexport const createTheme = (partial: PartialTheme): ITheme => {\n  return Object.freeze({\n    ...partial,\n    classNames: Object.freeze(partial.styles.map(t => t.Theme)),\n  });\n};\n\nconst simple: ITheme = createTheme({\n  name: 'Simple',\n  styles: [theme],\n});\n\nexport default simple;\n","import solarized from './solarized.module.scss';\nimport _dark from './dark.module.scss';\nimport _light from './light.module.scss';\nimport _auto from './auto.module.scss';\nimport { ITheme, Mode, createTheme } from '../theme';\n\nexport const dark: ITheme = createTheme({\n  name: 'Solarized dark',\n  styles: [solarized, _dark],\n  mode: Mode.DARK,\n});\n\nexport const light: ITheme = createTheme({\n  name: 'Solarized light',\n  styles: [solarized, _light],\n  mode: Mode.LIGHT,\n});\n\nexport const auto: ITheme = createTheme({\n  name: 'Solarized (auto)',\n  styles: [solarized, _auto],\n  mode: Mode.AUTO,\n});\n\nexport default auto;\n","import simple from './theme';\n\nimport solarized, * as Solarized from './Solarized';\n\nexport const defaultTheme = solarized;\n\nexport default () => {\n  return [simple, solarized, Solarized.dark, Solarized.light];\n};\n","import { SettingsContextValues } from '.';\nimport React from 'react';\n\nconst SETTINGS_STORAGE_KEY = 'Minesweeper.settings';\n\nfunction validateType(type: string) {\n  if (!['string', 'number', 'boolean', 'object'].includes(type)) {\n    throw new TypeError(`Unable to save value of type '${type}`);\n  }\n}\n\nexport function loadValue(type: string, key: string) {\n  const nskey = `${SETTINGS_STORAGE_KEY}.${key}`;\n  try {\n    validateType(type);\n    const json = localStorage.getItem(nskey);\n    switch (type) {\n      case 'number': {\n        const v = Number(json);\n        return isNaN(v) ? undefined : v;\n      }\n      case 'string':\n        return json;\n      case 'boolean':\n      case 'object': {\n        const parsed = json != null ? JSON.parse(json) : undefined;\n        if (type === 'boolean') {\n          return parsed === true;\n        }\n        return typeof parsed === 'object' ? parsed : undefined;\n      }\n      default:\n        console.warn(`Unhandled type ${type}`);\n    }\n  } catch (err) {\n    try {\n      localStorage.removeItem(nskey);\n    } catch (_err) {}\n    console.warn({ err, type, key });\n  }\n  return;\n}\n\nexport function saveValue(type: string, key: string, value: any) {\n  try {\n    validateType(type);\n    localStorage.setItem(\n      `${SETTINGS_STORAGE_KEY}.${key}`,\n      type === 'object' ? JSON.stringify(value) : value\n    );\n  } catch (err) {\n    console.warn(err);\n  }\n}\ntype Primitive = number | string | boolean;\n\nfunction useLocalStorage<T extends Primitive>(\n  key: keyof SettingsContextValues,\n  defaultValue: T\n): [T, (value: T) => void] {\n  const type = typeof defaultValue;\n  const fromLocalStorage = loadValue(type, key);\n  const [value, setValue] = React.useState(fromLocalStorage ?? defaultValue);\n\n  return [\n    value,\n    React.useCallback(\n      v => {\n        setValue(v);\n        saveValue(type, key, v);\n      },\n      [key, type]\n    ),\n  ];\n}\n\nexport default useLocalStorage;\n","import React, { createContext } from 'react';\nimport Themes, { defaultTheme } from '../../../Theme';\nimport { ITheme, isTheme } from '../../../Theme/theme';\nimport useLocalStorage from './useLocalStorage';\nimport _ from 'lodash';\n\nexport type ThemeContext = {\n  theme: ITheme;\n  setTheme: (theme: ITheme) => void;\n};\n\nexport const ThemeContext = createContext<ThemeContext>({\n  theme: defaultTheme,\n  setTheme: _.noop,\n});\nconst themes = new Map(Themes().map(t => [t.name, t]));\n\nexport const ThemeContextProvider = (props: { children?: React.ReactNode }) => {\n  let [name, setTheme] = useLocalStorage('theme', defaultTheme.name);\n  let theme = themes.get(name);\n  if (!isTheme(theme)) {\n    if (theme != null) console.warn('Invalid theme', { name, theme });\n    theme = defaultTheme;\n  }\n  return (\n    <ThemeContext.Provider\n      value={{\n        theme,\n        setTheme: (t: ITheme) => setTheme(t.name),\n      }}\n    >\n      {props.children}\n    </ThemeContext.Provider>\n  );\n};\n\nexport default ThemeContextProvider;\n","import React, { createContext } from 'react';\nimport useLocalStorage from './useLocalStorage';\nimport _ from 'lodash';\n\nexport type FitWindowContext = {\n  fitWindow: boolean;\n  setFitWindow: (fitWindow: boolean) => void;\n};\nconst defaultFitWindow = false;\n\nexport const FitWindowContext = createContext<FitWindowContext>({\n  fitWindow: defaultFitWindow,\n  setFitWindow: _.noop,\n});\n\nexport const FitWindowContextProvider = (props: {\n  children?: React.ReactNode;\n}) => {\n  const [fitWindow, setFitWindow] = useLocalStorage(\n    'fitWindow',\n    defaultFitWindow as boolean\n  );\n  return (\n    <FitWindowContext.Provider value={{ fitWindow, setFitWindow }}>\n      {props.children}\n    </FitWindowContext.Provider>\n  );\n};\n\nexport default FitWindowContextProvider;\n","import React, { createContext } from 'react';\nimport { NumeralSystem, isNumeralSystem } from '../../../lib';\nimport useLocalStorage from './useLocalStorage';\nimport _ from 'lodash';\n\nexport type NumeralSystemContext = {\n  numeralSystem: NumeralSystem;\n  setNumeralSystem: (NumeralSystem: NumeralSystem) => void;\n};\nconst defaultNumeralSystem = NumeralSystem.ascii;\n\nexport const NumeralSystemContext = createContext<NumeralSystemContext>({\n  numeralSystem: defaultNumeralSystem,\n  setNumeralSystem: _.noop,\n});\n\nexport const NumeralSystemContextProvider = (props: {\n  children?: React.ReactNode;\n}) => {\n  let [numeralSystem, setNumeralSystem] = useLocalStorage(\n    'numeralSystem',\n    defaultNumeralSystem\n  );\n  if (!isNumeralSystem(numeralSystem)) {\n    numeralSystem = defaultNumeralSystem;\n  }\n  return (\n    <NumeralSystemContext.Provider value={{ numeralSystem, setNumeralSystem }}>\n      {props.children}\n    </NumeralSystemContext.Provider>\n  );\n};\n\nexport default NumeralSystemContextProvider;\n","import React, { createContext } from 'react';\nimport useLocalStorage from './useLocalStorage';\nimport _ from 'lodash';\n\nexport type RotateContext = {\n  rotate: boolean;\n  setRotate: (rotate: boolean) => void;\n};\nconst defaultRotate = false;\n\nexport const RotateContext = createContext<RotateContext>({\n  rotate: defaultRotate,\n  setRotate: _.noop,\n});\n\nexport const RotateContextProvider = (props: {\n  children?: React.ReactNode;\n}) => {\n  const [rotate, setRotate] = useLocalStorage(\n    'rotate',\n    defaultRotate as boolean\n  );\n  return (\n    <RotateContext.Provider value={{ rotate, setRotate }}>\n      {props.children}\n    </RotateContext.Provider>\n  );\n};\n\nexport default RotateContextProvider;\n","import React from 'react';\nimport ThemeContextProvider, { ThemeContext } from './theme';\nimport FitWindowContextProvider, { FitWindowContext } from './fitWindow';\nimport NumeralSystemContextProvider, {\n  NumeralSystemContext,\n} from './numeralSystem';\nimport RotateContextProvider, { RotateContext } from './rotate';\nimport { OmitByValueType } from '../../../lib';\n\nexport {\n  FitWindowContextProvider,\n  ThemeContextProvider,\n  NumeralSystemContextProvider,\n};\nexport * from './fitWindow';\n\nexport * from './theme';\n\nexport * from './numeralSystem';\n\nexport * from './rotate';\n\nexport * from './useLocalStorage';\n\ntype Provider<P extends object> = (\n  props: React.PropsWithChildren<P>\n) => JSX.Element;\nconst useProviders = <T extends object>(\n  ...Providers: Provider<React.Props<T>>[]\n) => (Child: React.FC<T>) => (props: T & JSX.IntrinsicAttributes) =>\n  Providers.reduce(\n    (acc, Provider) => <Provider>{acc}</Provider>,\n    <Child {...props} />\n  );\n\nexport const createSettingsContext: <T extends object>(\n  Child: React.FC<T>\n) => (props: T & JSX.IntrinsicAttributes) => JSX.Element = useProviders(\n  FitWindowContextProvider,\n  ThemeContextProvider,\n  NumeralSystemContextProvider,\n  RotateContextProvider\n);\n\nexport type SettingsContext = ThemeContext &\n  NumeralSystemContext &\n  FitWindowContext &\n  RotateContext;\n\nexport type SettingsContextValues = OmitByValueType<SettingsContext, Function>;\n\nexport const useSettingsContext = () => {\n  const { theme: initialTheme, setTheme } = React.useContext(ThemeContext);\n  const { fitWindow: initialFitWindow, setFitWindow } = React.useContext(\n    FitWindowContext\n  );\n  const {\n    numeralSystem: initialNumeralSystem,\n    setNumeralSystem,\n  } = React.useContext(NumeralSystemContext);\n\n  const { rotate: initialRotate, setRotate } = React.useContext(RotateContext);\n\n  const state: SettingsContext = {\n    fitWindow: initialFitWindow,\n    setFitWindow,\n    theme: initialTheme,\n    setTheme,\n    numeralSystem: initialNumeralSystem,\n    setNumeralSystem,\n    rotate: initialRotate,\n    setRotate,\n  };\n\n  return {\n    state,\n    setState({\n      theme,\n      fitWindow,\n      numeralSystem,\n      rotate,\n    }: SettingsContextValues): void {\n      setTheme(theme);\n      setFitWindow(fitWindow);\n      setNumeralSystem(numeralSystem);\n      setRotate(rotate);\n    },\n  };\n};\n\nexport default createSettingsContext;\n","import {\n  CellArray,\n  GameError,\n  GameRecord,\n  GameState,\n  Level,\n  getCell,\n} from './board';\nimport { Coordinate, calculateIndex } from './coordinate';\nimport {\n  CellRecord,\n  CellRecordObject,\n  CellState,\n  CellStateStats,\n  Mine,\n  NumThreats,\n  fromObject,\n  getMine,\n  getState,\n  getThreats,\n  setMine,\n  setState,\n  setThreats,\n} from './cell';\nimport {\n  Grid,\n  GridType,\n  Topology,\n  getNeighbourMatrix,\n  isGridType,\n  isTopology,\n} from './grid';\nimport produce from 'immer';\nimport _ from 'lodash';\nimport { assertNever, zero } from '../lib';\nimport { saveValue } from '../store/contexts/settings';\n\nconst createLevel = (level?: Partial<Level>) =>\n  Object.freeze({\n    cols: 0,\n    rows: 0,\n    mines: 0,\n    type: GridType.SQUARE,\n    topology: Topology.LIMITED,\n    ...level,\n  });\n\nconst createCellStateStats = (\n  stats?: Partial<CellStateStats>\n): CellStateStats => ({\n  [CellState.NEW]: 0,\n  [CellState.OPEN]: 0,\n  [CellState.FLAGGED]: 0,\n  [CellState.UNCERTAIN]: 0,\n  [CellState.EXPLODED]: 0,\n  ...stats,\n});\n\nconst createBoard: (game: Partial<GameRecord>) => GameRecord = game =>\n  produce(game, (draft: Partial<GameRecord>) => ({\n    cells: new Uint16Array(),\n    state: GameState.NOT_INITIALIZED,\n    level: createLevel(),\n    cellStates: createCellStateStats(),\n    error: null,\n    version: 0,\n    onGameOver: _.noop,\n    ...draft,\n  }));\n\nconst getCellStates = (cells: CellArray) =>\n  createCellStateStats(_.countBy(cells, cell => getState(cell)));\n\nconst createEmptyCells = ({ cols, rows }: Level): CellArray =>\n  new Uint16Array(rows * cols);\n\nfunction initialize(\n  game: Pick<GameRecord, 'level' | 'onGameOver'>,\n  origin: Coordinate,\n  state: GameState.INITIALIZED | GameState.PLAYING\n): GameRecord {\n  const { level, onGameOver } = game;\n  const cells = createEmptyCells(level);\n  const { cols, rows, mines } = level;\n\n  const mineSet = new Set<number>()\n    // Make sure we don't start with a bang\n    .add(calculateIndex(cols, origin));\n  let iterations = 0;\n  const dim = cols * rows;\n  while (mineSet.size <= mines) {\n    if (iterations++ > mines * 10) {\n      throw new Error('Infinite loop?');\n    }\n    const coordinate = randomInt(dim);\n    if (!mineSet.has(coordinate)) {\n      mineSet.add(coordinate);\n      cells[coordinate] = setMine(\n        cells[coordinate],\n        (randomInt(14) + 1) as Mine\n      );\n    }\n  }\n\n  return createBoard({\n    level: createLevel(level),\n    cells: cells.map((cell, coord) => {\n      const threatCount = countThreats({ level, cells }, coord);\n      return threatCount !== undefined ? setThreats(cell, threatCount) : cell;\n    }),\n    cellStates: createCellStateStats({ [CellState.NEW]: mines }),\n    state,\n    onGameOver,\n  });\n}\n\nfunction updateCell(\n  board: GameRecord,\n  [coordinate, newCell]: [Coordinate, CellRecord]\n): void {\n  const oldCell = getCell(board, coordinate);\n  const oldThreatCount = getThreats(oldCell);\n  const newThreatCount = getThreats(newCell);\n  if (board.state === GameState.PLAYING && oldThreatCount !== newThreatCount) {\n    throw new Error(`Expected ${newThreatCount}, got ${oldThreatCount}`);\n  }\n  board.cells[calculateIndex(board.level.cols, coordinate)] = newCell;\n}\n\nfunction countThreats(\n  board:\n    | Pick<GameRecord, 'level' | 'cells'>\n    | { level: Level; cells: [number, CellRecord][] },\n  p: number\n): NumThreats | undefined {\n  if (getMine(board.cells[p]! as number) !== undefined) {\n    return undefined;\n  }\n  let threats: NumThreats = 0;\n  visitNeighbours(board.level, p, coordinate => {\n    const cell = board.cells[coordinate]! as number;\n    if (getMine(cell) !== undefined) {\n      threats++;\n    }\n  });\n  if (threats < 0 || threats > 8) {\n    throw new Error(`Unexpected threat number: ${threats}`);\n  }\n\n  return threats;\n}\n\nfunction randomInt(max: number): number {\n  return Math.floor(Math.random() * Math.floor(max));\n}\n\ntype GameCellCallback = (coordinate: number) => void;\n\nconst getNeighbours = (\n  { rows, cols, type, topology }: Grid,\n  origin: Coordinate\n) => {\n  let neighbours = getNeighbourMatrix(type)(cols, calculateIndex(cols, origin));\n  const torusAdjust = (n: number, max: number) =>\n    n === -1 ? max - 1 : n === max ? 0 : n;\n  switch (topology) {\n    case Topology.TOROIDAL:\n      neighbours = neighbours.map(({ row, col }) => ({\n        row: torusAdjust(row, rows),\n        col: torusAdjust(col, cols),\n      }));\n\n      break;\n    case Topology.LIMITED:\n      neighbours = neighbours.filter(\n        ({ row, col }) => !(col >= cols || col < 0 || row >= rows || row < 0)\n      );\n\n      break;\n\n    default:\n      assertNever(topology);\n  }\n\n  return neighbours\n    .map(({ row, col }) => col + cols * row)\n    .filter(c => c !== origin);\n};\n\nfunction visitNeighbours(\n  level: Grid,\n  origin: Coordinate,\n  ...callbacks: Array<GameCellCallback>\n) {\n  if (callbacks.length === 0) {\n    return;\n  }\n\n  getNeighbours(level, origin).forEach(coordinate =>\n    callbacks.forEach(cb => cb(coordinate))\n  );\n}\n\nexport enum Cmd {\n  POKE,\n  FLAG,\n  PAUSE,\n  UNPAUSE,\n}\n\nexport type CmdName = keyof typeof Cmd;\n\nexport const isCmdName = (s: string): s is CmdName => Cmd[s as CmdName] != null;\n\nfunction openNeighbours(origin: Coordinate, board: GameRecord): void {\n  const cell = getCell(board, origin);\n  const { level } = board;\n  let flaggedNeighboursCount = 0;\n  visitNeighbours(level, origin, coord => {\n    const c = getCell(board, coord)!;\n    const state = getState(c);\n    if (state === CellState.FLAGGED || state === CellState.EXPLODED) {\n      flaggedNeighboursCount++;\n    }\n  });\n  if (flaggedNeighboursCount < getThreats(cell)!) {\n    return;\n  }\n\n  visitNeighbours(level, origin, coord => {\n    const c = getCell(board, coord)!;\n    const state = getState(c);\n    if (state === CellState.NEW || state === CellState.UNCERTAIN) {\n      toggleOpen(coord, board);\n    }\n  });\n}\n\nfunction expectUnPause(command: Cmd, board: GameRecord): GameRecord {\n  if (command !== Cmd.UNPAUSE) {\n    throw new Error(`Illegal command: expected ${Cmd[Cmd.UNPAUSE]}`);\n  }\n  if (board.state !== GameState.PAUSED) {\n    throw new Error(`Invalid state: expected ${GameState.PAUSED}`);\n  }\n  return produce(board, draft => {\n    draft.state = GameState.PLAYING;\n  });\n}\n\nfunction nextState(\n  command: Cmd,\n  [coordinate, board]: [Coordinate, GameRecord]\n): GameRecord {\n  if (board.state === GameState.NOT_INITIALIZED) {\n    board = nextState(command, [\n      coordinate,\n      initialize(board, coordinate, GameState.PLAYING),\n    ]);\n    return board;\n  }\n\n  if (command === Cmd.PAUSE || command === Cmd.UNPAUSE) {\n    if (![GameState.PAUSED, GameState.PLAYING].includes(board.state)) {\n      return board;\n    }\n\n    return produce(board, draft => {\n      draft.state =\n        command === Cmd.PAUSE ? GameState.PAUSED : GameState.PLAYING;\n    });\n  }\n\n  return produce(board, (draft: GameRecord) => {\n    switch (command) {\n      case Cmd.POKE:\n        toggleOpen(coordinate, draft);\n        break;\n      case Cmd.FLAG:\n        toggleFlagged(coordinate, draft);\n        break;\n      default:\n        assertNever(command);\n    }\n\n    const stats = getCellStates(draft.cells);\n    draft.cellStates = stats;\n    if (\n      draft.cellStates[CellState.EXPLODED] >\n      board.cellStates[CellState.EXPLODED]\n    ) {\n      draft.state = GameState.GAME_OVER;\n      try {\n        board.onGameOver();\n      } catch (err) {\n        console.warn('Unhandled exception in onGameOver handler', err);\n      }\n    } else if (getState(getCell(draft, coordinate)!) === CellState.OPEN) {\n      const openPlusMines = draft.level.mines + stats[CellState.OPEN];\n      const numCells = draft.level.cols * draft.level.rows;\n      const done = openPlusMines === numCells;\n      draft.state = done ? GameState.COMPLETED : draft.state;\n    }\n  });\n}\n\nfunction toggleOpen(coordinate: Coordinate, board: GameRecord): void {\n  switch (board.state) {\n    case GameState.PLAYING:\n      break;\n    case GameState.INITIALIZED:\n    case GameState.PAUSED:\n    case GameState.GAME_OVER:\n    case GameState.COMPLETED:\n    case GameState.NOT_INITIALIZED:\n    case GameState.ERROR:\n    case GameState.DEMO:\n      return;\n    default:\n      assertNever(board.state);\n  }\n  const cell: CellRecord = getCell(board, coordinate);\n  const state = getState(cell);\n  if (state === CellState.FLAGGED) {\n    return;\n  }\n\n  if (state === CellState.OPEN) {\n    openNeighbours(coordinate, board);\n    return;\n  }\n\n  let newState: CellState = state;\n  const mine = getMine(cell);\n  switch (state) {\n    case CellState.NEW:\n    case CellState.UNCERTAIN:\n      newState = mine !== undefined ? CellState.EXPLODED : CellState.OPEN;\n      break;\n    case CellState.EXPLODED:\n      return;\n\n    default:\n      assertNever(state);\n  }\n\n  updateCell(board, [coordinate, setState(cell, newState)]);\n\n  if (getThreats(cell) === 0 && newState !== CellState.EXPLODED) {\n    const predicate = (cellRecord: CellRecord) => {\n      const s = getState(cellRecord);\n      return s === CellState.NEW || s === CellState.UNCERTAIN;\n    };\n    const visitor = ([coord, c]: [Coordinate, CellRecord]) => {\n      if (getMine(c) !== undefined) {\n        throw new Error(`Expected cell not to be mined`);\n      }\n      if (predicate(c)) {\n        updateCell(board, [coord, setState(c, CellState.OPEN)]);\n        if (getThreats(c) === 0) {\n          getNeighbours(board.level, coord).forEach(cc => {\n            const cr = board.cells[cc]!;\n            if (predicate(cr)) {\n              visitor([cc, cr]);\n            }\n          });\n        }\n      }\n    };\n    // Must use original cell state to avoid infinite recursion\n    // One of the pitfalls of mutability\n    visitor([coordinate, cell]);\n  }\n}\n\nfunction toggleFlagged(coordinate: Coordinate, board: GameRecord): void {\n  const cell = getCell(board, coordinate);\n  switch (board.state) {\n    case GameState.PLAYING:\n      break;\n    case GameState.INITIALIZED:\n    case GameState.PAUSED:\n    case GameState.GAME_OVER:\n    case GameState.COMPLETED:\n    case GameState.NOT_INITIALIZED:\n    case GameState.ERROR:\n    case GameState.DEMO:\n      return;\n    default:\n      assertNever(board.state);\n  }\n\n  const state = getState(cell);\n  let newCellState: CellState = state;\n  switch (state) {\n    case CellState.FLAGGED:\n      newCellState = CellState.UNCERTAIN;\n      break;\n    case CellState.UNCERTAIN:\n      newCellState = CellState.NEW;\n      break;\n    case CellState.NEW:\n      newCellState = CellState.FLAGGED;\n      break;\n    case CellState.EXPLODED:\n    case CellState.OPEN:\n      return;\n    default:\n      assertNever(state);\n  }\n\n  updateCell(board, [coordinate, setState(cell, newCellState)]);\n\n  return;\n}\n\nexport type NextStateFunction = (\n  cmd: Cmd,\n  currentState: [Coordinate, GameRecord],\n  currentVersion: number\n) => GameRecord;\n\ntype IValidationError = {\n  field: string;\n  value: any;\n  msg: string;\n};\n\nexport const MAX_LEVEL = 30;\nexport const MIN_LEVEL = 3;\n\nexport const maxMines = ({ rows, cols }: { rows: number; cols: number }) =>\n  Math.floor(rows * cols * 0.5);\n\nexport const minMines = ({ rows, cols }: { rows: number; cols: number }) =>\n  Math.ceil(rows * cols * 0.1);\n\nexport const validateLevel = ({\n  rows,\n  cols,\n  mines,\n  topology,\n  type,\n}: Level): void => {\n  const errors = [];\n  if (rows < MIN_LEVEL) {\n    errors.push({ field: 'rows', value: rows, msg: 'Too small' });\n  } else if (rows > MAX_LEVEL) {\n    errors.push({ field: 'rows', value: rows, msg: 'Too large' });\n  }\n  if (cols < MIN_LEVEL) {\n    errors.push({ field: 'cols', value: cols, msg: 'Too small' });\n  } else if (rows > MAX_LEVEL) {\n    errors.push({ field: 'cols', value: cols, msg: 'Too large' });\n  }\n  if (mines < minMines({ rows, cols })) {\n    errors.push({ field: 'mines', value: mines, msg: 'Too small' });\n  } else if (mines > maxMines({ rows, cols })) {\n    errors.push({ field: 'mines', value: mines, msg: 'Too large' });\n  }\n  if (!isTopology(topology)) {\n    errors.push({ field: 'topology', value: topology, msg: 'Invalid' });\n  }\n  if (!isGridType(type)) {\n    errors.push({ field: 'type', value: type, msg: 'Invalid' });\n  }\n\n  if (errors.length > 0) {\n    throw new ValidationError('Invalid level', errors);\n  }\n};\n\nexport class ValidationError extends GameError {\n  public readonly errors: ReadonlyArray<IValidationError>;\n  constructor(msg: string, errors: IValidationError[]) {\n    super(msg);\n    this.errors = Object.freeze(errors.map(e => Object.freeze(e)));\n  }\n}\n\nexport function createGame(\n  level: Level,\n  onGameOver: () => void\n): { board: GameRecord; nextState: NextStateFunction } {\n  try {\n    validateLevel(level);\n    saveValue('object', 'level', level);\n\n    const cells = createEmptyCells(level).map(zero);\n\n    const func: NextStateFunction = (cmd, [coordinate, game]) => {\n      try {\n        switch (game.state) {\n          case GameState.PAUSED:\n            return expectUnPause(cmd, game);\n        }\n        if (game.state === GameState.ERROR) {\n          return game;\n        }\n        return produce(nextState(cmd, [coordinate, game]), draft => {\n          draft.version++;\n        });\n      } catch (err) {\n        console.error(err);\n        return produce(game, draft => {\n          draft.error =\n            err instanceof GameError\n              ? err\n              : new GameError(`Command ${Cmd[cmd]} failed`, err);\n          draft.state = GameState.ERROR;\n        });\n      }\n    };\n    return {\n      board: createBoard({ level: createLevel(level), cells, onGameOver }),\n      nextState: (cmd, [coordinate, game], version) => {\n        if (\n          game.state !== GameState.NOT_INITIALIZED &&\n          version !== game.version\n        ) {\n          return produce(game, draft => {\n            draft.error = new GameError('Version mismatch');\n            draft.state = GameState.ERROR;\n          });\n        }\n        return func(cmd, [coordinate, game], version);\n      },\n    };\n  } catch (err) {\n    if (err instanceof ValidationError) {\n      return {\n        board: createBoard({\n          level: createLevel(level),\n          cells: new Uint16Array(),\n          onGameOver,\n          state: GameState.ERROR,\n          error: err,\n        }),\n        nextState: (_cmd, [_coordinate, game]) => game,\n      };\n    }\n    throw err;\n  }\n}\n\nexport const legend: () => {\n  board: GameRecord;\n  nextState: NextStateFunction;\n} = () => {\n  const cells = ([\n    ...[...new Array(8)].map((_ignore, i) => ({\n      state: CellState.OPEN,\n      threatCount: (i + 1) as NumThreats,\n    })),\n    {\n      state: CellState.NEW,\n    },\n    { state: CellState.OPEN, threatCount: 0 },\n\n    {\n      state: CellState.FLAGGED,\n      mine: 1,\n    },\n    {\n      state: CellState.FLAGGED,\n      threatCount: 0,\n    },\n    {\n      state: CellState.UNCERTAIN,\n      mine: 1,\n    },\n    {\n      state: CellState.UNCERTAIN,\n      threatCount: 0,\n    },\n    {\n      state: CellState.EXPLODED,\n      mine: 2,\n    },\n    {\n      state: CellState.OPEN,\n      mine: 3,\n    },\n  ] as CellRecordObject[]).map(fromObject);\n\n  const cols = 4;\n  const board = createBoard({\n    cells: new Uint16Array(cells),\n    level: createLevel({\n      cols,\n      rows: Math.ceil(cells.length / cols),\n      type: GridType.HEX,\n    }),\n    state: GameState.DEMO,\n  });\n  return {\n    board,\n    nextState: () => {\n      throw new Error();\n    },\n  };\n};\n","import { enableAllPlugins } from 'immer';\n\nenableAllPlugins();\n\nexport * from './grid';\nexport * from './board';\nexport * from './coordinate';\nexport * from './cell';\nexport * from './game';\n","import React, { Component } from 'react';\n\nclass ErrorBoundary extends Component {\n  state = {\n    error: null,\n  };\n\n  static getDerivedStateFromError(error: Error) {\n    return {\n      error: error.message,\n    };\n  }\n\n  componentDidCatch(_error: Error, _errorInfo: any) {\n    // console.error('Something bad happened!', error, errorInfo);\n  }\n\n  render() {\n    if (this.state.error != null) {\n      return (\n        <div>\n          <h1>Something went wrong :(</h1>\n          <p>{this.state.error}</p>\n        </div>\n      );\n    }\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;\n","import { NumThreats, isNumThreats } from '../Game';\nimport _ from 'lodash';\n\nexport const FLAG = '☣️';\nexport const UNCERTAIN_FLAG = '❓';\nexport const UNFLAGGED_MINE = '🥺';\nexport const MISPLACED_FLAG = '💩';\nexport const NATIONAL_FLAG = '🇳🇴';\n\nexport const DISARMED_MINE = '🥰';\nexport const EXPLODED_MINE = '💀';\n\nexport const getFlag = () => {\n  const today = new Date();\n  const isMay17 = today.getDate() === 17 && today.getMonth() === 4;\n  return isMay17 ? NATIONAL_FLAG : FLAG;\n};\n\nconst componentMap = {\n  '🤒': null, // Mine\n  '😷': null, // Mine\n  '🤮': null, // Mine\n  '🤢': null, // Mine\n  '🤡': null, // Mine\n  '🧟': null, // Mine\n  '🤥': null, // Mine\n  '🤕': null, // Mine\n  '🤧': null, // Mine\n  '👻': null, // Mine\n  '🥵': null, // Mine\n  '🥶': null, // Mine\n  '👹': null, // Mine\n  '👺': null, // Mine\n  '🦠': null, // Mine\n  '\\0': null, // Separator\n  [NATIONAL_FLAG]: null, // National flag\n  [FLAG]: null, // Flag\n  [UNCERTAIN_FLAG]: null, // Flag uncertain\n  [UNFLAGGED_MINE]: null, // Not flagged at game completed\n  [MISPLACED_FLAG]: null, // Flagged incorrectly (at game over)\n  [DISARMED_MINE]: null, // Flagged and mined at game completed / game over\n  [EXPLODED_MINE]: null, // Exploded mine\n};\n\nexport const MINES = Object.freeze(\n  _.takeWhile(Object.keys(componentMap), e => e !== '\\0')\n);\n\nexport type SvgComponent = React.FunctionComponent<\n  React.SVGProps<SVGSVGElement> & {\n    title?: string | undefined;\n  }\n>;\n\nexport type SvgSymbolKey = Exclude<keyof typeof componentMap, '\\0'>;\n\nexport type SvgSymbolMap = {\n  [key in SvgSymbolKey]: SvgSymbol | null;\n};\n\nexport type SvgHref = {\n  key: SvgSymbolKey;\n  href: string;\n  external: boolean;\n};\n\nexport type SvgDataHref = {\n  key: SvgSymbolKey;\n  data: string;\n};\n\nexport type SvgSymbol = SvgHref | SvgDataHref;\n\nexport type Content = SvgSymbol | NumThreats | string | SvgSymbolKey;\n\nexport function getContent(\n  symbols: SvgSymbolMap,\n  key: SvgSymbolKey\n): Content | SvgSymbolKey {\n  const sym = symbols[key];\n  return sym ?? key;\n}\n\nexport function isSvgDataHref(\n  c: SvgHref | SvgDataHref | string\n): c is SvgDataHref {\n  if (c == null || typeof c !== 'object') {\n    return false;\n  }\n  c = c as SvgDataHref;\n  return (\n    typeof c.data === 'string' &&\n    c.data.startsWith('data:image/svg+xml;base64,')\n  );\n}\n\nexport function isSvgHref(\n  c?: Content | SvgHref | SvgDataHref | string\n): c is SvgHref {\n  if (typeof c !== 'object') {\n    return false;\n  }\n  c = c as SvgHref | undefined;\n  return typeof c?.href === 'string';\n}\n\nexport function isSvgSymbol(c: Content): c is SvgSymbol {\n  if (c == null) {\n    return false;\n  }\n  return (\n    typeof c !== 'string' &&\n    !isNumThreats(c) &&\n    (isSvgDataHref(c) || isSvgHref(c))\n  );\n}\n\nexport default componentMap;\n","import { NATIONAL_FLAG, SvgHref, SvgSymbolKey } from '..';\nimport defs from './symbols.svg';\n\nexport default function getContent(key: SvgSymbolKey): SvgHref | SvgSymbolKey {\n  if (key === NATIONAL_FLAG) {\n    return key;\n  }\n  return {\n    key,\n    href: `${defs}#${key}`,\n    external: true,\n  };\n}\n","import {\n  CellRecord,\n  CellState,\n  GameState,\n  NumThreats,\n  getMine,\n  getState,\n  getThreats,\n  isNumThreats,\n  setState,\n} from '../../../Game';\nimport { NumeralSystem } from '../../../lib';\nimport {\n  Content,\n  DISARMED_MINE,\n  EXPLODED_MINE,\n  MINES,\n  MISPLACED_FLAG,\n  SvgSymbolKey,\n  UNCERTAIN_FLAG,\n  UNFLAGGED_MINE,\n  getFlag,\n} from '../../../graphics';\nimport render from '../../../graphics/noto-emoji';\n\nexport function getContent(\n  cell: CellRecord,\n  gameState: GameState,\n  numeralSystem: NumeralSystem,\n  getSymbol: typeof render = render\n): Content {\n  if (gameState === GameState.PAUSED) {\n    return '\\u00A0';\n  }\n  const state = getState(cell);\n  const mine = getMine(cell);\n  const threatCount = getThreats(cell);\n  if (state === CellState.EXPLODED) {\n    return getSymbol(EXPLODED_MINE);\n  }\n\n  const isMined = mine !== undefined;\n  const gameWon = gameState === GameState.COMPLETED;\n  const gameOver = gameState === GameState.GAME_OVER;\n  const demo = gameState === GameState.DEMO;\n  const done = gameOver || gameWon || demo;\n  const isFlagged = state === CellState.FLAGGED;\n  if (!done && isFlagged) {\n    return getSymbol(getFlag());\n  }\n  const isDisarmed = done && isMined && isFlagged && (gameWon || gameOver);\n  if (gameWon && isMined && state !== CellState.FLAGGED) {\n    return getSymbol(UNFLAGGED_MINE);\n  }\n  if (isDisarmed) {\n    return getSymbol(DISARMED_MINE);\n  }\n  if ((gameOver || state === CellState.OPEN) && mine !== undefined) {\n    return getSymbol(MINES[mine] as SvgSymbolKey);\n  }\n  if (gameState === GameState.COMPLETED) {\n    return getContent(\n      setState(cell, CellState.OPEN),\n      GameState.PLAYING,\n      numeralSystem,\n      getSymbol\n    );\n  }\n  switch (state) {\n    case CellState.FLAGGED:\n      return getSymbol(\n        (demo || gameOver) && !isMined ? MISPLACED_FLAG : getFlag()\n      );\n    case CellState.UNCERTAIN:\n      return getSymbol(UNCERTAIN_FLAG);\n    case CellState.OPEN:\n      return isNumThreats(threatCount)\n        ? renderThreats(numeralSystem, threatCount)\n        : '\\u00A0';\n    default:\n      return '\\u00A0';\n  }\n}\n\nexport function renderThreats(numeralSystem: NumeralSystem, n: NumThreats) {\n  return String.fromCodePoint(numeralSystem + n);\n  // return formatNumber(numeralSystem, n); // String.fromCodePoint(numeralSystem + n);\n}\n","import {\n  CellState,\n  Cmd,\n  Coordinate,\n  GameState,\n  Level,\n  calculateCoordinate,\n  createGame,\n  isCmdName,\n} from '../Game';\n\nimport { assertNever, zero } from '../lib';\nimport { IState, TimingEvent } from './context';\nimport produce from 'immer';\nimport { getFitWindowCss } from '../lib';\nimport { chunk } from 'lodash';\n\nexport type PauseAction =\n  | {\n      type: 'UNPAUSE';\n    }\n  | {\n      type: 'PAUSE';\n    };\n\nexport type GameAction = {\n  type: 'POKE' | 'FLAG';\n  coordinate: Coordinate;\n};\n\nexport type CmdAction = GameAction | PauseAction;\n\nexport function isCmdAction(s: Action): s is CmdAction {\n  return isCmdName(s.type);\n}\n\nexport function isPauseAction(action: Action): action is PauseAction {\n  return action.type === 'PAUSE' || action.type === 'UNPAUSE';\n}\n\nexport function isGameAction(action: Action): action is GameAction {\n  return action.type === 'POKE' || action.type === 'FLAG';\n}\n\nexport enum ModalType {\n  SELECT_LEVEL,\n  SETTINGS,\n}\n\nexport type MenuAction =\n  | {\n      type: 'showMenu';\n    }\n  | {\n      type: 'hideMenu';\n    }\n  | {\n      type: 'toggleMenu';\n    };\n\nexport type LevelAction = {\n  type: 'setLevel';\n  level?: Level;\n};\n\nexport type FitWindowAction = {\n  type: 'fitWindow';\n};\n\nexport type FullscreenAction =\n  | {\n      type: 'requestFullscreen';\n    }\n  | {\n      type: 'exitFullscreen';\n    };\n\nexport type ModalAction =\n  | {\n      type: 'showModal';\n      modal: ModalType;\n    }\n  | {\n      type: 'closeModal';\n    };\n\nexport type Action =\n  | LevelAction\n  | FitWindowAction\n  | ModalAction\n  | CmdAction\n  | MenuAction\n  | FullscreenAction;\n\nexport const onGameOver = () => {\n  window.navigator.vibrate(\n    [...new Array(6)].map((_, i) => ((i & 1) === 0 ? 300 : 100))\n  );\n};\n\nconst calulateElapsedTime = (timingEvents: TimingEvent[]) => {\n  const t = [...timingEvents];\n  if ((t.length & 1) === 1) t.pop(); // t.push(Date.now());\n\n  return chunk(\n    t.map((v, _, arr) => v - arr[0]),\n    2\n  )\n    .map(([a, b]) => (b != null ? b - a : b))\n    .reduce((result, n) => result + n, 0);\n};\n\nconst menuActionReducer = (state: IState, action: MenuAction): IState => {\n  let { showMenu } = state;\n  switch (action.type) {\n    case 'hideMenu':\n      showMenu = false;\n      break;\n    case 'showMenu':\n      showMenu = false;\n      break;\n    case 'toggleMenu':\n      showMenu = !showMenu;\n      break;\n  }\n  if (showMenu && state.game.board.state === GameState.PLAYING) {\n    state = commandActionReducer(state, { type: 'PAUSE' });\n  }\n\n  return produce(state, draft => {\n    draft.showMenu = showMenu;\n  });\n};\n\nconst commandActionReducer = (state: IState, action: CmdAction): IState => {\n  if (action.type === 'PAUSE' && state.game.board.state === GameState.PAUSED) {\n    return state;\n  }\n\n  const isPauseCmd = isPauseAction(action);\n\n  if (\n    isPauseCmd &&\n    ![GameState.PAUSED, GameState.PLAYING].includes(state.game.board.state)\n  ) {\n    return state;\n  }\n\n  const board = state.game.nextState(\n    Cmd[action.type],\n    [isGameAction(action) ? action.coordinate : -1, state.game.board],\n    state.boardVersion\n  );\n\n  let addTimingEvent = isPauseCmd;\n  switch (state.game.board.state) {\n    case GameState.NOT_INITIALIZED:\n    case GameState.INITIALIZED:\n      addTimingEvent = action.type === 'POKE' || action.type === 'FLAG';\n      break;\n  }\n\n  return produce(state, draft => {\n    draft.boardVersion = board.version;\n    if (addTimingEvent) {\n      const tmp = [...state.timingEvents];\n      const elapsedTime = () => {\n        const len = tmp.length;\n        if (len === 0) {\n          return 0;\n        }\n        if (board.state === GameState.PLAYING && (len & 1) !== 1) {\n          console.error('Unexpected array length');\n        }\n        const elapsed = calulateElapsedTime(tmp);\n        if (board.state === GameState.PLAYING) {\n          const lastStart = tmp[len - 1];\n          return elapsed + Date.now() - lastStart;\n        }\n        return elapsed;\n      };\n\n      draft.timingEvents = tmp;\n      draft.elapsedTime = elapsedTime;\n      draft.timingEvents.push(Date.now());\n    }\n    draft.game.board = board;\n    if (state.game.board.state !== board.state) {\n      console.debug('State changed', {\n        old: GameState[state.game.board.state],\n        new: GameState[draft.game.board.state],\n      });\n    }\n  });\n};\n\ntype ReducerFunction<S, A> = (state: S, action: A) => S;\n\nconst reducer: ReducerFunction<IState, Action> = (state, action): IState => {\n  if (action.type === 'POKE' || action.type === 'FLAG') {\n    console.debug({\n      ...action,\n      ...calculateCoordinate(state.game.board.level.cols, action.coordinate),\n    });\n  } else {\n    console.debug(action);\n  }\n  if (isCmdAction(action)) {\n    return commandActionReducer(state, action);\n  }\n  const modalStackSize = state.modalStack.length;\n  switch (action.type) {\n    case 'setLevel': {\n      const game = createGame(\n        action.level != null ? action.level : state.game.board.level,\n        onGameOver\n      );\n      return produce(state, draft => {\n        draft.timingEvents = [];\n        draft.elapsedTime = zero;\n        draft.game = game;\n        draft.modalStack = [];\n      });\n    }\n    case 'showModal': {\n      let newState = state;\n      if (state.game.board.state === GameState.PLAYING) {\n        newState = commandActionReducer(newState, {\n          type: 'PAUSE',\n        });\n      }\n      return produce(newState, draft => {\n        draft.modalStack.push(action.modal);\n        draft.showMenu = false;\n      });\n    }\n    case 'closeModal':\n      if (modalStackSize === 0) {\n        console.warn('Modal stack is empty');\n        return state;\n      }\n      return produce(state, draft => {\n        draft.modalStack.pop();\n      });\n    case 'fitWindow':\n      return produce(state, draft => {\n        draft.maxBoardDimensions = getFitWindowCss(state.containerRef);\n      });\n    case 'showMenu':\n    case 'hideMenu':\n    case 'toggleMenu':\n      return menuActionReducer(state, action);\n    case 'requestFullscreen':\n      if (!document.fullscreen) {\n        document.documentElement.requestFullscreen().catch();\n      }\n      return state;\n    case 'exitFullscreen':\n      if (document.fullscreen) {\n        document.exitFullscreen().catch();\n      }\n      return state;\n  }\n  assertNever(action);\n};\n\nexport const withLives: (\n  lives: number,\n  reducer: ReducerFunction<IState, Action>\n) => ReducerFunction<IState, Action> = (\n  lives: number,\n  // eslint-disable-next-line no-shadow\n  reducer: ReducerFunction<IState, Action>\n) => (state: IState, action: Action): IState => {\n  const newState = reducer(state, action);\n  if (\n    newState.game.board.state === GameState.GAME_OVER &&\n    lives >= newState.game.board.cellStates[CellState.EXPLODED]\n  ) {\n    return produce(newState, draft => {\n      draft.game.board.state = GameState.PLAYING;\n    });\n  }\n  return newState;\n};\n\nexport default withLives(2, reducer);\n","export const onContextMenu = (e: {\n  preventDefault(): void;\n  stopPropagation(): void;\n}) => {\n  e.stopPropagation();\n  e.preventDefault();\n  return false;\n};\n","/* eslint-disable @typescript-eslint/strict-boolean-expressions */\nimport { useCallback } from 'react';\n\ntype Handlers<T> = {\n  onfulfilled?: (action: T) => void;\n  onrejected?: (action: T, err: Error) => void;\n  onfinally?: (action: T) => void;\n};\n\nconst useAsyncDispatch = <T extends unknown>(\n  dispatch?: React.Dispatch<T>,\n  handlers?: Handlers<T>\n) => {\n  return useCallback(\n    (action: T) => {\n      if (dispatch == null) {\n        return;\n      }\n      const promise = (async () => dispatch(action))();\n      if (handlers != null) {\n        const { onfinally, onfulfilled, onrejected } = handlers;\n\n        promise\n          .then(onfulfilled && (() => onfulfilled(action)))\n          .catch(onrejected && (err => onrejected(action, err)))\n          .finally(onfinally && (() => onfinally(action)));\n      }\n    },\n    [handlers, dispatch]\n  );\n};\n\nexport default useAsyncDispatch;\n/*\nexport default <T extends unknown>(\n  dispatch?: React.Dispatch<T>,\n  onfulfilled?: () => void,\n  onrejected?: (err: Error) => void,\n  onfinally?: () => void\n) =>\n  useCallback(\n    (action: T) =>\n      (async () => (dispatch != null ? dispatch(action) : undefined))()\n        .then(onfulfilled)\n        .catch(onrejected)\n        .finally(onfinally),\n    [dispatch, onfinally, onrejected, onfulfilled]\n  );\n*/\n","import React, { Dispatch, FC, MouseEvent, memo } from 'react';\nimport './SvgCell.scss';\nimport {\n  CellRecord,\n  CellState,\n  GridType,\n  getMine,\n  getState,\n  getThreats,\n} from '../../../Game';\n\nimport { CmdAction } from '../../../store';\nimport { onContextMenu } from '../..';\nimport useAsyncDispatch from '../../../Hooks/useAsyncDispatch';\nimport {\n  Content,\n  isSvgDataHref,\n  isSvgHref,\n  isSvgSymbol,\n} from '../../../graphics';\nimport { assertNever } from '../../../lib';\n\ntype CellRecordProps = {\n  coordinate: number;\n  gridType: GridType;\n  dispatch?: Dispatch<CmdAction>;\n  content: Content;\n  done?: boolean;\n  cell: CellRecord;\n};\n\nexport const cellSize = 33;\n\nconst SvgCell: FC<CellRecordProps> = props => {\n  const {\n    cell,\n    dispatch: _dispatch,\n    coordinate,\n    content,\n    gridType,\n    done,\n  } = props;\n\n  const state = getState(cell);\n  const mine = getMine(cell);\n  const threatCount = getThreats(cell);\n  const dispatch = useAsyncDispatch(_dispatch, {\n    // onfulfilled: action => console.log('fulfilled', { action }),\n    onrejected: (action, err) => console.error('rejected', { action, err }),\n    // onfinally: action => console.log('finally', { action }),\n  });\n\n  const handleClick = (e: MouseEvent) => {\n    if (dispatch != null && (state === CellState.OPEN || e.button === 0))\n      dispatch({\n        type: 'POKE',\n        coordinate,\n      });\n  };\n\n  const handleContextMenu = (e: MouseEvent) => {\n    onContextMenu(e);\n    if (dispatch != null) {\n      switch (state) {\n        case CellState.NEW:\n        case CellState.FLAGGED:\n        case CellState.UNCERTAIN:\n          window.navigator.vibrate(100);\n          return dispatch({\n            type: 'FLAG',\n            coordinate,\n          });\n      }\n    }\n  };\n\n  const role = /^\\p{Number}$/u.test(content.toString()) ? undefined : 'img';\n\n  const render = () => {\n    const background = <use href={`#${GridType[gridType]}`} className=\"cb\" />;\n    const cover = <use href={`#${GridType[gridType]}`} className=\"cc\" />;\n\n    switch (state) {\n      case CellState.NEW:\n        // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n        return done ? (\n          <>\n            {cover}\n            <Text role={role} content={content} />\n          </>\n        ) : (\n          cover\n        );\n      case CellState.FLAGGED:\n      case CellState.UNCERTAIN:\n        return (\n          <>\n            {done === true && mine !== undefined ? background : cover}\n            <Text role=\"img\" content={content} />\n          </>\n        );\n      case CellState.OPEN:\n        if (mine === undefined && threatCount === 0) {\n          return background;\n        }\n      // eslint-disable-next-line no-fallthrough\n      case CellState.EXPLODED:\n        return (\n          <>\n            {background}\n            <Text role={role} content={content} />\n          </>\n        );\n    }\n    assertNever(state);\n  };\n\n  return (\n    <svg\n      viewBox={`0 0 ${cellSize} ${cellSize}`}\n      className=\"c\"\n      onMouseDown={done === true ? undefined : handleClick}\n      onContextMenu={done === true ? undefined : handleContextMenu}\n      data-s={state}\n      data-t={threatCount !== 0 && mine === undefined ? threatCount : undefined}\n      data-m={mine !== undefined ? true : undefined}\n    >\n      {render()}\n      {/**}\n      <text\n        className=\"cc\"\n        x={cellSize / 2}\n        y={cellSize / 2}\n        dominantBaseline=\"central\"\n        textAnchor=\"middle\"\n        fill=\"white\"\n        fontSize={fontSize}\n        stroke={'black'}\n        strokeWidth={0.3}\n        fontFamily=\"monospace\"\n        fillOpacity={1}\n        transform={transform}\n      >\n        {coordinate}\n      </text>\n      {/**/}\n    </svg>\n  );\n};\n\nconst Text = React.memo(\n  (\n    props: React.SVGProps<SVGTextElement> & {\n      content?: Content;\n    }\n  ) => {\n    const domProps = {\n      ...props,\n      content: undefined,\n    };\n    const { content } = props;\n    if (content != null && isSvgSymbol(content)) {\n      const size = (cellSize * 2) / 3;\n      const center = cellSize / 2;\n      const ix = center - size / 2;\n      if (isSvgHref(content) && !content.external) {\n        return (\n          <image\n            className=\"ct\"\n            x={ix}\n            y={ix}\n            width={size}\n            height={size}\n            href={content.href}\n          />\n        );\n      }\n      return isSvgDataHref(content) ? (\n        <use\n          href={`#${content.key}`}\n          className=\"ct\"\n          x={ix}\n          y={ix}\n          width={size}\n          height={size}\n        />\n      ) : (\n        <use\n          href={`${content.href}`}\n          className=\"ct\"\n          x={ix}\n          y={ix}\n          width={size}\n          height={size}\n        />\n      );\n    }\n    return (\n      <text\n        className=\"ct\"\n        x={cellSize / 2}\n        y={cellSize / 2}\n        dominantBaseline=\"central\"\n        textAnchor=\"middle\"\n        fill=\"white\"\n        fontSize={cellSize / 2}\n        {...domProps}\n      >\n        {content}\n      </text>\n    );\n  }\n);\n\n/*\n\n\n\n  const role = /^\\p{Number}$/u.test(content.toString()) ? undefined : 'img';\n\n  return (\n    <svg\n      viewBox={`0 0 ${cellSize} ${cellSize}`}\n      className=\"SvgCell\"\n      onMouseDown={handleClick}\n      onContextMenu={handleContextMenu}\n      data-s={CellState[state]}\n      data-t={threats}\n      data-m={mined ? true : undefined}\n    >\n      <use\n        href={`#${GridType[gridType]}`}\n        scale={cellSize}\n        className=\"cb\"\n        fillOpacity={1}\n      />\n      <Text\n        role={role}\n        rotated={rotated}\n        content={\n          state === CellState.OPEN && threats === 0 ? undefined : content\n        }\n      />\n      <use\n        href={`#${GridType[gridType]}`}\n        scale={cellSize}\n        className=\"cc\"\n        fillOpacity={1}\n        strokeWidth={0}\n      />\n      {state === CellState.FLAGGED || state === CellState.UNCERTAIN ? (\n        <Text role=\"img\" content={content} rotated={rotated} />\n      ) : (\n        undefined\n      )}\n      <Text\n        className=\"cc\"\n        stroke={'black'}\n        strokeWidth={0.3}\n        fontFamily=\"monospace\"\n        fillOpacity={1}\n        rotated={rotated}\n        content={coordinate}\n      />\n    </svg>\n  );\n};\n\nconst Text = (\n  props: React.SVGProps<SVGTextElement> & {\n    rotated: boolean;\n    content?: string | number;\n  }\n) => {\n  const domProps = {\n    ...props,\n    rotated: undefined,\n    content: undefined,\n  };\n  return (\n    <text\n      className=\"ct\"\n      x={cellSize / 2}\n      y={cellSize / 2}\n      dominantBaseline=\"central\"\n      textAnchor=\"middle\"\n      fill=\"white\"\n      fontSize={cellSize / 2}\n      writingMode={\n        props.rotated ? 'sideways-lr' : 'sideways-lr'\n        //? 'sideways-lr' : 'horizontal-tb'\n      }\n      {...domProps}\n    >\n      {props.content}\n    </text>\n  );\n};\n\n\n\n\n    <div\n      role=\"button\"\n      onMouseDown={handleClick}\n      className=\"Cell\"\n      data-s={CellState[state]}\n      data-t={threats}\n      data-m={mined ? true : undefined}\n      data-mine-type={mined ? random : undefined}\n    >\n      <span {...ariaProps}>{content}</span>\n      {/*threats === 0 ? undefined : <span {...ariaProps}>{content}</span>* /}\n      </div>\n*/\nexport default memo(SvgCell);\n","import * as React from 'react';\nimport './SvgBoard.css';\nimport {\n  CellRecord,\n  CellState,\n  Coordinate,\n  GameRecord,\n  GameState,\n  GridType,\n  Topology,\n  ValidationError,\n  calculateCoordinate,\n  calculateIndex,\n  getState,\n} from '../../../Game';\nimport { Dispatch } from 'react';\nimport { CmdAction } from '../../../store';\nimport { getContent } from './getContent';\nimport SvgCell, { cellSize } from './SvgCell';\nimport { onContextMenu } from '../..';\nimport { isEqual } from 'lodash';\nimport { NumeralSystem, assertNever, hexOffset } from '../../../lib';\n\ntype IProps = {\n  board: GameRecord;\n  rotated: boolean;\n  dispatch?: Dispatch<CmdAction>;\n  style?: React.CSSProperties;\n  numeralSystem: NumeralSystem;\n};\n\nconst SvgBoard = React.forwardRef<Readonly<SVGSVGElement>, IProps>(\n  ({ dispatch, board, style, numeralSystem, rotated }, ref) => {\n    const boardState = board.state;\n\n    switch (board.state) {\n      case GameState.ERROR:\n        const error =\n          board.error != null ? board.error.message : 'Unknown error';\n        let content;\n        if (board.error instanceof ValidationError) {\n          content = (\n            <pre style={{ textAlign: 'initial' }}>\n              {JSON.stringify(board.error.errors, undefined, 2)}\n            </pre>\n            /*\n          <dl>\n            {board.error.errors.map((err, i) => (\n              <React.Fragment key={i}>\n                <dt>Field: {err.field}</dt>\n                <dd>\n                  {err.msg}: {err.value}\n                </dd>\n              </React.Fragment>\n            ))}\n          </dl>\n          */\n          );\n        }\n        const cause =\n          board.error != null &&\n          board.error.cause != null &&\n          // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n          board.error.cause.message ? (\n            <p>{board.error.cause.message}</p>\n          ) : (\n            undefined\n          );\n        if (board.error != null) {\n          console.error(board.error);\n        }\n        return (\n          <main className=\"Error\">\n            <header>\n              <h1>Error</h1>\n              <p>Something went wrong</p>\n            </header>\n            <p>{error}</p>\n            {content}\n            <section>\n              <h2>Cause</h2>\n              {cause ?? 'unknown'}\n            </section>\n          </main>\n        );\n      case GameState.NOT_INITIALIZED:\n      case GameState.COMPLETED:\n      case GameState.GAME_OVER:\n      case GameState.INITIALIZED:\n      case GameState.PLAYING:\n      case GameState.PAUSED:\n      case GameState.DEMO:\n        break;\n      default:\n        return assertNever(board.state);\n    }\n    // const { level } = board;\n    const { cols, rows, topology } = board.level;\n    const shouldRotate = rotated && rows !== cols;\n\n    const done =\n      boardState === GameState.GAME_OVER ||\n      boardState === GameState.COMPLETED ||\n      boardState === GameState.DEMO ||\n      boardState === GameState.ERROR;\n    const pointerEvents =\n      done || boardState === GameState.PAUSED ? 'none' : 'revert';\n\n    const getOffsets = () => {\n      const { type } = board.level;\n      switch (type) {\n        case GridType.SQUARE:\n          return {\n            xOffset: 0,\n            yFactor: 1,\n            width: cellSize * cols,\n            height: cellSize * rows,\n          };\n        case GridType.HEX:\n          const xOffset = cellSize / 2;\n          const width = cellSize * cols + xOffset;\n          const yFactor = hexOffset;\n          // last y + cellSize\n          const height = ((rows - 1) * yFactor + 1) * cellSize;\n          return { xOffset, yFactor, width, height };\n      }\n      assertNever(type);\n    };\n    const { xOffset, yFactor, width, height } = getOffsets();\n\n    // @ts-ignore\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const rotate = ({ x, y }: { x: number; y: number }) => {\n      const translationx = cols / 2;\n      const translationy = rows / 2;\n      const cos = 1;\n      const sin = 0;\n      return {\n        x: cos * (x - width / 2) + sin * (y - height / 2) + translationx,\n        y: cos * (y - height / 2) - sin * (x - width / 2) + translationy,\n      };\n    };\n\n    const mapCell = (cell: CellRecord, coordinate: Coordinate) => {\n      const { row, col } =\n        typeof coordinate === 'number'\n          ? calculateCoordinate(cols, coordinate)\n          : coordinate;\n\n      const x = col * cellSize + ((row & 1) === 1 ? xOffset : 0);\n      const y = row * cellSize * yFactor;\n      /*\n      if (rotated) {\n        const p = rotate({ x, y });\n        x = p.x;\n        y = p.y;\n      }\n*/\n      const additional: JSX.Element[] = [];\n      if (topology === Topology.TOROIDAL) {\n        if (col === 0) {\n          additional.push(mapCell(cell, { row, col: cols }));\n        } else if (col === 1) {\n          additional.push(mapCell(cell, { row, col: cols + 1 }));\n        } else if (col === cols - 1) {\n          additional.push(mapCell(cell, { row, col: -1 }));\n        } else if (col === cols - 2) {\n          additional.push(mapCell(cell, { row, col: -2 }));\n        }\n        if (row === 0) {\n          additional.push(mapCell(cell, { col, row: rows }));\n        } else if (row === 1) {\n          additional.push(mapCell(cell, { col, row: rows + 1 }));\n        } else if (row === rows - 1) {\n          additional.push(mapCell(cell, { col, row: -1 }));\n        } else if (row === rows - 2) {\n          additional.push(mapCell(cell, { col, row: -2 }));\n        }\n      }\n\n      const state = getState(cell);\n      const active =\n        !done &&\n        (boardState === GameState.PLAYING ||\n          boardState === GameState.NOT_INITIALIZED) &&\n        state !== CellState.EXPLODED;\n      const jsx = (\n        <SvgCell\n          coordinate={calculateIndex(cols, {\n            row: (row + rows) % rows,\n            col: (col + cols) % cols,\n          })}\n          gridType={board.level.type}\n          dispatch={active ? dispatch : undefined}\n          content={getContent(cell, boardState, numeralSystem)}\n          cell={cell}\n          done={done}\n        />\n      );\n      const key = `${x},${y}`;\n      return additional.length === 0 ? (\n        <svg key={key} x={x} y={y} width={cellSize} height={cellSize}>\n          {jsx}\n        </svg>\n      ) : (\n        <React.Fragment key={key}>\n          {[...additional]}\n          <svg x={x} y={y} width={cellSize} height={cellSize}>\n            {jsx}\n          </svg>\n        </React.Fragment>\n      );\n    };\n\n    const v =\n      topology === Topology.LIMITED\n        ? {\n            x: 0,\n            y: 0,\n            width,\n            height,\n          }\n        : {\n            x: -cellSize,\n            y: -(cellSize * 1.25),\n            width: width + cellSize * 2,\n            height: height + cellSize * 2.5,\n          };\n    const v2 = shouldRotate\n      ? {\n          x: v.y,\n          y: v.x,\n          width: v.height,\n          height: v.width,\n        }\n      : v;\n    const classes = ['SvgBoard'];\n    if (shouldRotate) {\n      classes.push('SvgBoard__rotated');\n    }\n    const viewBox = `${v2.x} ${v2.y} ${v2.width} ${v2.height}`;\n    const transform = shouldRotate\n      ? `translate(${height} 0) rotate(90 0 0)`\n      : undefined;\n\n    return (\n      <svg\n        ref={ref}\n        style={style}\n        preserveAspectRatio=\"xMidYMid meet\"\n        className={classes.join(' ')}\n        pointerEvents={pointerEvents}\n        viewBox={viewBox}\n        data-grid={GridType[board.level.type]}\n        data-s={GameState[boardState]}\n        data-r={shouldRotate ? 't' : 'f'}\n        onContextMenu={done ? undefined : onContextMenu}\n      >\n        <g transform={transform}>\n          <rect x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" />\n          {[...board.cells].map(mapCell)}\n        </g>\n      </svg>\n    );\n  }\n);\n\nexport default React.memo(SvgBoard, isEqual);\n","import { Action, ModalType, onGameOver } from './reducer';\nimport {\n  GameRecord,\n  GridType,\n  Level,\n  NextStateFunction,\n  Topology,\n  createGame,\n  validateLevel,\n} from '../Game';\nimport NumeralSystem from '../lib/NumeralSystem';\nimport { defaultTheme } from '../Theme';\nimport React from 'react';\nimport { ITheme } from '../Theme/theme';\nimport { zero } from '../lib';\nimport { loadValue } from './contexts/settings';\nimport _ from 'lodash';\n\ntype ILevels = {\n  [keyof: string]: Level;\n};\nconst type = GridType.HEX;\nconst topology = Topology.LIMITED;\n\nexport const LEVELS: ILevels = {\n  BEGINNER: { rows: 6, cols: 10, mines: 10, type, topology },\n  INTERMEDIATE: { rows: 16, cols: 16, mines: 40, type, topology },\n  EXPERT: { mines: 99, rows: 16, cols: 30, type, topology },\n};\n\nexport type ISettings = {\n  numeralSystem: NumeralSystem;\n  fitWindow: boolean;\n  theme: ITheme;\n};\n\nexport const initialSettings: ISettings = {\n  numeralSystem: NumeralSystem.HANGZHOU_NUMERAL,\n  theme: defaultTheme,\n  fitWindow: true,\n};\n\nexport type TimingEvent = number;\n\nexport type IState = Readonly<{\n  game: {\n    board: GameRecord;\n    nextState: NextStateFunction;\n  };\n  loading: boolean;\n  containerRef: React.RefObject<SVGSVGElement>;\n  maxBoardDimensions: { maxWidth: string; maxHeight: string };\n  modalStack: ModalType[];\n  timingEvents: TimingEvent[];\n  elapsedTime(): number;\n  showMenu: boolean;\n  lives: 0 | 1 | 2;\n  rotated: boolean;\n  boardVersion: number;\n}>;\n\nlet level: Level | undefined;\ntry {\n  level = loadValue('object', 'level');\n  if (level != null) {\n    validateLevel(level);\n  }\n} catch (err) {}\n\nif (level == null) {\n  level = LEVELS.BEGINNER;\n}\n\nexport const initialState: IState = {\n  game: {\n    ...createGame(level, onGameOver),\n  },\n  loading: false,\n  maxBoardDimensions: {\n    maxHeight: 'revert',\n    maxWidth: 'revert',\n  },\n  modalStack: [],\n  timingEvents: [],\n  elapsedTime: zero,\n  showMenu: false,\n  lives: 2,\n  containerRef: React.createRef(),\n  rotated: false,\n  boardVersion: 0,\n};\n\nexport default React.createContext<{\n  state: IState;\n  dispatch: React.Dispatch<Action>;\n}>({\n  state: initialState,\n  dispatch: _.noop,\n});\n","export const BOARD_BORDER_WIDTH = 7;\n\nexport default function getFitWindowCss(board: React.RefObject<SVGSVGElement>) {\n  if (board.current == null) {\n    return {\n      maxHeight: 'revert',\n      maxWidth: 'revert',\n    };\n  }\n  const { top } = board.current.getBoundingClientRect();\n  return {\n    maxWidth: '100vw',\n    // Must add 3-5 px to prevent scrollbars\n    maxHeight: `calc(100vh - ${BOARD_BORDER_WIDTH * 2 + top + 5}px)`,\n  };\n}\n","import { ITheme } from '../Theme/theme';\nimport { useDomTokenList } from './';\n\nconst useTheme = (theme: ITheme) =>\n  useDomTokenList(document.body, theme.classNames);\n\nexport default useTheme;\n","import { useEffect } from 'react';\nconst useDomTokenList = (\n  element: HTMLElement | null | undefined,\n  tokens?: string[] | Readonly<string[]>\n) => {\n  useEffect(() => {\n    if (element == null || tokens == null) {\n      return;\n    }\n    console.debug('useDomTokenList.useEffect');\n    // Set up\n    element.classList.add(...tokens);\n    // Clean up\n    return () => element.classList.remove(...tokens);\n  }, [element, tokens]);\n};\n\nexport default useDomTokenList;\n","import { useEffect } from 'react';\n\nfunction useTicker(timeout: number, isActive: boolean, cb: () => any) {\n  useEffect(() => {\n    if (isActive) {\n      const id = setInterval(cb, timeout);\n      console.debug('Create ticker', { id, timeout });\n      return () => {\n        console.debug('Cleanup ticker', { id });\n        clearInterval(id);\n      };\n    }\n    return;\n  }, [cb, isActive, timeout]);\n}\n\nexport default useTicker;\n","import React from 'react';\nimport './FormatNumber.scss';\nimport { NumeralSystem, formatNumber, formatTime } from '../lib';\nimport { NumeralSystemContext } from '../store/contexts/settings';\n\ntype Props = {\n  n: number;\n  numeralSystem: NumeralSystem;\n  className?: string;\n  fractionDigits?: undefined | 1 | 2;\n  asTime?: true;\n};\n\nconst FormatNumber: React.FC<Props> = ({\n  n,\n  className,\n  fractionDigits,\n  asTime,\n}) => {\n  const options = {\n    minimumFractionDigits: fractionDigits,\n    maximumFractionDigits: fractionDigits,\n  };\n  const { numeralSystem } = React.useContext(NumeralSystemContext);\n  const format = asTime === true ? formatTime : formatNumber;\n  return (\n    <span\n      className={className ?? 'FormatNumber'}\n      data-numeralsystem={NumeralSystem[numeralSystem]}\n      title={n.toString()}\n      aria-label={n.toString()}\n    >\n      {format(numeralSystem, n, options)}\n    </span>\n  );\n};\n\nexport default React.memo(FormatNumber);\n","import React, { useCallback } from 'react';\nimport { useTicker } from '../Hooks';\nimport FormatNumber from './FormatNumber';\nimport { NumeralSystem } from '../lib';\n\ninterface Props {\n  elapsedTime(): number;\n  running: boolean;\n  numeralSystem: NumeralSystem;\n}\n\nconst Timer: React.FC<Props> = React.memo(\n  ({ running, elapsedTime, numeralSystem }) => {\n    const [timer, setTimer] = React.useState(elapsedTime());\n    React.useEffect(() => setTimer(elapsedTime()), [elapsedTime]);\n\n    const cb = useCallback(() => setTimer(elapsedTime()), [elapsedTime]);\n\n    useTicker(1000, running, cb);\n\n    return (\n      <span\n        role=\"timer\"\n        aria-live={running ? 'polite' : 'off'}\n        className=\"Timer\"\n        title={timer.toString()}\n      >\n        <FormatNumber\n          numeralSystem={numeralSystem}\n          n={Math.floor(timer / 1000)}\n          asTime={true}\n        />\n      </span>\n    );\n  }\n);\n\nexport default Timer;\n","import {\n  LinkProps,\n  NavigateOptions,\n  Link as ReachLink,\n  navigate as reachNavigate,\n} from '@reach/router';\nimport React from 'react';\n\n// Workaround to use homepage='.'\n// Can't use subdirectories in route\n\nfunction base() {\n  const b = (process.env.PUBLIC_URL === '.'\n    ? window.location.pathname.substring(\n        0,\n        window.location.pathname.lastIndexOf('/') + 1\n      )\n    : process.env.PUBLIC_URL ?? '/'\n  )\n    .split(/[/]+/)\n    .join('/');\n  return b === '' ? '/' : b;\n}\n\nexport const BASE = base();\n\nexport const Link = React.memo<React.PropsWithChildren<LinkProps<{}>>>(\n  ({ to = '', children, ...props }) => {\n    if (to[0] === '/') {\n      to = BASE + to;\n    }\n    return (\n      <ReachLink {...props} to={to} ref={undefined}>\n        {children}\n      </ReachLink>\n    );\n  }\n);\n\nexport const navigate = (\n  to: string,\n  options?: NavigateOptions<{}> | undefined\n) => {\n  if (to === '/' || to === '' || to == null) {\n    to = BASE;\n  } else if (to[0] === '/') {\n    to = BASE + to;\n  }\n  return reachNavigate(to, options);\n};\n","// TODO: How to type this function correctly\nconst registerEvent: typeof window.addEventListener = (\n  event: string,\n  callback: any\n) => {\n  window.addEventListener(event, callback);\n  return () => window.removeEventListener(event, callback);\n};\n\nexport default registerEvent;\n","import React from 'react';\nimport { Store } from '../../store';\nimport { CellState, GameState } from '../../Game';\nimport {\n  FitWindowContext,\n  NumeralSystemContext,\n  RotateContext,\n} from '../../store/contexts/settings';\nimport Timer from '../Timer';\nimport FormatNumber from '../FormatNumber';\nimport { DISARMED_MINE, EXPLODED_MINE, getFlag } from '../../graphics';\nimport { Link } from '../../router';\nimport registerEvent from './registerEvent';\nimport { assertNever } from '../../lib';\n\nconst StatusBar = () => {\n  const { state, dispatch } = React.useContext(Store);\n\n  const { elapsedTime, showMenu, lives } = state;\n  const board = state.game.board;\n  const gameState = board.state;\n  const remaining =\n    board.level.mines -\n    board.cellStates[CellState.FLAGGED] -\n    board.cellStates[CellState.EXPLODED];\n\n  const remainingLives = lives - board.cellStates[CellState.EXPLODED];\n  const { numeralSystem } = React.useContext(NumeralSystemContext);\n  const handleGameStateClick = React.useCallback(() => {\n    switch (gameState) {\n      case GameState.PAUSED:\n        dispatch({\n          type: 'UNPAUSE',\n        });\n        break;\n      case GameState.PLAYING:\n        dispatch({\n          type: 'PAUSE',\n        });\n        break;\n      case GameState.COMPLETED:\n      case GameState.GAME_OVER:\n      case GameState.ERROR:\n        dispatch({\n          type: 'setLevel',\n        });\n    }\n  }, [dispatch, gameState]);\n  const { rotate, setRotate } = React.useContext(RotateContext);\n  const { fitWindow, setFitWindow } = React.useContext(FitWindowContext);\n  const [fullScreen, setFullScreen] = React.useState(document.fullscreen);\n\n  const itemsProps = { className: 'SvgMinesweeper__Controls__Item' };\n\n  React.useEffect(() => {\n    return registerEvent('fullscreenchange', () =>\n      setFullScreen(document.fullscreen)\n    );\n  }, []);\n\n  return (\n    <div className=\"SvgMinesweeper__Controls\">\n      <div role=\"button\" onClick={handleGameStateClick} {...itemsProps}>\n        <Timer\n          numeralSystem={numeralSystem}\n          elapsedTime={elapsedTime}\n          running={gameState === GameState.PLAYING}\n        />\n      </div>\n      <div\n        {...itemsProps}\n        role=\"button\"\n        onClick={handleGameStateClick}\n        aria-label={`Game state: ${GameState[gameState]}`}\n      >\n        {renderGameState(gameState, lives, remainingLives)}\n      </div>\n      <div {...itemsProps} role=\"button\">\n        <FormatNumber numeralSystem={numeralSystem} n={remaining} />\n        <span role=\"img\" aria-label=\"Remaining mines\">\n          {remaining >= 0 ? getFlag() : '💩'}\n        </span>{' '}\n      </div>\n      <details open={showMenu}>\n        <summary\n          onClick={e => {\n            e.preventDefault();\n            dispatch({ type: 'toggleMenu' });\n          }}\n          {...itemsProps}\n        >\n          <span role=\"img\" aria-label=\"menu\">\n            🍔\n          </span>\n        </summary>\n        <nav>\n          <ul role=\"menu\" className=\"Menu__List\">\n            <li role=\"menuitem\">\n              <Link to=\"level.html\">Select level</Link>\n            </li>\n            <li role=\"menuitem\">\n              <Link to=\"settings.html\">Settings</Link>\n            </li>\n            <li role=\"menuitemcheckbox\" aria-checked={fitWindow}>\n              <label>\n                <input\n                  onChange={React.useCallback(\n                    (e: React.SyntheticEvent<HTMLInputElement>) =>\n                      setFitWindow(e.currentTarget?.checked),\n                    [setFitWindow]\n                  )}\n                  type=\"checkbox\"\n                  checked={fitWindow}\n                />\n                Fit to window\n              </label>\n            </li>\n            <li role=\"menuitemcheckbox\" aria-checked={rotate}>\n              <label>\n                <input\n                  onChange={React.useCallback(\n                    (e: React.SyntheticEvent<HTMLInputElement>) =>\n                      setRotate(e.currentTarget?.checked),\n                    [setRotate]\n                  )}\n                  type=\"checkbox\"\n                  checked={rotate}\n                />\n                Rotate\n              </label>\n            </li>\n            <li role=\"menuitemcheckbox\" aria-checked={fullScreen}>\n              <label>\n                <input\n                  onChange={() =>\n                    dispatch({\n                      type: fullScreen ? 'exitFullscreen' : 'requestFullscreen',\n                    })\n                  }\n                  type=\"checkbox\"\n                  checked={fullScreen}\n                />\n                Fullscreen\n              </label>\n            </li>\n          </ul>\n        </nav>\n      </details>\n    </div>\n  );\n};\n\nfunction renderGameState(state: GameState, lives: number, remaining: number) {\n  switch (state) {\n    case GameState.PAUSED:\n      return '🧘';\n    case GameState.COMPLETED:\n    case GameState.PLAYING:\n      return (\n        EXPLODED_MINE.repeat(lives - remaining) +\n        DISARMED_MINE.repeat(remaining + 1)\n      );\n    case GameState.ERROR:\n      return '🤔';\n    case GameState.GAME_OVER:\n      return '🤬';\n    case GameState.DEMO:\n    case GameState.INITIALIZED:\n    case GameState.NOT_INITIALIZED:\n      return '🎯';\n  }\n  assertNever(state);\n}\n\nexport default StatusBar;\n","import * as React from 'react';\nimport './SvgMinesweeper.scss';\nimport { GameState } from '../../Game';\nimport ErrorBoundary from '../ErrorBoundary';\nimport SvgBoard from './Board/SvgBoard';\nimport { onContextMenu } from '..';\nimport { useSettingsContext } from '../../store/contexts/settings';\nimport { Store } from '../../store';\nimport StatusBar from './StatusBar';\nimport registerEvent from './registerEvent';\nimport { BOARD_BORDER_WIDTH } from '../../lib';\n\nconst SvgMinesweeper: React.FC<{}> = () => {\n  const { state, dispatch } = React.useContext(Store);\n\n  const { game, containerRef } = state;\n  const { board } = game;\n\n  const {\n    fitWindow,\n    rotate: rotated,\n    numeralSystem,\n  } = useSettingsContext().state;\n\n  React.useEffect(() => {\n    dispatch({ type: 'fitWindow' });\n    // return registerEvent('resize', () => dispatch({ type: 'fitWindow' }));\n  }, [dispatch]);\n\n  React.useEffect(\n    () =>\n      registerEvent('keyup', (e: KeyboardEvent) => {\n        if (e.keyCode === 80) {\n          dispatch({\n            type: board.state === GameState.PLAYING ? 'PAUSE' : 'UNPAUSE',\n          });\n        }\n      }),\n\n    [board.state, containerRef, dispatch]\n  );\n\n  React.useEffect(() => {\n    return registerEvent('visibilitychange', () => {\n      if (\n        document.visibilityState !== 'visible' &&\n        board.state === GameState.PLAYING\n      ) {\n        dispatch({ type: 'PAUSE' });\n      }\n    });\n  }, [board.state, dispatch]);\n\n  React.useEffect(() => {\n    return registerEvent('blur', () => {\n      dispatch({ type: 'PAUSE' });\n    });\n  }, [dispatch]);\n\n  const done =\n    board.state === GameState.GAME_OVER ||\n    board.state === GameState.COMPLETED ||\n    board.state === GameState.ERROR;\n\n  const handlePointerDown = (e: React.PointerEvent) => {\n    if (done || board.state === GameState.PAUSED) {\n      e.preventDefault();\n      e.stopPropagation();\n    }\n  };\n  const classes = ['SvgMinesweeper', 'SvgMinesweeper__Container'];\n  /*\n  if (rotated) {\n    classes.push('SvgMinesweeper__rotated');\n  }\n*/\n  const handleRestartGame = React.useCallback(\n    e => {\n      onContextMenu(e);\n      window.navigator.vibrate(300);\n      dispatch({\n        type: 'setLevel',\n        level: board.level,\n      });\n    },\n    [board.level, dispatch]\n  );\n\n  const boardStyle: React.CSSProperties = fitWindow\n    ? { ...state.maxBoardDimensions }\n    : {};\n  // boardStyle.pointerEvents = modal != null || showMenu ? 'none' : undefined;\n\n  return (\n    <div>\n      <div\n        className={classes.join(' ')}\n        onPointerDown={handlePointerDown}\n        onContextMenu={done ? handleRestartGame : onContextMenu}\n      >\n        <StatusBar />\n        <ErrorBoundary>\n          <SvgBoard\n            rotated={rotated}\n            ref={state.containerRef}\n            dispatch={dispatch}\n            board={board}\n            style={{ borderWidth: `${BOARD_BORDER_WIDTH}px`, ...boardStyle }}\n            numeralSystem={numeralSystem}\n          />\n        </ErrorBoundary>\n      </div>\n    </div>\n  );\n};\n\nexport default SvgMinesweeper;\n","import React from 'react';\nimport Themes from '../../Theme';\nimport { ITheme } from '../../Theme/theme';\n\nconst themes = Themes();\n\ninterface IProps {\n  theme: ITheme;\n  onChange: (value: ITheme) => void;\n}\n\nconst ThemeChooser: React.FC<IProps> = ({ theme, onChange }) => {\n  return (\n    <div className=\"ThemeChooser\">\n      <select\n        value={themes.indexOf(theme)}\n        onChange={e => onChange(themes[parseInt(e.currentTarget.value)])}\n      >\n        {themes.map((t, i) => (\n          <option key={t.name} value={i}>\n            {t.name}\n          </option>\n        ))}\n      </select>\n    </div>\n  );\n};\n\nexport default React.memo(ThemeChooser);\n","import React, { AriaAttributes } from 'react';\nimport { navigate } from '../router';\n\ntype Props = {\n  text: string;\n  tooltip?: string;\n  close?(): void;\n  aria?: AriaAttributes;\n};\n\nconst CloseButton: React.FC<Props> = ({\n  close = () => navigate('/'),\n  text,\n  tooltip,\n  aria,\n}) => (\n  <button\n    {...aria}\n    title={tooltip}\n    className=\"CloseButton\"\n    type=\"button\"\n    onClick={close}\n  >\n    {text}\n  </button>\n);\n\nexport default React.memo(CloseButton);\n","import * as React from 'react';\nimport SvgBoard from '../Svg/Board/SvgBoard';\nimport { NumThreats, legend } from '../../Game';\nimport { renderThreats } from '../Svg/Board/getContent';\nimport './SettingsDialog.scss';\nimport './NumeralSystemChooser.scss';\nimport ThemeChooser from './ThemeChooser';\nimport { NumeralSystem } from '../../lib';\nimport { useSettingsContext } from '../../store/contexts/settings';\nimport { navigate } from '../../router';\nimport CloseButton from '../CloseButton';\n\nexport type SettingsDialogProps = {};\n\nconst SettingsDialog: React.FC<SettingsDialogProps> = () => {\n  const { state: initialState, setState } = useSettingsContext();\n  const [theme, setTheme] = React.useState(initialState.theme);\n  const [numeralSystem, setNumeralSystem] = React.useState(\n    initialState.numeralSystem\n  );\n\n  const containerRef = React.useCallback(\n    (e: HTMLDivElement) => {\n      if (e != null) {\n        e.classList.remove(...e.classList.values());\n        e.classList.add('Page', ...theme.styles.map(t => t.Theme));\n      }\n    },\n    [theme.styles]\n  );\n\n  const handleOnSubmit = (e: React.SyntheticEvent<any>) => {\n    e.preventDefault();\n    setState({ ...initialState, theme, numeralSystem });\n    navigate('/');\n  };\n  const handleOnReset = (e: React.SyntheticEvent<any>) => {\n    e.preventDefault();\n    setTheme(initialState.theme);\n    setNumeralSystem(initialState.numeralSystem);\n  };\n  return (\n    <div ref={containerRef}>\n      <form\n        className=\"SettingsDialog\"\n        onSubmit={handleOnSubmit}\n        onReset={handleOnReset}\n      >\n        <div\n          style={{\n            display: 'flex',\n            justifyContent: 'space-between',\n            flexWrap: 'wrap',\n          }}\n        >\n          <fieldset>\n            <legend>Numeral system</legend>\n            <NumeralSystemChooser\n              selected={numeralSystem}\n              onChange={setNumeralSystem}\n            />\n          </fieldset>\n          <fieldset>\n            <legend>Theme</legend>\n            <ThemeChooser theme={theme} onChange={setTheme} />\n          </fieldset>\n          <section className=\"SvgMinesweeper\">\n            <div\n              style={{\n                width: '200px',\n                height: 'auto',\n              }}\n            >\n              <SvgBoard\n                board={legend().board}\n                rotated={false}\n                numeralSystem={numeralSystem}\n              />\n            </div>\n          </section>\n        </div>\n        <div>\n          <section>\n            <main>\n              <button type=\"submit\">Apply changes</button>\n              <button type=\"reset\">Reset</button>\n              <CloseButton text=\"Cancel\" />\n            </main>\n          </section>\n        </div>\n      </form>\n    </div>\n  );\n};\n\ninterface NumeralSystemChooserProps {\n  selected: NumeralSystem;\n  onChange: (value: NumeralSystem) => void;\n}\n\nconst NumeralSystemChooser: React.FC<NumeralSystemChooserProps> = React.memo(\n  ({ selected, onChange }) => (\n    <ul className=\"NumeralSystemChooser\">\n      {Object.keys(NumeralSystem)\n        .filter(name => isNaN(Number(name)))\n        .map(name => {\n          const value = (NumeralSystem[\n            name as any\n          ] as unknown) as NumeralSystem;\n          return (\n            <li key={value}>\n              <label title={name}>\n                <input\n                  checked={selected === value}\n                  type=\"radio\"\n                  name=\"numeralsystem\"\n                  value={value}\n                  onChange={e => {\n                    if (e.currentTarget.checked) {\n                      onChange(value);\n                    }\n                  }}\n                />{' '}\n                {[...new Array(8)].map((_v, n) => (\n                  <span\n                    className=\"NumeralSystemChooser__digit\"\n                    key={n}\n                    style={{\n                      color: `var(--cell-threats-${n + 1}-color)`,\n                    }}\n                  >\n                    {renderThreats(value, (n + 1) as NumThreats)}\n                  </span>\n                ))}\n              </label>\n            </li>\n          );\n        })}\n    </ul>\n  )\n);\n\nexport default SettingsDialog;\n","import React, { useCallback, useContext, useState } from 'react';\nimport {\n  CellState,\n  GameState,\n  GridType,\n  Level,\n  MAX_LEVEL,\n  MIN_LEVEL,\n  Topology,\n  fromObject,\n  maxMines,\n  minMines,\n} from '../Game';\n\nimport './LevelChooser.scss';\nimport SvgCell from './Svg/Board/SvgCell';\nimport CloseButton from './CloseButton';\nimport FormatNumber from './FormatNumber';\nimport { NumeralSystem, formatNumber } from '../lib';\nimport { NumeralSystemContext } from '../store/contexts/settings';\nimport { Store } from '../store';\nimport { navigate } from '../router';\n\ninterface LevelLite extends Omit<Level, 'type' | 'topology'> {}\n\n// const predefinedLevels: ReadonlyMap<string, Readonly<LevelLite>> = new Map();\nconst predefinedLevels = Object.freeze([\n  Object.freeze({ rows: 6, cols: 10, mines: 10, name: 'Beginner' }),\n  Object.freeze({ rows: 16, cols: 16, mines: 40, name: 'Intermediate' }),\n  Object.freeze({ mines: 99, rows: 16, cols: 30, name: 'Expert' }),\n]);\n\nexport const getLevel = (\n  key: string = 'Beginner',\n  type: GridType = GridType.SQUARE,\n  topology = Topology.LIMITED\n): Level => {\n  const lvl = predefinedLevels.find(l => l.name === key);\n  const v = lvl != null ? lvl : predefinedLevels[0];\n  return Object.freeze({ ...v, type, topology });\n};\n\nconst compareLevels = (a: LevelLite | Level, b: LevelLite | Level) =>\n  a.cols === b.cols && a.rows === b.rows && a.mines === b.mines;\n\ntype LevelChooserProps = {\n  onChange: (level: Level) => void;\n};\n\nconst custom = 'Custom';\n\nconst formatLevel = ({\n  rows,\n  cols,\n  mines,\n  numeralSystem,\n  name,\n  asString,\n}: LevelLite & {\n  name?: string;\n  numeralSystem: NumeralSystem;\n  asString?: boolean;\n}) => {\n  if (asString === true) {\n    const [r, c, m] = [rows, cols, mines].map(n =>\n      formatNumber(numeralSystem, n)\n    );\n    return (name != null ? `${name} : ` : '') + `${c} / ${r} (${m})`;\n  }\n  return (\n    <>\n      {name != null ? `${name}: ` : ''}\n      <FormatNumber numeralSystem={numeralSystem} n={rows} />\n      {' / '}\n      <FormatNumber numeralSystem={numeralSystem} n={cols} />\n      {' ('}\n      <FormatNumber numeralSystem={numeralSystem} n={mines} />\n      {')'}\n    </>\n  );\n}; /*\n  (v.name != null ? `${v.name}: ` : '') +\n  [v.rows, v.cols, v.mines]\n    .map(n => formatNumber(v.numeralSystem, n))\n    .join('; ');\n    */\n// `${v.name}: ${v.cols} x ${v.rows} (${v.mines})`;\n\nexport const LevelChooser: React.FC<LevelChooserProps> = ({ onChange }) => {\n  const { numeralSystem } = useContext(NumeralSystemContext);\n  const { state: context } = useContext(Store);\n  const initialLevel: Level = context.game.board.level;\n  // const numeralSystem = initialState.numeralSystem;\n  const [level, setLevel] = useState(initialLevel);\n  const { rows, cols, mines, type, topology } = level;\n  const maxM = maxMines({ rows, cols });\n  const minM = minMines({ rows, cols });\n  if (level.mines > maxM) {\n    setLevel({\n      ...level,\n      mines: maxM,\n    });\n  } else if (level.mines < minM) {\n    setLevel({\n      ...level,\n      mines: minM,\n    });\n  }\n\n  const selectedLevel = predefinedLevels.find(v => compareLevels(level, v))\n    ?.name;\n\n  const handleTypeChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) =>\n      setLevel({\n        ...level,\n        type: (GridType[e.currentTarget.value as any] as unknown) as GridType,\n      }),\n    [level]\n  );\n\n  const handleTopologyChange = useCallback(\n    (e: React.ChangeEvent<HTMLSelectElement>) =>\n      setLevel({\n        ...level,\n        topology: (Topology[\n          e.currentTarget.value as any\n        ] as unknown) as Topology,\n      }),\n    [level]\n  );\n\n  return (\n    <div className=\"LevelChooser\">\n      <form\n        onSubmit={e => {\n          e.preventDefault();\n          onChange(level);\n          navigate('/');\n        }}\n        onReset={e => {\n          e.preventDefault();\n          setLevel(initialLevel);\n        }}\n      >\n        <fieldset>\n          <legend>Select level</legend>\n          <select\n            value={selectedLevel ?? custom}\n            onChange={e => {\n              setLevel(getLevel(e.target.value, level.type, level.topology));\n            }}\n          >\n            <option hidden={selectedLevel != null} value={custom}>\n              {formatLevel({\n                name: custom,\n                cols,\n                rows,\n                mines,\n                numeralSystem,\n                asString: true,\n              })}\n            </option>\n            {[...predefinedLevels.entries()].map(([k, v]) => (\n              <option value={v.name} key={k}>\n                {formatLevel({ ...v, numeralSystem, asString: true })}\n              </option>\n            ))}\n          </select>\n        </fieldset>\n        <fieldset>\n          <legend>Custom level</legend>\n          <label>\n            Rows: <FormatNumber numeralSystem={numeralSystem} n={rows} />\n            <input\n              onChange={e =>\n                setLevel({\n                  ...level,\n                  rows: e.currentTarget.valueAsNumber,\n                })\n              }\n              min={MIN_LEVEL}\n              max={MAX_LEVEL}\n              type=\"range\"\n              value={rows}\n              name=\"rows\"\n            />\n          </label>\n          <label>\n            Columns:\n            <FormatNumber numeralSystem={numeralSystem} n={cols} />\n            <input\n              onChange={e =>\n                setLevel({\n                  ...level,\n                  cols: e.currentTarget.valueAsNumber,\n                })\n              }\n              min={MIN_LEVEL}\n              max={MAX_LEVEL}\n              type=\"range\"\n              value={cols}\n              name=\"cols\"\n            />\n          </label>\n          <label>\n            Mines:\n            <FormatNumber numeralSystem={numeralSystem} n={mines} /> (\n            <FormatNumber\n              numeralSystem={numeralSystem}\n              n={(100 * mines) / (rows * cols)}\n              fractionDigits={1}\n            />\n            ﹪)\n            <input\n              min={minM}\n              max={maxM}\n              type=\"range\"\n              value={mines}\n              name=\"mines\"\n              onChange={e =>\n                setLevel({\n                  ...level,\n                  mines: e.currentTarget.valueAsNumber,\n                })\n              }\n            />\n          </label>\n          <button\n            disabled={rows === cols}\n            type=\"button\"\n            onClick={() =>\n              setLevel({\n                ...level,\n                rows: level.cols,\n                cols: level.rows,\n              })\n            }\n          >\n            Swap rows and columns\n          </button>\n        </fieldset>\n        <fieldset>\n          <legend>Grid type</legend>\n          {Object.keys(GridType)\n            .filter(name => isNaN(Number(name)))\n            .map(name => {\n              const checked = name === GridType[type];\n              const state = checked ? CellState.OPEN : CellState.NEW;\n              const content = checked ? '✓' : '';\n              return (\n                <label className=\"RadioGroup__Option\" key={name}>\n                  <input\n                    className=\"GridTypeRadio\"\n                    onChange={handleTypeChange}\n                    checked={checked}\n                    type=\"radio\"\n                    name=\"type\"\n                    value={name}\n                  />\n                  <div\n                    className=\"SvgBoard\"\n                    data-s={GameState[GameState.GAME_OVER]}\n                    style={{\n                      width: '32px',\n                      height: 'auto',\n                      display: 'inline-block',\n                      verticalAlign: 'middle',\n                    }}\n                  >\n                    {' '}\n                    <SvgCell\n                      cell={fromObject({\n                        state,\n                        threatCount: 2,\n                        mine: undefined,\n                      })}\n                      content={content}\n                      coordinate={0}\n                      gridType={(GridType[name as any] as unknown) as GridType}\n                    />\n                  </div>\n                </label>\n              );\n            })}\n          <select onChange={handleTopologyChange} value={Topology[topology]}>\n            {Object.keys(Topology)\n              .filter(name => !isNaN(Number(name)))\n              .map(k => {\n                const t: Topology = (k as unknown) as Topology;\n                const name = Topology[t];\n\n                return (\n                  <option key={name} value={name}>\n                    {name}\n                  </option>\n                );\n              })}\n          </select>\n        </fieldset>\n        <button type=\"submit\">OK</button>\n        <button type=\"reset\">Reset</button>\n        <CloseButton text=\"Cancel\" />\n      </form>\n    </div>\n  );\n};\n","import React from 'react';\nimport './App.css';\n// import Minesweeper, { LEVELS } from './Components/Minesweeper';\nimport SvgMinesweeper from './Components/Svg/SvgMinesweeper';\nimport { LevelAction, Store, initialState, reducer } from './store';\nimport SettingsContextProvider, {\n  ThemeContext,\n} from './store/contexts/settings';\nimport { useTheme } from './Hooks';\nimport { RouteComponentProps, Router } from '@reach/router';\nimport SettingsDialog, {\n  SettingsDialogProps,\n} from './Components/Settings/SettingsDialog';\nimport { LevelChooser } from './Components/LevelChooser';\nimport { BASE } from './router';\nimport { hexagonPoints } from './lib';\nimport { cellSize } from './Components/Svg/Board/SvgCell';\nimport { GridType } from './Game';\n\nconst Game = (_props: RouteComponentProps) => <SvgMinesweeper />;\n\nconst Settings = (_props: SettingsDialogProps & RouteComponentProps) => (\n  <SettingsDialog />\n);\n\nconst Levels = ({\n  dispatch,\n}: { dispatch: React.Dispatch<LevelAction> } & RouteComponentProps) => (\n  <LevelChooser\n    onChange={l => {\n      dispatch({\n        type: 'setLevel',\n        level: l,\n      });\n    }}\n  />\n);\n\nconst hexPoints = () =>\n  hexagonPoints()\n    .map(({ x, y }) => `${(x * cellSize) / 2},${(y * cellSize) / 2}`)\n    .join(' ');\n\nconst squarePoints = () => {\n  const gap = 2;\n  return [\n    [gap, gap],\n    [gap, cellSize - gap],\n    [cellSize - gap, cellSize - gap],\n    [cellSize - gap, gap],\n  ]\n    .map(([x, y]) => `${x},${y}`)\n    .join(' ');\n};\n\nconst App: React.FC<{}> = () => {\n  // const context = React.useContext(Store);\n  const [state, dispatch] = React.useReducer(reducer, initialState);\n  const { theme } = React.useContext(ThemeContext);\n  useTheme(theme);\n\n  return (\n    <div className=\"App\">\n      <div>\n        <Store.Provider value={{ state, dispatch }}>\n          <Router basepath={BASE}>\n            <Game default />\n            <Settings path=\"/settings.html\" />\n            <Levels dispatch={dispatch} path=\"/level.html\" />\n          </Router>\n        </Store.Provider>\n      </div>\n      <svg style={{ visibility: 'hidden' }}>\n        <defs>\n          <circle\n            id=\"circle\"\n            cx={cellSize / 2}\n            cy={cellSize / 2}\n            r={cellSize / 2 - 2}\n          />\n          <polygon\n            id={`${GridType[GridType.HEX]}`}\n            points={hexPoints()}\n            width={cellSize}\n            height={cellSize}\n            fillOpacity={1}\n            strokeWidth={0}\n          />\n          <polygon\n            id={`${GridType[GridType.SQUARE]}`}\n            points={squarePoints()}\n            width={cellSize}\n            height={cellSize}\n            fillOpacity={1}\n            strokeWidth={0}\n          />\n        </defs>\n      </svg>\n    </div>\n  );\n};\n\nexport default SettingsContextProvider(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n/*\nimport _ from 'lodash';\n\ntype Address = { row: number; col: number };\n\nconst translate = (\n  { row, col }: Address,\n  { row: dRow, col: dCol }: Address\n): Address => ({ row: row + dRow, col: col + dCol });\n\nconst calculateCoordinate = (cols: number, index: number) => {\n  //if (index < 0) {\n  //  throw new Error();\n  //}\n  const col = index % cols;\n  const row = (index - col) / cols;\n  return { col, row };\n};\n\nconst calculateIndex = (\n  { cols, rows }: { cols: number; rows: number },\n  { row, col }: Address\n) => {\n  let dRow = 0;\n  let dCol = 0;\n  if (row < 0) {\n    dRow = rows + row;\n  }\n  if (col < 0) {\n    dCol = cols + col;\n  }\n  if (row < 0 || col < 0) {\n    const nc = calculateIndex(\n      { cols, rows },\n      translate({ row, col }, { row: dRow, col: dCol })\n    );\n    console.log({ nc, row, col });\n  }\n  return col + cols * row;\n};\n\nfunction formatCoordinate({ row, col }: Address) {\n  return (\n    <pre>\n      {col}, {row}\n    </pre>\n  );\n}\n\nconst renderCell = (\n  { cols, rows }: { cols: number; rows: number },\n  coordinate: Address\n) => {\n  const index = calculateIndex({ cols, rows }, coordinate);\n  const newCoordinate = calculateCoordinate(cols, index);\n  const newIndex = calculateIndex({ cols, rows }, newCoordinate);\n  return (\n    <ul>\n      <li>{index}</li>\n      <li\n        style={{\n          backgroundColor: index === newIndex ? 'green' : 'red',\n        }}\n      >\n        {newIndex}\n      </li>\n      <li>{formatCoordinate(coordinate)}</li>\n      <li\n        style={{\n          backgroundColor: _.isEqual(coordinate, newCoordinate)\n            ? 'green'\n            : 'red',\n        }}\n      >\n        {formatCoordinate(newCoordinate)}\n      </li>\n    </ul>\n  );\n};\n\nconst Test = () => {\n  const cols = 16;\n  const rows = 14;\n  return (\n    <table>\n      <tbody>\n        {[...new Array(rows)].map((_i, row) => (\n          <tr key={row}>\n            {[...new Array(cols)].map((_j, col) => (\n              <td key={col}>\n                {renderCell(\n                  { cols, rows },\n                  { row: row - rows / 2, col: col - cols / 2 }\n                )}\n              </td>\n            ))}\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n*/\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}