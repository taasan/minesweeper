{"version":3,"sources":["Theme/Solarized/solarized.module.scss","Theme/theme.module.scss","Theme/Solarized/dark.module.scss","Theme/Solarized/light.module.scss","Theme/Solarized/auto.module.scss","lib/NumeralSystem.ts","lib/toRomanNumeral.ts","lib/zero.ts","lib/assertNever.ts","lib/hex.ts","Game/grid.ts","Game/coordinate.ts","Game/board.ts","Game/cell.ts","Theme/theme.ts","Theme/Solarized/index.ts","Theme/index.ts","store/contexts/settings/useLocalStorage.ts","store/contexts/settings/theme.tsx","store/contexts/settings/fitWindow.tsx","store/contexts/settings/numeralSystem.tsx","store/contexts/settings/rotate.tsx","store/contexts/settings/index.tsx","Game/game.ts","Game/index.ts","Components/ErrorBoundary.tsx","graphics/index.ts","graphics/noto-emoji/symbols.svg","graphics/noto-emoji/index.ts","Components/Svg/Board/getContent.ts","store/reducer.ts","Components/index.ts","Hooks/useAsyncDispatch.ts","Components/Svg/Board/SvgCell.tsx","Components/Svg/Board/SvgBoard.tsx","store/context.ts","lib/getFitWindowCss.ts","Hooks/useTheme.ts","Hooks/useDomTokenList.ts","Hooks/useTicker.ts","Components/FormatNumber.tsx","Components/Timer.tsx","router.tsx","Components/Svg/registerEvent.ts","Components/Svg/StatusBar.tsx","Components/Svg/SvgMinesweeper.tsx","Components/Settings/ThemeChooser.tsx","Components/CloseButton.tsx","Components/Settings/SettingsDialog.tsx","Components/LevelChooser.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","NumeralSystem","data","toRomanNumeral","number","returnUnicode","toString","result","Math","abs","forEach","digit","unicode","ascii","push","join","NumeralSystemLocaleMap","Object","freeze","ROMAN_NUMERAL","SMALL_ROMAN_NUMERAL","ARABIC_INDIC","EXTENDED_ARABIC_INDIC","NKO","DEVANAGARI","BENGALI","GURMUKHI","GUJARATI","ORIYA","TAMIL","TELUGU","KANNADA","MALAYALAM","SINHALA_LITH","THAI","LAO","TIBETAN","MYANMAR","MYANMAR_SHAN","ETHIOPIC","KHMER","MONGOLIAN","LIMBU","NEW_TAI_LUE","TAI_THAM_HORA","TAI_THAM_THAM","BALINESE","SUNDANESE","LEPCHA","OL_CHIKI","VAI","SAURASHTRA","KAYAH_LI","JAVANESE","MYANMAR_TAI_LAING","CHAM","MEETEI_MAYEK","OSMANYA","HANIFI_ROHINGYA","BRAHMI","SORA_SOMPENG","CHAKMA","SHARADA","KHUDAWADI","NEWA","TIRHUTA","MODI","TAKRI","AHOM","WARANG_CITI","BHAIKSUKI","MASARAM_GONDI","GUNJALA_GONDI","MRO","PAHAWH_HMONG","NYIAKENG_PUACHUE_HMONG","WANCHO","ADLAM","isRomanNumeral","ns","formatNumber","n","options","Number","isInteger","toLocaleString","numberingSystem","undefined","getLocaleString","formatTime","d","Date","seconds","getSeconds","minutes","getMinutes","hours","getHours","arr","unshift","map","x","s","zero","assertNever","Error","GridType","hexOffset","sqrt","calculateCoordinate","cols","index","col","row","calculateIndex","coordinate","Topology","GameState","resolver","a","b","hexNeighboursMemoized","_","memoize","origo","origin","flat","squareNeighboursMemoized","GameError","msg","err","cause","message","immerable","this","CellState","getCell","level","cells","isNumThreats","Mode","setValue","mask","prev","value","RangeError","getValue","cell","setState","state","getState","setMine","mine","getMine","setThreats","threats","getThreats","fromObject","o","threatCount","createTheme","partial","classNames","styles","t","Theme","simple","name","theme","dark","solarized","_dark","mode","DARK","light","_light","LIGHT","auto","_auto","AUTO","defaultTheme","themes","Solarized","SETTINGS_STORAGE_KEY","validateType","type","includes","TypeError","loadValue","key","nskey","json","localStorage","getItem","v","isNaN","parsed","JSON","parse","console","warn","removeItem","_err","saveValue","setItem","stringify","useLocalStorage","defaultValue","fromLocalStorage","React","useState","useCallback","ThemeContext","createContext","setTheme","noop","Map","Themes","ThemeContextProvider","props","c","get","Array","isArray","find","symbols","flag","Provider","children","FitWindowContext","fitWindow","setFitWindow","FitWindowContextProvider","defaultNumeralSystem","NumeralSystemContext","numeralSystem","setNumeralSystem","NumeralSystemContextProvider","RotateContext","rotate","setRotate","createSettingsContext","Providers","Child","reduce","acc","useProviders","useSettingsContext","useContext","initialTheme","initialFitWindow","initialNumeralSystem","initialRotate","createLevel","rows","mines","SQUARE","topology","LIMITED","createCellStateStats","stats","NEW","OPEN","FLAGGED","UNCERTAIN","EXPLODED","createBoard","game","produce","draft","Uint16Array","NOT_INITIALIZED","cellStates","error","version","onGameOver","createEmptyCells","initialize","mineSet","Set","add","iterations","dim","size","randomInt","has","coord","board","p","visitNeighbours","countThreats","updateCell","newCell","oldCell","oldThreatCount","newThreatCount","PLAYING","max","floor","random","Cmd","getNeighbours","neighbours","HEX","getNeighbourMatrix","torusAdjust","TOROIDAL","filter","callbacks","length","cb","nextState","command","PAUSE","UNPAUSE","PAUSED","POKE","toggleOpen","FLAG","INITIALIZED","GAME_OVER","COMPLETED","ERROR","DEMO","newCellState","toggleFlagged","countBy","done","newState","predicate","cellRecord","visitor","cc","cr","flaggedNeighboursCount","openNeighbours","maxMines","minMines","ceil","validateLevel","errors","field","isGridType","ValidationError","e","createGame","func","cmd","expectUnPause","_cmd","legend","_ignore","i","enableAllPlugins","ErrorBoundary","_error","_errorInfo","Component","UNFLAGGED_MINE","MISPLACED_FLAG","NATIONAL_FLAG","DISARMED_MINE","EXPLODED_MINE","getFlag","today","getDate","getMonth","componentMap","MINES","takeWhile","keys","isSvgDataHref","startsWith","isSvgHref","href","getContent","defs","external","gameState","getSymbol","render","isMined","gameWon","gameOver","demo","isFlagged","isDisarmed","renderThreats","String","fromCodePoint","ModalType","onContextMenu","stopPropagation","preventDefault","useAsyncDispatch","dispatch","handlers","action","promise","onfinally","onfulfilled","onrejected","then","catch","finally","cellSize","SvgCell","_dispatch","content","gridType","role","test","viewBox","className","onMouseDown","button","window","navigator","vibrate","data-s","data-t","data-m","background","cover","Text","memo","domProps","ix","center","y","width","height","dominantBaseline","textAnchor","fill","fontSize","SvgBoard","ref","style","rotated","boardState","textAlign","shouldRotate","pointerEvents","xOffset","yFactor","getOffsets","v2","classes","transform","preserveAspectRatio","data-grid","data-r","mapCell","additional","active","jsx","isEqual","isCmdAction","isCmdName","isGameAction","lives","reducer","commandActionReducer","isPauseCmd","isPauseAction","boardVersion","addTimingEvent","tmp","timingEvents","elapsedTime","len","elapsed","pop","chunk","calulateElapsedTime","lastStart","now","debug","old","new","withLives","modalStackSize","modalStack","modal","showMenu","maxBoardDimensions","current","maxHeight","maxWidth","top","getBoundingClientRect","BOARD_BORDER_WIDTH","getFitWindowCss","menuActionReducer","document","fullscreen","documentElement","requestFullscreen","exitFullscreen","LEVELS","BEGINNER","INTERMEDIATE","EXPERT","HANGZHOU_NUMERAL","initialState","loading","containerRef","createRef","useTheme","useDomTokenList","body","element","tokens","useEffect","classList","remove","useTicker","timeout","isActive","id","setInterval","clearInterval","FormatNumber","fractionDigits","asTime","minimumFractionDigits","maximumFractionDigits","format","data-numeralsystem","title","aria-label","Timer","running","timer","setTimer","aria-live","BASE","location","pathname","substring","lastIndexOf","split","base","Link","to","navigate","reachNavigate","registerEvent","event","callback","addEventListener","removeEventListener","renderGameState","remaining","repeat","StatusBar","Store","remainingLives","handleGameStateClick","fullScreen","setFullScreen","itemsProps","onClick","open","aria-checked","onChange","currentTarget","checked","SvgMinesweeper","keyCode","visibilityState","handleRestartGame","boardStyle","onPointerDown","borderWidth","ThemeChooser","indexOf","parseInt","CloseButton","close","text","tooltip","aria","NumeralSystemChooser","selected","_v","color","SettingsDialog","values","onSubmit","onReset","display","justifyContent","flexWrap","predefinedLevels","custom","formatLevel","asString","r","m","LevelChooser","initialLevel","setLevel","maxM","minM","selectedLevel","handleTypeChange","handleTopologyChange","lvl","l","getLevel","target","hidden","entries","k","valueAsNumber","min","disabled","verticalAlign","Game","_props","Settings","Levels","hexPoints","squarePoints","gap","SettingsContextProvider","useReducer","basepath","default","path","visibility","cx","cy","points","fillOpacity","strokeWidth","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","onUpdate","onSuccess","ReactDOM","getElementById","URL","process","fetch","headers","response","contentType","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.3b0a20bb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Theme\":\"solarized_Theme__36Ttp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Theme\":\"theme_Theme__1KsyP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Theme\":\"dark_Theme__n6cmj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Theme\":\"light_Theme__3XUtO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Theme\":\"auto_Theme__2DBna\"};","/*\n# http://unicode.org/Public/UNIDATA/UnicodeData.txt\ngrep -E '(NUMERAL EIGHT|DIGIT EIGHT);' /usr/share/unicode/ucd/UnicodeData.txt \\\n  | awk -F\\; '$9 == \"8\" {sub(/ (DIGIT )?EIGHT/,\"\"); printf \"%s = 0x%s - 8,\\n\", gensub(/[^A-Z0-9]/, \"_\", \"g\", $2), $1};' \\\n  | sed 's|^DIGIT|ASCII|'\n  | xclip -selection clipboard\n*/\n\nimport toRomanNumeral from './toRomanNumeral';\n\n/*\nadlm\tAdlam digits\nahom\tAhom digits\narab\tArabic-Indic digits\narabext\tExtended Arabic-Indic digits\narmn\tArmenian upper case numerals — algorithmic\narmnlow\tArmenian lower case numerals — algorithmic\nbali\tBalinese digits\nbeng\tBengali digits\nbhks\tBhaiksuki digits\nbrah\tBrahmi digits\ncakm\tChakma digits\ncham\tCham digits\ncyrl\tCyrillic numerals — algorithmic\ndeva\tDevanagari digits\nethi\tEthiopic numerals — algorithmic\nfinance\tFinancial numerals — may be algorithmic\nfullwide\tFull width digits\ngeor\tGeorgian numerals — algorithmic\ngong\tGunjala Gondi digits\ngonm\tMasaram Gondi digits\ngrek\tGreek upper case numerals — algorithmic\ngreklow\tGreek lower case numerals — algorithmic\ngujr\tGujarati digits\nguru\tGurmukhi digits\nhanidays\tHan-character day-of-month numbering for lunar/other traditional calendars\nhanidec\tPositional decimal system using Chinese number ideographs as digits\nhans\tSimplified Chinese numerals — algorithmic\nhansfin\tSimplified Chinese financial numerals — algorithmic\nhant\tTraditional Chinese numerals — algorithmic\nhantfin\tTraditional Chinese financial numerals — algorithmic\nhebr\tHebrew numerals — algorithmic\nhmng\tPahawh Hmong digits\nhmnp\tNyiakeng Puachue Hmong digits\njava\tJavanese digits\njpan\tJapanese numerals — algorithmic\njpanfin\tJapanese financial numerals — algorithmic\njpanyear\tJapanese first-year Gannen numbering for Japanese calendar\nkali\tKayah Li digits\nkhmr\tKhmer digits\nknda\tKannada digits\nlana\tTai Tham Hora (secular) digits\nlanatham\tTai Tham Tham (ecclesiastical) digits\nlaoo\tLao digits\nlatn\tLatin digits\nlepc\tLepcha digits\nlimb\tLimbu digits\nmathbold\tMathematical bold digits\nmathdbl\tMathematical double-struck digits\nmathmono\tMathematical monospace digits\nmathsanb\tMathematical sans-serif bold digits\nmathsans\tMathematical sans-serif digits\nmlym\tMalayalam digits\nmodi\tModi digits\nmong\tMongolian digits\nmroo\tMro digits\nmtei\tMeetei Mayek digits\nmymr\tMyanmar digits\nmymrshan\tMyanmar Shan digits\nmymrtlng\tMyanmar Tai Laing digits\nnative\tNative digits\nnewa\tNewa digits\nnkoo\tN'Ko digits\nolck\tOl Chiki digits\norya\tOriya digits\nosma\tOsmanya digits\nrohg\tHanifi Rohingya digits\nroman\tRoman upper case numerals — algorithmic\nromanlow\tRoman lowercase numerals — algorithmic\nsaur\tSaurashtra digits\nshrd\tSharada digits\nsind\tKhudawadi digits\nsinh\tSinhala Lith digits\nsora\tSora_Sompeng digits\nsund\tSundanese digits\ntakr\tTakri digits\ntalu\tNew Tai Lue digits\ntaml\tTamil numerals — algorithmic\ntamldec\tModern Tamil decimal digits\ntelu\tTelugu digits\nthai\tThai digits\ntirh\tTirhuta digits\ntibt\tTibetan digits\ntraditio\tTraditional numerals — may be algorithmic\nvaii\tVai digits\nwara\tWarang Citi digits\nwcho\tWancho digits\n*/\n\nenum NumeralSystem {\n  ascii = 0x0038 - 8,\n  DOUBLE_CIRCLED = 0x24fc - 8,\n  ROMAN_NUMERAL = 0x2167 - 8,\n  SMALL_ROMAN_NUMERAL = 0x2177 - 8,\n  HANGZHOU_NUMERAL = 0x3028 - 8,\n  COUNTING_ROD_UNIT = 0x1d367 - 8,\n  ARABIC_INDIC = 0x0668 - 8,\n  EXTENDED_ARABIC_INDIC = 0x06f8 - 8,\n  NKO = 0x07c8 - 8,\n  DEVANAGARI = 0x096e - 8,\n  BENGALI = 0x09ee - 8,\n  GURMUKHI = 0x0a6e - 8,\n  GUJARATI = 0x0aee - 8,\n  ORIYA = 0x0b6e - 8,\n  TAMIL = 0x0bee - 8,\n  TELUGU = 0x0c6e - 8,\n  KANNADA = 0x0cee - 8,\n  MALAYALAM = 0x0d6e - 8,\n  SINHALA_LITH = 0x0dee - 8,\n  SINHALA_ARCHAIC = 0x111e8 - 8,\n  THAI = 0x0e58 - 8,\n  LAO = 0x0ed8 - 8,\n  TIBETAN = 0x0f28 - 8,\n  MYANMAR = 0x1048 - 8,\n  MYANMAR_SHAN = 0x1098 - 8,\n  ETHIOPIC = 0x1370 - 8,\n  KHMER = 0x17e8 - 8,\n  LEPCHA = 0x1c48 - 8,\n  VAI = 0xa628 - 8,\n  MYANMAR_TAI_LAING = 0xa9f8 - 8,\n  // FULLWIDTH = 0xff18 - 8,\n  COPTIC_EPACT = 0x102e8 - 8,\n  OSMANYA = 0x104a8 - 8,\n  /*\n  MAYAN_NUMERAL = 0x1d2e8 - 8,\n  BALINESE = 0x1b58 - 8,\n  MONGOLIAN = 0x1818 - 8,\n  LIMBU = 0x194e - 8,\n  NEW_TAI_LUE = 0x19d8 - 8,\n  TAI_THAM_HORA = 0x1a88 - 8,\n  TAI_THAM_THAM = 0x1a98 - 8,\n  SUNDANESE = 0x1bb8 - 8,\n  OL_CHIKI = 0x1c58 - 8,\n  SAURASHTRA = 0xa8d8 - 8,\n  KAYAH_LI = 0xa908 - 8,\n  JAVANESE = 0xa9d8 - 8,\n  CHAM = 0xaa58 - 8,\n  MEETEI_MAYEK = 0xabf8 - 8,\n  HANIFI_ROHINGYA = 0x10d38 - 8,\n  RUMI = 0x10e67 - 8,\n  BRAHMI = 0x1106e - 8,\n  SORA_SOMPENG = 0x110f8 - 8,\n  CHAKMA = 0x1113e - 8,\n  SHARADA = 0x111d8 - 8,\n  KHUDAWADI = 0x112f8 - 8,\n  NEWA = 0x11458 - 8,\n  TIRHUTA = 0x114d8 - 8,\n  MODI = 0x11658 - 8,\n  TAKRI = 0x116c8 - 8,\n  AHOM = 0x11738 - 8,\n  WARANG_CITI = 0x118e8 - 8,\n  DIVES_AKURU = 0x11958 - 8, // Unicode version 13.0\n  BHAIKSUKI = 0x11c58 - 8,\n  MASARAM_GONDI = 0x11d58 - 8,\n  GUNJALA_GONDI = 0x11da8 - 8,\n  MRO = 0x16a68 - 8,\n  PAHAWH_HMONG = 0x16b58 - 8,\n  MEDEFAIDRIN = 0x16e88 - 8,\n  NYIAKENG_PUACHUE_HMONG = 0x1e148 - 8,\n  WANCHO = 0x1e2f8 - 8,\n  MENDE_KIKAKUI = 0x1e8ce - 8,\n  ADLAM = 0x1e958 - 8,\n  SEGMENTED = 0x1fbf8 - 8,\n  */\n  /*\n  SUPERSCRIPT = 0x2078 - 8,\n  SUBSCRIPT = 0x2088 - 8,\n  PARENTHESIZED = 0x247b - 8,\n  CIRCLED = 0x2467 - 8,\n  DINGBAT_NEGATIVE_CIRCLED = 0x277d - 8,\n  DINGBAT_CIRCLED_SANS_SERIF = 0x2787 - 8,\n  DINGBAT_NEGATIVE_CIRCLED_SANS_SERIF = 0x2791 - 8,\n  */\n  /*\n    MATHEMATICAL_BOLD = 0x1d7d6 - 8,\n    MATHEMATICAL_DOUBLE_STRUCK = 0x1d7e0 - 8,\n    MATHEMATICAL_SANS_SERIF = 0x1d7ea - 8,\n    MATHEMATICAL_SANS_SERIF_BOLD = 0x1d7f4 - 8,\n    MATHEMATICAL_MONOSPACE = 0x1d7fe - 8,\n    */\n}\n\nexport const isNumeralSystem = (c: any): c is NumeralSystem =>\n  typeof c === 'number' && NumeralSystem[c] != null;\n\n// type NumeralSystemName = keyof typeof NumeralSystem;\n\nexport const NumeralSystemLocaleMap: {\n  [key: string]: string;\n} = Object.freeze({\n  // ascii: undefined,\n  ROMAN_NUMERAL: 'roman',\n  SMALL_ROMAN_NUMERAL: 'romanlow',\n  // HANGZHOU_NUMERAL: 0x3028 - 8,\n  // MAYAN_NUMERAL: 0x1d2e8 - 8,\n  // COUNTING_ROD_UNIT: 0x1d367 - 8,\n  ARABIC_INDIC: 'arab',\n  EXTENDED_ARABIC_INDIC: 'arabext',\n  NKO: 'nkoo',\n  DEVANAGARI: 'deva',\n  BENGALI: 'beng',\n  GURMUKHI: 'guru',\n  GUJARATI: 'gujr',\n  ORIYA: 'orya',\n  // TODO taml eller tamldec?\n  TAMIL: 'tamldec',\n  TELUGU: 'telu',\n  KANNADA: 'knda',\n  MALAYALAM: 'mlym',\n  SINHALA_LITH: 'sinh',\n  THAI: 'thai',\n  LAO: 'laoo',\n  TIBETAN: 'tibt',\n  MYANMAR: 'mymr',\n  MYANMAR_SHAN: 'mymrshan',\n  ETHIOPIC: 'ethi',\n  KHMER: 'khmr',\n  MONGOLIAN: 'mong',\n  LIMBU: 'limb',\n  NEW_TAI_LUE: 'talu',\n  TAI_THAM_HORA: 'lana',\n  TAI_THAM_THAM: 'lanatham',\n  BALINESE: 'bail',\n  SUNDANESE: 'sund',\n  LEPCHA: 'lepc',\n  OL_CHIKI: 'olck',\n  /*\n    SUPERSCRIPT : 0x2078 - 8,\n    SUBSCRIPT : 0x2088 - 8,\n    CIRCLED : 0x2467 - 8,\n    PARENTHESIZED : 0x247b - 8,\n    DOUBLE_CIRCLED : 0x24fc - 8,\n    DINGBAT_NEGATIVE_CIRCLED : 0x277d - 8,\n    DINGBAT_CIRCLED_SANS_SERIF : 0x2787 - 8,\n    DINGBAT_NEGATIVE_CIRCLED_SANS_SERIF : 0x2791 - 8,\n    */\n  VAI: 'vaii',\n  SAURASHTRA: 'saur',\n  KAYAH_LI: 'kali',\n  JAVANESE: 'java',\n  MYANMAR_TAI_LAING: 'mymrtlng',\n  CHAM: 'cham',\n  MEETEI_MAYEK: 'mtei',\n  // FULLWIDTH : 0xff18 - 8,\n  // COPTIC_EPACT: 0x102e8 - 8,\n  OSMANYA: 'osma',\n  HANIFI_ROHINGYA: 'rohg',\n  // RUMI: 0x10e67 - 8,\n  BRAHMI: 'brah',\n  SORA_SOMPENG: 'sora',\n  CHAKMA: 'cakm',\n  SHARADA: 'shrd',\n  // SINHALA_ARCHAIC: 0x111e8 - 8,\n  KHUDAWADI: 'sind',\n  NEWA: 'newa',\n  TIRHUTA: 'tirh',\n  MODI: 'modi',\n  TAKRI: 'takr',\n  AHOM: 'ahom',\n  WARANG_CITI: 'wara',\n  // DIVES_AKURU: 0x11958 - 8, // Unicode version 13.0\n  BHAIKSUKI: 'bhks',\n  MASARAM_GONDI: 'gonm',\n  GUNJALA_GONDI: 'gong',\n  MRO: 'mroo',\n  PAHAWH_HMONG: 'hmng',\n  // MEDEFAIDRIN: 0x16e88 - 8,\n  /*\n    MATHEMATICAL_BOLD : 0x1d7d6 - 8,\n    MATHEMATICAL_DOUBLE_STRUCK : 0x1d7e0 - 8,\n    MATHEMATICAL_SANS_SERIF : 0x1d7ea - 8,\n    MATHEMATICAL_SANS_SERIF_BOLD : 0x1d7f4 - 8,\n    MATHEMATICAL_MONOSPACE : 0x1d7fe - 8,\n    */\n  NYIAKENG_PUACHUE_HMONG: 'hmnp',\n  WANCHO: 'wcho',\n  // MENDE_KIKAKUI: 0x1e8ce - 8,\n  ADLAM: 'adlm',\n  // SEGMENTED: 0x1fbf8 - 8,\n});\n\nexport const getLocaleString = (ns: NumeralSystem) => {\n  const numberingSystem = NumeralSystemLocaleMap[NumeralSystem[ns]];\n  const locale =\n    numberingSystem != null ? `en-u-nu-${numberingSystem}` : undefined;\n  return locale;\n};\n\nconst isRomanNumeral = (ns: NumeralSystem) =>\n  ns === NumeralSystem.ROMAN_NUMERAL ||\n  ns === NumeralSystem.SMALL_ROMAN_NUMERAL;\n\nexport const formatNumber = (\n  ns: NumeralSystem,\n  n: number,\n  options?: Intl.NumberFormatOptions\n) => {\n  if (Number.isInteger(n) && isRomanNumeral(ns)) {\n    const r = toRomanNumeral(n, false);\n    return r;\n    // return ns === NumeralSystem.SMALL_ROMAN_NUMERAL ? r.toLowerCase() : r;\n  }\n\n  return n.toLocaleString(getLocaleString(ns), options);\n};\n\nexport const formatTime = (\n  ns: NumeralSystem,\n  n: number,\n  options?: Intl.DateTimeFormatOptions\n) => {\n  const d = new Date(0, 0, 0, 0, 0, n);\n  const seconds = d.getSeconds();\n  const minutes = d.getMinutes();\n  const hours = d.getHours();\n  const arr = [seconds];\n  if (minutes > 0 || hours > 0) {\n    arr.unshift(minutes);\n    if (hours > 0) {\n      arr.unshift(hours);\n    }\n  }\n  if (isRomanNumeral(ns)) {\n    ns = NumeralSystem.ascii;\n  }\n  return arr\n    .map(x => [x, formatNumber(ns, x, options)])\n    .map(([x, s]) => (x < 10 ? formatNumber(ns, 0, options) + s : s))\n    .join(':');\n  // return d.toLocaleTimeString(getLocaleString(ns), { hour12: false, ...options });\n};\n\nexport default NumeralSystem;\n","const data: Array<[number, string, string]> = [\n  [1000, 'Ⅿ', 'M'],\n  [900, 'ⅭⅯ', 'CM'],\n  [500, 'Ⅾ', 'D'],\n  [400, 'ⅭⅮ', 'CD'],\n  [100, 'Ⅽ', 'C'],\n  [90, 'ⅩⅭ', 'XC'],\n  [50, 'Ⅼ', 'L'],\n  [40, 'ⅩⅬ', 'XL'],\n  [12, 'Ⅻ', 'XII'],\n  [11, 'Ⅺ', 'XI'],\n  [10, 'Ⅹ', 'X'],\n  [9, 'Ⅸ', 'IX'],\n  [8, 'Ⅷ', 'VIII'],\n  [7, 'Ⅶ', 'VII'],\n  [6, 'Ⅵ', 'VI'],\n  [5, 'Ⅴ', 'V'],\n  [4, 'Ⅳ', 'IV'],\n  [3, 'Ⅲ', 'III'],\n  [2, 'Ⅱ', 'II'],\n  [1, 'Ⅰ', 'I'],\n];\n\nconst toRomanNumeral = (number: number, returnUnicode: boolean): string => {\n  if (number === 0 || number > 4000) {\n    return number.toString();\n  }\n  let result = [number < 0 ? '−' : ''];\n  number = Math.abs(number);\n\n  data.forEach(([digit, unicode, ascii]) => {\n    while (number >= digit && number > 0) {\n      if ((digit === 12 && number > 12) || (digit === 11 && number > 11)) {\n        break;\n      }\n\n      result.push(returnUnicode ? unicode : ascii);\n      number -= digit;\n    }\n  });\n  return result.join('');\n};\n\nexport default toRomanNumeral;\n","const zero = () => 0;\n\nexport default zero;\n","export default function assertNever(x: never): never {\n  throw new Error('Unexpected value: ' + x);\n}\n","export const hexOffset = Math.sqrt(3) / 2;\n\nexport const hexagonPoints = () => [\n  { y: 0, x: 1 },\n  { y: 0.5, x: hexOffset + 1 },\n  { y: 1.5, x: hexOffset + 1 },\n  { y: 2, x: 1 },\n  { y: 1.5, x: -hexOffset + 1 },\n  { y: 0.5, x: -hexOffset + 1 },\n];\n","import { assertNever } from '../lib';\nimport { calculateCoordinate } from './coordinate';\nimport _ from 'lodash';\n\nexport enum GridType {\n  SQUARE,\n  HEX,\n}\n\nexport const isGridType = (c: any): c is GridType =>\n  typeof c === 'number' && GridType[c] != null;\n\nexport enum Topology {\n  LIMITED,\n  TOROIDAL,\n}\n\nexport const isTopology = (c: any): c is Topology =>\n  typeof c === 'number' && Topology[c] != null;\n\nexport type Grid = {\n  cols: number;\n  rows: number;\n  type: GridType;\n  topology: Topology;\n};\n\nconst resolver = (a: number, b: number) => (a << 16) | b;\n\nconst hexNeighbours = (\n  cols: number,\n  origo: number\n): Array<{\n  row: number;\n  col: number;\n}> => {\n  const origin = calculateCoordinate(cols, origo);\n  const [even, odd] = [\n    [\n      [1, 0],\n      [1, -1],\n      [0, -1],\n      [-1, -1],\n      [-1, 0],\n      [0, 1],\n    ],\n    [\n      [1, 1],\n      [1, 0],\n      [0, -1],\n      [-1, 0],\n      [-1, 1],\n      [0, 1],\n    ],\n  ];\n\n  const neighbours = (origin.row & 1) === 0 ? even : odd;\n  return neighbours\n    .map(([row, col]) => ({\n      row: row + origin.row,\n      col: col + origin.col,\n    }))\n    .flat(1);\n};\n\nconst hexNeighboursMemoized = _.memoize(hexNeighbours, resolver);\n\nconst squareNeighbours = (\n  cols: number,\n  origo: number\n): Array<{\n  row: number;\n  col: number;\n}> => {\n  const origin = calculateCoordinate(cols, origo);\n  return [-1, 0, 1]\n    .map(col =>\n      [-1, 0, 1].map(row => ({\n        row: row + origin.row,\n        col: col + origin.col,\n      }))\n    )\n    .flat(1);\n};\n\nconst squareNeighboursMemoized = _.memoize(squareNeighbours, resolver);\n\nexport const getNeighbourMatrix = (\n  type: GridType\n): ((cols: number, origo: number) => Array<{ row: number; col: number }>) => {\n  switch (type) {\n    case GridType.SQUARE:\n      return squareNeighboursMemoized;\n    case GridType.HEX:\n      return hexNeighboursMemoized;\n  }\n  assertNever(type);\n};\n","export type CoordinateObject = { row: number; col: number };\nexport type Coordinate = number | CoordinateObject;\n\nexport const calculateCoordinate = (cols: number, index: Coordinate) => {\n  if (typeof index === 'object') {\n    return index;\n  }\n  const col = index % cols;\n  const row = (index - col) / cols;\n  return { col, row };\n};\n\nexport const calculateIndex = (cols: number, coordinate: Coordinate): number =>\n  typeof coordinate === 'number'\n    ? coordinate\n    : coordinate.col + cols * coordinate.row;\n","import { immerable } from 'immer';\nimport { Coordinate, calculateIndex } from './coordinate';\nimport { CellRecord, CellStateStats } from './cell';\nimport { Grid } from './grid';\n\nexport class GameError {\n  readonly cause?: Error;\n  readonly message: string;\n  [immerable] = true;\n  constructor(msg: string, err?: Error) {\n    this.message = msg;\n    this.cause = Object.freeze(err);\n  }\n}\n\nexport enum GameState {\n  NOT_INITIALIZED,\n  INITIALIZED,\n  PLAYING,\n  PAUSED,\n  COMPLETED,\n  GAME_OVER,\n  ERROR,\n  DEMO,\n}\n\nexport type Level = Grid & {\n  mines: number;\n};\n\nexport type CellArray = Uint16Array;\n\nexport type GameRecord = {\n  cells: CellArray;\n  state: GameState;\n  level: Readonly<Level>;\n  cellStates: CellStateStats;\n  error: GameError | null;\n  version: number;\n  onGameOver: () => void;\n};\n\nexport const getCell = (\n  {\n    level,\n    cells,\n  }:\n    | {\n        level: Level;\n        cells: CellArray;\n      }\n    | GameRecord,\n  coordinate: Coordinate\n): CellRecord => {\n  return cells[calculateIndex(level.cols, coordinate)] as CellRecord;\n};\n","export type NumThreats = 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8;\n\nexport function isNumThreats(n: any): n is NumThreats {\n  return Number.isInteger(Number(n)) && n >= 0 && n <= 8;\n}\n\ntype value =\n  | 0\n  | 1\n  | 2\n  | 3\n  | 4\n  | 5\n  | 6\n  | 7\n  | 8\n  | 9\n  | 10\n  | 11\n  | 12\n  | 13\n  | 14\n  | 15;\n\nexport type Mine = Exclude<value, 0>;\n\nexport enum CellState {\n  NEW,\n  OPEN,\n  FLAGGED,\n  UNCERTAIN,\n  EXPLODED,\n}\n\nexport type CellStateStats = { [key in CellState]: number };\n\n// ?       | State   | Mine    | Threats\n// --------|---------|---------|--------\n// 0 0 0 0 | 0 0 0 0 | 0 0 0 0 | 0 0 0 0\n// f e d c | b a 9 8 | 7 6 5 4 | 3 2 1 0\n\n// const ?Mask = 12;\nconst stateMask = 8;\nconst mineMask = 4;\nconst threatsMask = 0;\n\ntype mask = typeof stateMask | typeof mineMask | typeof threatsMask;\n\nexport const setValue = (mask: mask, prev: number, value: value) => {\n  if (value < 0 || value > 0b1111) {\n    throw new RangeError(`Invalid value: ${value}`);\n  }\n  return (prev & ~(0xf << mask)) | (value << mask);\n};\n\nconst getValue = (mask: mask, cell: number): value =>\n  ((cell & (0xf << mask)) >> mask) as value;\n\nexport const setState = (prev: number, state: CellState) => {\n  if (CellState[state] == null) {\n    throw new RangeError(`Unknown state ${state}`);\n  }\n  return setValue(stateMask, prev, state);\n};\n\nexport const getState = (cell: number): CellState => getValue(stateMask, cell);\n\nexport const setMine = (prev: number, mine: value) =>\n  setValue(mineMask, prev, mine);\n\nexport const getMine = (cell: number): Mine | undefined => {\n  const mine = getValue(mineMask, cell);\n  return mine !== 0 ? mine : undefined;\n};\n\nexport const setThreats = (prev: number, threats: NumThreats) => {\n  if (!isNumThreats(threats)) {\n    throw new RangeError(`Invalid threat count: ${threats}`);\n  }\n\n  return setValue(threatsMask, prev, threats);\n};\n\nexport const getThreats = (cell: number): NumThreats => {\n  const threats = getValue(threatsMask, cell);\n  if (!isNumThreats(threats)) {\n    throw new RangeError(`Invalid threat count: ${threats}`);\n  }\n\n  return threats;\n};\n\nexport const toObject = (cell: number): CellRecordObject => {\n  const mine = getMine(cell);\n  const threatCount = mine !== undefined ? getThreats(cell) : undefined;\n  const state = getState(cell);\n\n  return {\n    state,\n    threatCount,\n    mine,\n  };\n};\n\nexport const fromObject = (o: CellRecordObject) =>\n  setThreats(setMine(setState(0, o.state), o.mine ?? 0), o.threatCount ?? 0);\n\nexport type CellRecordObject = {\n  state: CellState;\n  threatCount?: NumThreats;\n  mine?: Mine;\n};\n\nexport type CellRecord = number;\n","import theme from './theme.module.scss';\n\nexport enum Mode {\n  DARK,\n  LIGHT,\n  AUTO,\n}\n\ntype PartialTheme = {\n  name: string;\n  styles: Array<{ readonly [key: string]: string }>;\n  mode?: Mode;\n  symbols?: {\n    flag: string;\n  };\n};\n\nexport type ITheme = Readonly<\n  PartialTheme & {\n    classNames: ReadonlyArray<string>;\n  }\n>;\n\nexport const isTheme = (c: any): c is ITheme =>\n  c != null &&\n  typeof c.name === 'string' &&\n  (c.mode == null || Mode[c.mode] != null) &&\n  Array.isArray(c.styles) &&\n  (c.styles as Array<any>).find(v => typeof v !== 'string') != null &&\n  (c.symbols == null || typeof c.symbols.flag === 'string');\n\nexport const createTheme = (partial: PartialTheme): ITheme => {\n  return Object.freeze({\n    ...partial,\n    classNames: Object.freeze(partial.styles.map(t => t.Theme)),\n  });\n};\n\nconst simple: ITheme = createTheme({\n  name: 'Simple',\n  styles: [theme],\n});\n\nexport default simple;\n","import solarized from './solarized.module.scss';\nimport _dark from './dark.module.scss';\nimport _light from './light.module.scss';\nimport _auto from './auto.module.scss';\nimport { ITheme, Mode, createTheme } from '../theme';\n\nexport const dark: ITheme = createTheme({\n  name: 'Solarized dark',\n  styles: [solarized, _dark],\n  mode: Mode.DARK,\n});\n\nexport const light: ITheme = createTheme({\n  name: 'Solarized light',\n  styles: [solarized, _light],\n  mode: Mode.LIGHT,\n});\n\nexport const auto: ITheme = createTheme({\n  name: 'Solarized (auto)',\n  styles: [solarized, _auto],\n  mode: Mode.AUTO,\n});\n\nexport default auto;\n","import simple from './theme';\n\nimport solarized, * as Solarized from './Solarized';\n\nexport const defaultTheme = solarized;\n\nconst themes = () => {\n  return [simple, solarized, Solarized.dark, Solarized.light];\n};\n\nexport default themes;\n","import { SettingsContextValues } from '.';\nimport React from 'react';\n\nconst SETTINGS_STORAGE_KEY = 'Minesweeper.settings';\n\nfunction validateType(type: string) {\n  if (!['string', 'number', 'boolean', 'object'].includes(type)) {\n    throw new TypeError(`Unable to save value of type '${type}`);\n  }\n}\n\nexport function loadValue(type: string, key: string) {\n  const nskey = `${SETTINGS_STORAGE_KEY}.${key}`;\n  try {\n    validateType(type);\n    const json = localStorage.getItem(nskey);\n    switch (type) {\n      case 'number': {\n        const v = Number(json);\n        return isNaN(v) ? undefined : v;\n      }\n      case 'string':\n        return json;\n      case 'boolean':\n      case 'object': {\n        const parsed = json != null ? JSON.parse(json) : undefined;\n        if (type === 'boolean') {\n          return parsed === true;\n        }\n        return typeof parsed === 'object' ? parsed : undefined;\n      }\n      default:\n        console.warn(`Unhandled type ${type}`);\n    }\n  } catch (err) {\n    try {\n      localStorage.removeItem(nskey);\n    } catch (_err) {}\n    console.warn({ err, type, key });\n  }\n  return;\n}\n\nexport function saveValue(type: string, key: string, value: any) {\n  try {\n    validateType(type);\n    localStorage.setItem(\n      `${SETTINGS_STORAGE_KEY}.${key}`,\n      type === 'object' ? JSON.stringify(value) : value\n    );\n  } catch (err) {\n    console.warn(err);\n  }\n}\ntype Primitive = number | string | boolean;\n\nfunction useLocalStorage<T extends Primitive>(\n  key: keyof SettingsContextValues,\n  defaultValue: T\n): [T, (value: T) => void] {\n  const type = typeof defaultValue;\n  const fromLocalStorage = loadValue(type, key);\n  const [value, setValue] = React.useState(fromLocalStorage ?? defaultValue);\n\n  return [\n    value,\n    React.useCallback(\n      v => {\n        setValue(v);\n        saveValue(type, key, v);\n      },\n      [key, type]\n    ),\n  ];\n}\n\nexport default useLocalStorage;\n","import React, { createContext } from 'react';\nimport Themes, { defaultTheme } from '../../../Theme';\nimport { ITheme, isTheme } from '../../../Theme/theme';\nimport useLocalStorage from './useLocalStorage';\nimport _ from 'lodash';\n\nexport type IThemeContext = {\n  theme: ITheme;\n  setTheme: (theme: ITheme) => void;\n};\n\nexport const ThemeContext = createContext<IThemeContext>({\n  theme: defaultTheme,\n  setTheme: _.noop,\n});\nconst themes = new Map(Themes().map(t => [t.name, t]));\n\nexport const ThemeContextProvider = (props: { children?: React.ReactNode }) => {\n  let [name, setTheme] = useLocalStorage('theme', defaultTheme.name);\n  let theme = themes.get(name);\n  if (!isTheme(theme)) {\n    if (theme != null) console.warn('Invalid theme', { name, theme });\n    theme = defaultTheme;\n  }\n  return (\n    <ThemeContext.Provider\n      value={{\n        theme,\n        setTheme: (t: ITheme) => setTheme(t.name),\n      }}\n    >\n      {props.children}\n    </ThemeContext.Provider>\n  );\n};\n\nexport default ThemeContextProvider;\n","import React, { createContext } from 'react';\nimport useLocalStorage from './useLocalStorage';\nimport _ from 'lodash';\n\nexport type IFitWindowContext = {\n  fitWindow: boolean;\n  setFitWindow: (fitWindow: boolean) => void;\n};\nconst defaultFitWindow = false;\n\nexport const FitWindowContext = createContext<IFitWindowContext>({\n  fitWindow: defaultFitWindow,\n  setFitWindow: _.noop,\n});\n\nexport const FitWindowContextProvider = (props: {\n  children?: React.ReactNode;\n}) => {\n  const [fitWindow, setFitWindow] = useLocalStorage(\n    'fitWindow',\n    defaultFitWindow as boolean\n  );\n  return (\n    <FitWindowContext.Provider value={{ fitWindow, setFitWindow }}>\n      {props.children}\n    </FitWindowContext.Provider>\n  );\n};\n\nexport default FitWindowContextProvider;\n","import React, { createContext } from 'react';\nimport { NumeralSystem, isNumeralSystem } from '../../../lib';\nimport useLocalStorage from './useLocalStorage';\nimport _ from 'lodash';\n\nexport type INumeralSystemContext = {\n  numeralSystem: NumeralSystem;\n  setNumeralSystem: (NumeralSystem: NumeralSystem) => void;\n};\nconst defaultNumeralSystem = NumeralSystem.ascii;\n\nexport const NumeralSystemContext = createContext<INumeralSystemContext>({\n  numeralSystem: defaultNumeralSystem,\n  setNumeralSystem: _.noop,\n});\n\nexport const NumeralSystemContextProvider = (props: {\n  children?: React.ReactNode;\n}) => {\n  let [numeralSystem, setNumeralSystem] = useLocalStorage(\n    'numeralSystem',\n    defaultNumeralSystem\n  );\n  if (!isNumeralSystem(numeralSystem)) {\n    numeralSystem = defaultNumeralSystem;\n  }\n  return (\n    <NumeralSystemContext.Provider value={{ numeralSystem, setNumeralSystem }}>\n      {props.children}\n    </NumeralSystemContext.Provider>\n  );\n};\n\nexport default NumeralSystemContextProvider;\n","import React, { createContext } from 'react';\nimport useLocalStorage from './useLocalStorage';\nimport _ from 'lodash';\n\nexport type IRotateContext = {\n  rotate: boolean;\n  setRotate: (rotate: boolean) => void;\n};\nconst defaultRotate = false;\n\nexport const RotateContext = createContext<IRotateContext>({\n  rotate: defaultRotate,\n  setRotate: _.noop,\n});\n\nexport const RotateContextProvider = (props: {\n  children?: React.ReactNode;\n}) => {\n  const [rotate, setRotate] = useLocalStorage(\n    'rotate',\n    defaultRotate as boolean\n  );\n  return (\n    <RotateContext.Provider value={{ rotate, setRotate }}>\n      {props.children}\n    </RotateContext.Provider>\n  );\n};\n\nexport default RotateContextProvider;\n","import React from 'react';\nimport ThemeContextProvider, { IThemeContext, ThemeContext } from './theme';\nimport FitWindowContextProvider, {\n  FitWindowContext,\n  IFitWindowContext,\n} from './fitWindow';\nimport NumeralSystemContextProvider, {\n  INumeralSystemContext,\n  NumeralSystemContext,\n} from './numeralSystem';\nimport RotateContextProvider, { IRotateContext, RotateContext } from './rotate';\nimport { OmitByValueType } from '../../../lib';\n\nexport {\n  FitWindowContextProvider,\n  ThemeContextProvider,\n  NumeralSystemContextProvider,\n};\nexport * from './fitWindow';\n\nexport * from './theme';\n\nexport * from './numeralSystem';\n\nexport * from './rotate';\n\nexport * from './useLocalStorage';\n\ntype Provider<P extends object> = (\n  props: React.PropsWithChildren<P>\n) => JSX.Element;\nconst useProviders =\n  <T extends object>(...Providers: Provider<React.Props<T>>[]) =>\n  (Child: React.FC<T>) =>\n  (props: T & JSX.IntrinsicAttributes) =>\n    Providers.reduce(\n      (acc, Provider) => <Provider>{acc}</Provider>,\n      <Child {...props} />\n    );\n\nexport const createSettingsContext: <T extends object>(\n  Child: React.FC<T>\n) => // eslint-disable-next-line react-hooks/rules-of-hooks\n(props: T & JSX.IntrinsicAttributes) => JSX.Element = useProviders(\n  FitWindowContextProvider,\n  ThemeContextProvider,\n  NumeralSystemContextProvider,\n  RotateContextProvider\n);\n\nexport type SettingsContext = IThemeContext &\n  INumeralSystemContext &\n  IFitWindowContext &\n  IRotateContext;\n\nexport type SettingsContextValues = OmitByValueType<SettingsContext, Function>;\n\nexport const useSettingsContext = () => {\n  const { theme: initialTheme, setTheme } = React.useContext(ThemeContext);\n  const { fitWindow: initialFitWindow, setFitWindow } =\n    React.useContext(FitWindowContext);\n  const { numeralSystem: initialNumeralSystem, setNumeralSystem } =\n    React.useContext(NumeralSystemContext);\n\n  const { rotate: initialRotate, setRotate } = React.useContext(RotateContext);\n\n  const state: SettingsContext = {\n    fitWindow: initialFitWindow,\n    setFitWindow,\n    theme: initialTheme,\n    setTheme,\n    numeralSystem: initialNumeralSystem,\n    setNumeralSystem,\n    rotate: initialRotate,\n    setRotate,\n  };\n\n  return {\n    state,\n    setState({\n      theme,\n      fitWindow,\n      numeralSystem,\n      rotate,\n    }: SettingsContextValues): void {\n      setTheme(theme);\n      setFitWindow(fitWindow);\n      setNumeralSystem(numeralSystem);\n      setRotate(rotate);\n    },\n  };\n};\n\nexport default createSettingsContext;\n","import {\n  CellArray,\n  GameError,\n  GameRecord,\n  GameState,\n  Level,\n  getCell,\n} from './board';\nimport { Coordinate, calculateIndex } from './coordinate';\nimport {\n  CellRecord,\n  CellRecordObject,\n  CellState,\n  CellStateStats,\n  Mine,\n  NumThreats,\n  fromObject,\n  getMine,\n  getState,\n  getThreats,\n  setMine,\n  setState,\n  setThreats,\n} from './cell';\nimport {\n  Grid,\n  GridType,\n  Topology,\n  getNeighbourMatrix,\n  isGridType,\n  isTopology,\n} from './grid';\nimport produce from 'immer';\nimport _ from 'lodash';\nimport { assertNever, zero } from '../lib';\nimport { saveValue } from '../store/contexts/settings';\n\nconst createLevel = (level?: Partial<Level>) =>\n  Object.freeze({\n    cols: 0,\n    rows: 0,\n    mines: 0,\n    type: GridType.SQUARE,\n    topology: Topology.LIMITED,\n    ...level,\n  });\n\nconst createCellStateStats = (\n  stats?: Partial<CellStateStats>\n): CellStateStats => ({\n  [CellState.NEW]: 0,\n  [CellState.OPEN]: 0,\n  [CellState.FLAGGED]: 0,\n  [CellState.UNCERTAIN]: 0,\n  [CellState.EXPLODED]: 0,\n  ...stats,\n});\n\nconst createBoard: (game: Partial<GameRecord>) => GameRecord = game =>\n  produce(game, (draft: Partial<GameRecord>) => ({\n    cells: new Uint16Array(),\n    state: GameState.NOT_INITIALIZED,\n    level: createLevel(),\n    cellStates: createCellStateStats(),\n    error: null,\n    version: 0,\n    onGameOver: _.noop,\n    ...draft,\n  })) as GameRecord;\n\nconst getCellStates = (cells: CellArray) =>\n  createCellStateStats(_.countBy(cells, cell => getState(cell)));\n\nconst createEmptyCells = ({ cols, rows }: Level): CellArray =>\n  new Uint16Array(rows * cols);\n\nfunction initialize(\n  game: Pick<GameRecord, 'level' | 'onGameOver'>,\n  origin: Coordinate,\n  state: GameState.INITIALIZED | GameState.PLAYING\n): GameRecord {\n  const { level, onGameOver } = game;\n  const cells = createEmptyCells(level);\n  const { cols, rows, mines } = level;\n\n  const mineSet = new Set<number>()\n    // Make sure we don't start with a bang\n    .add(calculateIndex(cols, origin));\n  let iterations = 0;\n  const dim = cols * rows;\n  while (mineSet.size <= mines) {\n    if (iterations++ > mines * 10) {\n      throw new Error('Infinite loop?');\n    }\n    const coordinate = randomInt(dim);\n    if (!mineSet.has(coordinate)) {\n      mineSet.add(coordinate);\n      cells[coordinate] = setMine(\n        cells[coordinate],\n        (randomInt(14) + 1) as Mine\n      );\n    }\n  }\n\n  return createBoard({\n    level: createLevel(level),\n    cells: cells.map((cell, coord) => {\n      const threatCount = countThreats({ level, cells }, coord);\n      return threatCount !== undefined ? setThreats(cell, threatCount) : cell;\n    }),\n    cellStates: createCellStateStats({ [CellState.NEW]: mines }),\n    state,\n    onGameOver,\n  });\n}\n\nfunction updateCell(\n  board: GameRecord,\n  [coordinate, newCell]: [Coordinate, CellRecord]\n): void {\n  const oldCell = getCell(board, coordinate);\n  const oldThreatCount = getThreats(oldCell);\n  const newThreatCount = getThreats(newCell);\n  if (board.state === GameState.PLAYING && oldThreatCount !== newThreatCount) {\n    throw new Error(`Expected ${newThreatCount}, got ${oldThreatCount}`);\n  }\n  board.cells[calculateIndex(board.level.cols, coordinate)] = newCell;\n}\n\nfunction countThreats(\n  board:\n    | Pick<GameRecord, 'level' | 'cells'>\n    | { level: Level; cells: [number, CellRecord][] },\n  p: number\n): NumThreats | undefined {\n  if (getMine(board.cells[p]! as number) !== undefined) {\n    return undefined;\n  }\n  let threats: NumThreats = 0;\n  visitNeighbours(board.level, p, coordinate => {\n    const cell = board.cells[coordinate]! as number;\n    if (getMine(cell) !== undefined) {\n      threats++;\n    }\n  });\n  if (threats < 0 || threats > 8) {\n    throw new Error(`Unexpected threat number: ${threats}`);\n  }\n\n  return threats;\n}\n\nfunction randomInt(max: number): number {\n  return Math.floor(Math.random() * Math.floor(max));\n}\n\ntype GameCellCallback = (coordinate: number) => void;\n\nconst getNeighbours = (\n  { rows, cols, type, topology }: Grid,\n  origin: Coordinate\n) => {\n  let neighbours = getNeighbourMatrix(type)(cols, calculateIndex(cols, origin));\n  const torusAdjust = (n: number, max: number) =>\n    n === -1 ? max - 1 : n === max ? 0 : n;\n  switch (topology) {\n    case Topology.TOROIDAL:\n      neighbours = neighbours.map(({ row, col }) => ({\n        row: torusAdjust(row, rows),\n        col: torusAdjust(col, cols),\n      }));\n\n      break;\n    case Topology.LIMITED:\n      neighbours = neighbours.filter(\n        ({ row, col }) => !(col >= cols || col < 0 || row >= rows || row < 0)\n      );\n\n      break;\n\n    default:\n      assertNever(topology);\n  }\n\n  return neighbours\n    .map(({ row, col }) => col + cols * row)\n    .filter(c => c !== origin);\n};\n\nfunction visitNeighbours(\n  level: Grid,\n  origin: Coordinate,\n  ...callbacks: Array<GameCellCallback>\n) {\n  if (callbacks.length === 0) {\n    return;\n  }\n\n  getNeighbours(level, origin).forEach(coordinate =>\n    callbacks.forEach(cb => cb(coordinate))\n  );\n}\n\nexport enum Cmd {\n  POKE,\n  FLAG,\n  PAUSE,\n  UNPAUSE,\n}\n\nexport type CmdName = keyof typeof Cmd;\n\nexport const isCmdName = (s: string): s is CmdName => Cmd[s as CmdName] != null;\n\nfunction openNeighbours(origin: Coordinate, board: GameRecord): void {\n  const cell = getCell(board, origin);\n  const { level } = board;\n  let flaggedNeighboursCount = 0;\n  visitNeighbours(level, origin, coord => {\n    const c = getCell(board, coord)!;\n    const state = getState(c);\n    if (state === CellState.FLAGGED || state === CellState.EXPLODED) {\n      flaggedNeighboursCount++;\n    }\n  });\n  if (flaggedNeighboursCount < getThreats(cell)!) {\n    return;\n  }\n\n  visitNeighbours(level, origin, coord => {\n    const c = getCell(board, coord)!;\n    const state = getState(c);\n    if (state === CellState.NEW || state === CellState.UNCERTAIN) {\n      toggleOpen(coord, board);\n    }\n  });\n}\n\nfunction expectUnPause(command: Cmd, board: GameRecord): GameRecord {\n  if (command !== Cmd.UNPAUSE) {\n    throw new Error(`Illegal command: expected ${Cmd[Cmd.UNPAUSE]}`);\n  }\n  if (board.state !== GameState.PAUSED) {\n    throw new Error(`Invalid state: expected ${GameState.PAUSED}`);\n  }\n  return produce(board, draft => {\n    draft.state = GameState.PLAYING;\n  });\n}\n\nfunction nextState(\n  command: Cmd,\n  [coordinate, board]: [Coordinate, GameRecord]\n): GameRecord {\n  if (board.state === GameState.NOT_INITIALIZED) {\n    board = nextState(command, [\n      coordinate,\n      initialize(board, coordinate, GameState.PLAYING),\n    ]);\n    return board;\n  }\n\n  if (command === Cmd.PAUSE || command === Cmd.UNPAUSE) {\n    if (![GameState.PAUSED, GameState.PLAYING].includes(board.state)) {\n      return board;\n    }\n\n    return produce(board, draft => {\n      draft.state =\n        command === Cmd.PAUSE ? GameState.PAUSED : GameState.PLAYING;\n    });\n  }\n\n  return produce(board, (draft: GameRecord) => {\n    switch (command) {\n      case Cmd.POKE:\n        toggleOpen(coordinate, draft);\n        break;\n      case Cmd.FLAG:\n        toggleFlagged(coordinate, draft);\n        break;\n      default:\n        assertNever(command);\n    }\n\n    const stats = getCellStates(draft.cells);\n    draft.cellStates = stats;\n    if (\n      draft.cellStates[CellState.EXPLODED] >\n      board.cellStates[CellState.EXPLODED]\n    ) {\n      draft.state = GameState.GAME_OVER;\n      try {\n        board.onGameOver();\n      } catch (err) {\n        console.warn('Unhandled exception in onGameOver handler', err);\n      }\n    } else if (getState(getCell(draft, coordinate)!) === CellState.OPEN) {\n      const openPlusMines = draft.level.mines + stats[CellState.OPEN];\n      const numCells = draft.level.cols * draft.level.rows;\n      const done = openPlusMines === numCells;\n      draft.state = done ? GameState.COMPLETED : draft.state;\n    }\n  });\n}\n\nfunction toggleOpen(coordinate: Coordinate, board: GameRecord): void {\n  switch (board.state) {\n    case GameState.PLAYING:\n      break;\n    case GameState.INITIALIZED:\n    case GameState.PAUSED:\n    case GameState.GAME_OVER:\n    case GameState.COMPLETED:\n    case GameState.NOT_INITIALIZED:\n    case GameState.ERROR:\n    case GameState.DEMO:\n      return;\n    default:\n      assertNever(board.state);\n  }\n  const cell: CellRecord = getCell(board, coordinate);\n  const state = getState(cell);\n  if (state === CellState.FLAGGED) {\n    return;\n  }\n\n  if (state === CellState.OPEN) {\n    openNeighbours(coordinate, board);\n    return;\n  }\n\n  let newState: CellState = state;\n  const mine = getMine(cell);\n  switch (state) {\n    case CellState.NEW:\n    case CellState.UNCERTAIN:\n      newState = mine !== undefined ? CellState.EXPLODED : CellState.OPEN;\n      break;\n    case CellState.EXPLODED:\n      return;\n\n    default:\n      assertNever(state);\n  }\n\n  updateCell(board, [coordinate, setState(cell, newState)]);\n\n  if (getThreats(cell) === 0 && newState !== CellState.EXPLODED) {\n    const predicate = (cellRecord: CellRecord) => {\n      const s = getState(cellRecord);\n      return s === CellState.NEW || s === CellState.UNCERTAIN;\n    };\n    const visitor = ([coord, c]: [Coordinate, CellRecord]) => {\n      if (getMine(c) !== undefined) {\n        throw new Error(`Expected cell not to be mined`);\n      }\n      if (predicate(c)) {\n        updateCell(board, [coord, setState(c, CellState.OPEN)]);\n        if (getThreats(c) === 0) {\n          getNeighbours(board.level, coord).forEach(cc => {\n            const cr = board.cells[cc]!;\n            if (predicate(cr)) {\n              visitor([cc, cr]);\n            }\n          });\n        }\n      }\n    };\n    // Must use original cell state to avoid infinite recursion\n    // One of the pitfalls of mutability\n    visitor([coordinate, cell]);\n  }\n}\n\nfunction toggleFlagged(coordinate: Coordinate, board: GameRecord): void {\n  const cell = getCell(board, coordinate);\n  switch (board.state) {\n    case GameState.PLAYING:\n      break;\n    case GameState.INITIALIZED:\n    case GameState.PAUSED:\n    case GameState.GAME_OVER:\n    case GameState.COMPLETED:\n    case GameState.NOT_INITIALIZED:\n    case GameState.ERROR:\n    case GameState.DEMO:\n      return;\n    default:\n      assertNever(board.state);\n  }\n\n  const state = getState(cell);\n  let newCellState: CellState = state;\n  switch (state) {\n    case CellState.FLAGGED:\n      newCellState = CellState.UNCERTAIN;\n      break;\n    case CellState.UNCERTAIN:\n      newCellState = CellState.NEW;\n      break;\n    case CellState.NEW:\n      newCellState = CellState.FLAGGED;\n      break;\n    case CellState.EXPLODED:\n    case CellState.OPEN:\n      return;\n    default:\n      assertNever(state);\n  }\n\n  updateCell(board, [coordinate, setState(cell, newCellState)]);\n\n  return;\n}\n\nexport type NextStateFunction = (\n  cmd: Cmd,\n  currentState: [Coordinate, GameRecord],\n  currentVersion: number\n) => GameRecord;\n\ntype IValidationError = {\n  field: string;\n  value: any;\n  msg: string;\n};\n\nexport const MAX_LEVEL = 30;\nexport const MIN_LEVEL = 3;\n\nexport const maxMines = ({ rows, cols }: { rows: number; cols: number }) =>\n  Math.floor(rows * cols * 0.5);\n\nexport const minMines = ({ rows, cols }: { rows: number; cols: number }) =>\n  Math.ceil(rows * cols * 0.1);\n\nexport const validateLevel = ({\n  rows,\n  cols,\n  mines,\n  topology,\n  type,\n}: Level): void => {\n  const errors = [];\n  if (rows < MIN_LEVEL) {\n    errors.push({ field: 'rows', value: rows, msg: 'Too small' });\n  } else if (rows > MAX_LEVEL) {\n    errors.push({ field: 'rows', value: rows, msg: 'Too large' });\n  }\n  if (cols < MIN_LEVEL) {\n    errors.push({ field: 'cols', value: cols, msg: 'Too small' });\n  } else if (rows > MAX_LEVEL) {\n    errors.push({ field: 'cols', value: cols, msg: 'Too large' });\n  }\n  if (mines < minMines({ rows, cols })) {\n    errors.push({ field: 'mines', value: mines, msg: 'Too small' });\n  } else if (mines > maxMines({ rows, cols })) {\n    errors.push({ field: 'mines', value: mines, msg: 'Too large' });\n  }\n  if (!isTopology(topology)) {\n    errors.push({ field: 'topology', value: topology, msg: 'Invalid' });\n  }\n  if (!isGridType(type)) {\n    errors.push({ field: 'type', value: type, msg: 'Invalid' });\n  }\n\n  if (errors.length > 0) {\n    throw new ValidationError('Invalid level', errors);\n  }\n};\n\nexport class ValidationError extends GameError {\n  public readonly errors: ReadonlyArray<IValidationError>;\n  constructor(msg: string, errors: IValidationError[]) {\n    super(msg);\n    this.errors = Object.freeze(errors.map(e => Object.freeze(e)));\n  }\n}\n\nexport function createGame(\n  level: Level,\n  onGameOver: () => void\n): { board: GameRecord; nextState: NextStateFunction } {\n  try {\n    validateLevel(level);\n    saveValue('object', 'level', level);\n\n    const cells = createEmptyCells(level).map(zero);\n\n    const func: NextStateFunction = (cmd, [coordinate, game]) => {\n      try {\n        switch (game.state) {\n          case GameState.PAUSED:\n            return expectUnPause(cmd, game);\n        }\n        if (game.state === GameState.ERROR) {\n          return game;\n        }\n        return produce(nextState(cmd, [coordinate, game]), draft => {\n          draft.version++;\n        });\n      } catch (err) {\n        console.error(err);\n        return produce(game, draft => {\n          draft.error =\n            err instanceof GameError\n              ? err\n              : new GameError(`Command ${Cmd[cmd]} failed`, err);\n          draft.state = GameState.ERROR;\n        });\n      }\n    };\n    return {\n      board: createBoard({ level: createLevel(level), cells, onGameOver }),\n      nextState: (cmd, [coordinate, game], version) => {\n        if (\n          game.state !== GameState.NOT_INITIALIZED &&\n          version !== game.version\n        ) {\n          return produce(game, draft => {\n            draft.error = new GameError('Version mismatch');\n            draft.state = GameState.ERROR;\n          });\n        }\n        return func(cmd, [coordinate, game], version);\n      },\n    };\n  } catch (err) {\n    if (err instanceof ValidationError) {\n      return {\n        board: createBoard({\n          level: createLevel(level),\n          cells: new Uint16Array(),\n          onGameOver,\n          state: GameState.ERROR,\n          error: err,\n        }),\n        nextState: (_cmd, [_coordinate, game]) => game,\n      };\n    }\n    throw err;\n  }\n}\n\nexport const legend: () => {\n  board: GameRecord;\n  nextState: NextStateFunction;\n} = () => {\n  const cells = (\n    [\n      ...[...new Array(8)].map((_ignore, i) => ({\n        state: CellState.OPEN,\n        threatCount: (i + 1) as NumThreats,\n      })),\n      {\n        state: CellState.NEW,\n      },\n      { state: CellState.OPEN, threatCount: 0 },\n\n      {\n        state: CellState.FLAGGED,\n        mine: 1,\n      },\n      {\n        state: CellState.FLAGGED,\n        threatCount: 0,\n      },\n      {\n        state: CellState.UNCERTAIN,\n        mine: 1,\n      },\n      {\n        state: CellState.UNCERTAIN,\n        threatCount: 0,\n      },\n      {\n        state: CellState.EXPLODED,\n        mine: 2,\n      },\n      {\n        state: CellState.OPEN,\n        mine: 3,\n      },\n    ] as CellRecordObject[]\n  ).map(fromObject);\n\n  const cols = 4;\n  const board = createBoard({\n    cells: new Uint16Array(cells),\n    level: createLevel({\n      cols,\n      rows: Math.ceil(cells.length / cols),\n      type: GridType.HEX,\n    }),\n    state: GameState.DEMO,\n  });\n  return {\n    board,\n    nextState: () => {\n      throw new Error();\n    },\n  };\n};\n","import { enableAllPlugins } from 'immer';\n\nenableAllPlugins();\n\nexport * from './grid';\nexport * from './board';\nexport * from './coordinate';\nexport * from './cell';\nexport * from './game';\n","import React, { Component } from 'react';\n\nclass ErrorBoundary extends Component {\n  state = {\n    error: null,\n  };\n\n  static getDerivedStateFromError(error: Error) {\n    return {\n      error: error.message,\n    };\n  }\n\n  componentDidCatch(_error: Error, _errorInfo: any) {\n    // console.error('Something bad happened!', error, errorInfo);\n  }\n\n  render() {\n    if (this.state.error != null) {\n      return (\n        <div>\n          <h1>Something went wrong :(</h1>\n          <p>{this.state.error}</p>\n        </div>\n      );\n    }\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;\n","import { NumThreats, isNumThreats } from '../Game';\nimport _ from 'lodash';\n\nexport const FLAG = '☣️';\nexport const UNCERTAIN_FLAG = '❓';\nexport const UNFLAGGED_MINE = '🥺';\nexport const MISPLACED_FLAG = '💩';\nexport const NATIONAL_FLAG = '🇳🇴';\n\nexport const DISARMED_MINE = '🥰';\nexport const EXPLODED_MINE = '💀';\n\nexport const getFlag = () => {\n  const today = new Date();\n  const isMay17 = today.getDate() === 17 && today.getMonth() === 4;\n  return isMay17 ? NATIONAL_FLAG : FLAG;\n};\n\nconst componentMap = {\n  '🤒': null, // Mine\n  '😷': null, // Mine\n  '🤮': null, // Mine\n  '🤢': null, // Mine\n  '🤡': null, // Mine\n  '🧟': null, // Mine\n  '🤥': null, // Mine\n  '🤕': null, // Mine\n  '🤧': null, // Mine\n  '👻': null, // Mine\n  '🥵': null, // Mine\n  '🥶': null, // Mine\n  '👹': null, // Mine\n  '👺': null, // Mine\n  '🦠': null, // Mine\n  '\\0': null, // Separator\n  [NATIONAL_FLAG]: null, // National flag\n  [FLAG]: null, // Flag\n  [UNCERTAIN_FLAG]: null, // Flag uncertain\n  [UNFLAGGED_MINE]: null, // Not flagged at game completed\n  [MISPLACED_FLAG]: null, // Flagged incorrectly (at game over)\n  [DISARMED_MINE]: null, // Flagged and mined at game completed / game over\n  [EXPLODED_MINE]: null, // Exploded mine\n};\n\nexport const MINES = Object.freeze(\n  _.takeWhile(Object.keys(componentMap), e => e !== '\\0')\n);\n\nexport type SvgComponent = React.FunctionComponent<\n  React.SVGProps<SVGSVGElement> & {\n    title?: string | undefined;\n  }\n>;\n\nexport type SvgSymbolKey = Exclude<keyof typeof componentMap, '\\0'>;\n\nexport type SvgSymbolMap = {\n  [key in SvgSymbolKey]: SvgSymbol | null;\n};\n\nexport type SvgHref = {\n  key: SvgSymbolKey;\n  href: string;\n  external: boolean;\n};\n\nexport type SvgDataHref = {\n  key: SvgSymbolKey;\n  data: string;\n};\n\nexport type SvgSymbol = SvgHref | SvgDataHref;\n\nexport type Content = SvgSymbol | NumThreats | string | SvgSymbolKey;\n\nexport function getContent(\n  symbols: SvgSymbolMap,\n  key: SvgSymbolKey\n): Content | SvgSymbolKey {\n  const sym = symbols[key];\n  return sym ?? key;\n}\n\nexport function isSvgDataHref(\n  c: SvgHref | SvgDataHref | string\n): c is SvgDataHref {\n  if (c == null || typeof c !== 'object') {\n    return false;\n  }\n  c = c as SvgDataHref;\n  return (\n    typeof c.data === 'string' &&\n    c.data.startsWith('data:image/svg+xml;base64,')\n  );\n}\n\nexport function isSvgHref(\n  c?: Content | SvgHref | SvgDataHref | string\n): c is SvgHref {\n  if (typeof c !== 'object') {\n    return false;\n  }\n  c = c as SvgHref | undefined;\n  return typeof c?.href === 'string';\n}\n\nexport function isSvgSymbol(c: Content): c is SvgSymbol {\n  if (c == null) {\n    return false;\n  }\n  return (\n    typeof c !== 'string' &&\n    !isNumThreats(c) &&\n    (isSvgDataHref(c) || isSvgHref(c))\n  );\n}\n\nexport default componentMap;\n","export default __webpack_public_path__ + \"static/media/symbols.e8532fbb.svg\";","import { NATIONAL_FLAG, SvgHref, SvgSymbolKey } from '..';\nimport defs from './symbols.svg';\n\nexport default function getContent(key: SvgSymbolKey): SvgHref | SvgSymbolKey {\n  if (key === NATIONAL_FLAG) {\n    return key;\n  }\n  return {\n    key,\n    href: `${defs}#${key}`,\n    external: true,\n  };\n}\n","import {\n  CellRecord,\n  CellState,\n  GameState,\n  NumThreats,\n  getMine,\n  getState,\n  getThreats,\n  isNumThreats,\n  setState,\n} from '../../../Game';\nimport { NumeralSystem } from '../../../lib';\nimport {\n  Content,\n  DISARMED_MINE,\n  EXPLODED_MINE,\n  MINES,\n  MISPLACED_FLAG,\n  SvgSymbolKey,\n  UNCERTAIN_FLAG,\n  UNFLAGGED_MINE,\n  getFlag,\n} from '../../../graphics';\nimport render from '../../../graphics/noto-emoji';\n\nexport function getContent(\n  cell: CellRecord,\n  gameState: GameState,\n  numeralSystem: NumeralSystem,\n  getSymbol: typeof render = render\n): Content {\n  if (gameState === GameState.PAUSED) {\n    return '\\u00A0';\n  }\n  const state = getState(cell);\n  const mine = getMine(cell);\n  const threatCount = getThreats(cell);\n  if (state === CellState.EXPLODED) {\n    return getSymbol(EXPLODED_MINE);\n  }\n\n  const isMined = mine !== undefined;\n  const gameWon = gameState === GameState.COMPLETED;\n  const gameOver = gameState === GameState.GAME_OVER;\n  const demo = gameState === GameState.DEMO;\n  const done = gameOver || gameWon || demo;\n  const isFlagged = state === CellState.FLAGGED;\n  if (!done && isFlagged) {\n    return getSymbol(getFlag());\n  }\n  const isDisarmed = done && isMined && isFlagged && (gameWon || gameOver);\n  if (gameWon && isMined && state !== CellState.FLAGGED) {\n    return getSymbol(UNFLAGGED_MINE);\n  }\n  if (isDisarmed) {\n    return getSymbol(DISARMED_MINE);\n  }\n  if ((gameOver || state === CellState.OPEN) && mine !== undefined) {\n    return getSymbol(MINES[mine] as SvgSymbolKey);\n  }\n  if (gameState === GameState.COMPLETED) {\n    return getContent(\n      setState(cell, CellState.OPEN),\n      GameState.PLAYING,\n      numeralSystem,\n      getSymbol\n    );\n  }\n  switch (state) {\n    case CellState.FLAGGED:\n      return getSymbol(\n        (demo || gameOver) && !isMined ? MISPLACED_FLAG : getFlag()\n      );\n    case CellState.UNCERTAIN:\n      return getSymbol(UNCERTAIN_FLAG);\n    case CellState.OPEN:\n      return isNumThreats(threatCount)\n        ? renderThreats(numeralSystem, threatCount)\n        : '\\u00A0';\n    default:\n      return '\\u00A0';\n  }\n}\n\nexport function renderThreats(numeralSystem: NumeralSystem, n: NumThreats) {\n  return String.fromCodePoint(numeralSystem + n);\n  // return formatNumber(numeralSystem, n); // String.fromCodePoint(numeralSystem + n);\n}\n","import {\n  CellState,\n  Cmd,\n  Coordinate,\n  GameState,\n  Level,\n  calculateCoordinate,\n  createGame,\n  isCmdName,\n} from '../Game';\n\nimport { assertNever, zero } from '../lib';\nimport { IState, TimingEvent } from './context';\nimport produce from 'immer';\nimport { getFitWindowCss } from '../lib';\nimport { chunk } from 'lodash';\nimport { RefObject } from 'react';\n\nexport type PauseAction =\n  | {\n      type: 'UNPAUSE';\n    }\n  | {\n      type: 'PAUSE';\n    };\n\nexport type GameAction = {\n  type: 'POKE' | 'FLAG';\n  coordinate: Coordinate;\n};\n\nexport type CmdAction = GameAction | PauseAction;\n\nexport function isCmdAction(s: Action): s is CmdAction {\n  return isCmdName(s.type);\n}\n\nexport function isPauseAction(action: Action): action is PauseAction {\n  return action.type === 'PAUSE' || action.type === 'UNPAUSE';\n}\n\nexport function isGameAction(action: Action): action is GameAction {\n  return action.type === 'POKE' || action.type === 'FLAG';\n}\n\nexport enum ModalType {\n  SELECT_LEVEL,\n  SETTINGS,\n}\n\nexport type MenuAction =\n  | {\n      type: 'showMenu';\n    }\n  | {\n      type: 'hideMenu';\n    }\n  | {\n      type: 'toggleMenu';\n    };\n\nexport type LevelAction = {\n  type: 'setLevel';\n  level?: Level;\n};\n\nexport type FitWindowAction = {\n  type: 'fitWindow';\n  ref: RefObject<SVGSVGElement>;\n};\n\nexport type FullscreenAction =\n  | {\n      type: 'requestFullscreen';\n    }\n  | {\n      type: 'exitFullscreen';\n    };\n\nexport type ModalAction =\n  | {\n      type: 'showModal';\n      modal: ModalType;\n    }\n  | {\n      type: 'closeModal';\n    };\n\nexport type Action =\n  | LevelAction\n  | FitWindowAction\n  | ModalAction\n  | CmdAction\n  | MenuAction\n  | FullscreenAction;\n\nexport const onGameOver = () => {\n  window.navigator.vibrate(\n    [...new Array(6)].map((_, i) => ((i & 1) === 0 ? 300 : 100))\n  );\n};\n\nconst calulateElapsedTime = (timingEvents: TimingEvent[]) => {\n  const t = [...timingEvents];\n  if ((t.length & 1) === 1) t.pop(); // t.push(Date.now());\n\n  return chunk(\n    t.map((v, _, arr) => v - arr[0]),\n    2\n  )\n    .map(([a, b]) => (b != null ? b - a : b))\n    .reduce((result, n) => result + n, 0);\n};\n\nconst menuActionReducer = (state: IState, action: MenuAction): IState => {\n  let { showMenu } = state;\n  switch (action.type) {\n    case 'hideMenu':\n      showMenu = false;\n      break;\n    case 'showMenu':\n      showMenu = false;\n      break;\n    case 'toggleMenu':\n      showMenu = !showMenu;\n      break;\n  }\n  if (showMenu && state.game.board.state === GameState.PLAYING) {\n    state = commandActionReducer(state, { type: 'PAUSE' });\n  }\n\n  return produce(state, draft => {\n    draft.showMenu = showMenu;\n  });\n};\n\nconst commandActionReducer = (state: IState, action: CmdAction): IState => {\n  if (action.type === 'PAUSE' && state.game.board.state === GameState.PAUSED) {\n    return state;\n  }\n\n  const isPauseCmd = isPauseAction(action);\n\n  if (\n    isPauseCmd &&\n    ![GameState.PAUSED, GameState.PLAYING].includes(state.game.board.state)\n  ) {\n    return state;\n  }\n\n  const board = state.game.nextState(\n    Cmd[action.type],\n    [isGameAction(action) ? action.coordinate : -1, state.game.board],\n    state.boardVersion\n  );\n\n  let addTimingEvent = isPauseCmd;\n  switch (state.game.board.state) {\n    case GameState.NOT_INITIALIZED:\n    case GameState.INITIALIZED:\n      addTimingEvent = action.type === 'POKE' || action.type === 'FLAG';\n      break;\n  }\n\n  return produce(state, draft => {\n    draft.boardVersion = board.version;\n    if (addTimingEvent) {\n      const tmp = [...state.timingEvents];\n      const elapsedTime = () => {\n        const len = tmp.length;\n        if (len === 0) {\n          return 0;\n        }\n        if (board.state === GameState.PLAYING && (len & 1) !== 1) {\n          console.error('Unexpected array length');\n        }\n        const elapsed = calulateElapsedTime(tmp);\n        if (board.state === GameState.PLAYING) {\n          const lastStart = tmp[len - 1];\n          return elapsed + Date.now() - lastStart;\n        }\n        return elapsed;\n      };\n\n      draft.timingEvents = tmp;\n      draft.elapsedTime = elapsedTime;\n      draft.timingEvents.push(Date.now());\n    }\n    draft.game.board = board;\n    if (state.game.board.state !== board.state) {\n      console.debug('State changed', {\n        old: GameState[state.game.board.state],\n        new: GameState[draft.game.board.state],\n      });\n    }\n  });\n};\n\ntype ReducerFunction<S, A> = (state: S, action: A) => S;\n\nconst reducer_: ReducerFunction<IState, Action> = (state, action): IState => {\n  if (action.type === 'POKE' || action.type === 'FLAG') {\n    console.debug({\n      ...action,\n      ...calculateCoordinate(state.game.board.level.cols, action.coordinate),\n    });\n  } else {\n    console.debug(action);\n  }\n  if (isCmdAction(action)) {\n    return commandActionReducer(state, action);\n  }\n  const modalStackSize = state.modalStack.length;\n  switch (action.type) {\n    case 'setLevel': {\n      const game = createGame(\n        action.level != null ? action.level : state.game.board.level,\n        onGameOver\n      );\n      return produce(state, draft => {\n        draft.timingEvents = [];\n        draft.elapsedTime = zero;\n        draft.game = game;\n        draft.modalStack = [];\n      });\n    }\n    case 'showModal': {\n      let newState = state;\n      if (state.game.board.state === GameState.PLAYING) {\n        newState = commandActionReducer(newState, {\n          type: 'PAUSE',\n        });\n      }\n      return produce(newState, draft => {\n        draft.modalStack.push(action.modal);\n        draft.showMenu = false;\n      });\n    }\n    case 'closeModal':\n      if (modalStackSize === 0) {\n        console.warn('Modal stack is empty');\n        return state;\n      }\n      return produce(state, draft => {\n        draft.modalStack.pop();\n      });\n    case 'fitWindow':\n      return produce(state, draft => {\n        draft.maxBoardDimensions = getFitWindowCss(action.ref);\n      });\n    case 'showMenu':\n    case 'hideMenu':\n    case 'toggleMenu':\n      return menuActionReducer(state, action);\n    case 'requestFullscreen':\n      if (!document.fullscreen) {\n        document.documentElement.requestFullscreen().catch();\n      }\n      return state;\n    case 'exitFullscreen':\n      if (document.fullscreen) {\n        document.exitFullscreen().catch();\n      }\n      return state;\n  }\n  assertNever(action);\n};\n\nexport const withLives: (\n  lives: number,\n  reducer: ReducerFunction<IState, Action>\n) => ReducerFunction<IState, Action> =\n  (\n    lives: number,\n    // eslint-disable-next-line no-shadow\n    reducer: ReducerFunction<IState, Action>\n  ) =>\n  (state: IState, action: Action): IState => {\n    const newState = reducer(state, action);\n    if (\n      newState.game.board.state === GameState.GAME_OVER &&\n      lives >= newState.game.board.cellStates[CellState.EXPLODED]\n    ) {\n      return produce(newState, draft => {\n        draft.game.board.state = GameState.PLAYING;\n      });\n    }\n    return newState;\n  };\n\nexport default withLives(2, reducer_);\n","export const onContextMenu = (e: {\n  preventDefault(): void;\n  stopPropagation(): void;\n}) => {\n  e.stopPropagation();\n  e.preventDefault();\n  return false;\n};\n","/* eslint-disable @typescript-eslint/strict-boolean-expressions */\nimport { useCallback } from 'react';\n\ntype Handlers<T> = {\n  onfulfilled?: (action: T) => void;\n  onrejected?: (action: T, err: Error) => void;\n  onfinally?: (action: T) => void;\n};\n\nconst useAsyncDispatch = <T extends unknown>(\n  dispatch?: React.Dispatch<T>,\n  handlers?: Handlers<T>\n) => {\n  return useCallback(\n    (action: T) => {\n      if (dispatch == null) {\n        return;\n      }\n      const promise = (async () => dispatch(action))();\n      if (handlers != null) {\n        const { onfinally, onfulfilled, onrejected } = handlers;\n\n        promise\n          .then(onfulfilled && (() => onfulfilled(action)))\n          .catch(onrejected && (err => onrejected(action, err)))\n          .finally(onfinally && (() => onfinally(action)));\n      }\n    },\n    [handlers, dispatch]\n  );\n};\n\nexport default useAsyncDispatch;\n/*\nexport default <T extends unknown>(\n  dispatch?: React.Dispatch<T>,\n  onfulfilled?: () => void,\n  onrejected?: (err: Error) => void,\n  onfinally?: () => void\n) =>\n  useCallback(\n    (action: T) =>\n      (async () => (dispatch != null ? dispatch(action) : undefined))()\n        .then(onfulfilled)\n        .catch(onrejected)\n        .finally(onfinally),\n    [dispatch, onfinally, onrejected, onfulfilled]\n  );\n*/\n","import React, { Dispatch, FC, MouseEvent, memo } from 'react';\nimport './SvgCell.scss';\nimport {\n  CellRecord,\n  CellState,\n  GridType,\n  getMine,\n  getState,\n  getThreats,\n} from '../../../Game';\n\nimport { CmdAction } from '../../../store';\nimport { onContextMenu } from '../..';\nimport useAsyncDispatch from '../../../Hooks/useAsyncDispatch';\nimport {\n  Content,\n  isSvgDataHref,\n  isSvgHref,\n  isSvgSymbol,\n} from '../../../graphics';\nimport { assertNever } from '../../../lib';\n\ntype CellRecordProps = {\n  coordinate: number;\n  gridType: GridType;\n  dispatch?: Dispatch<CmdAction>;\n  content: Content;\n  done?: boolean;\n  cell: CellRecord;\n};\n\nexport const cellSize = 33;\n\nconst SvgCell: FC<CellRecordProps> = props => {\n  const {\n    cell,\n    dispatch: _dispatch,\n    coordinate,\n    content,\n    gridType,\n    done,\n  } = props;\n\n  const state = getState(cell);\n  const mine = getMine(cell);\n  const threatCount = getThreats(cell);\n  const dispatch = useAsyncDispatch(_dispatch, {\n    // onfulfilled: action => console.log('fulfilled', { action }),\n    onrejected: (action, err) => console.error('rejected', { action, err }),\n    // onfinally: action => console.log('finally', { action }),\n  });\n\n  const handleClick = (e: MouseEvent) => {\n    if (dispatch != null && (state === CellState.OPEN || e.button === 0))\n      dispatch({\n        type: 'POKE',\n        coordinate,\n      });\n  };\n\n  const handleContextMenu = (e: MouseEvent) => {\n    onContextMenu(e);\n    if (dispatch != null) {\n      switch (state) {\n        case CellState.NEW:\n        case CellState.FLAGGED:\n        case CellState.UNCERTAIN:\n          window.navigator.vibrate(100);\n          return dispatch({\n            type: 'FLAG',\n            coordinate,\n          });\n      }\n    }\n  };\n\n  const role = /^\\p{Number}$/u.test(content.toString()) ? undefined : 'img';\n\n  const render = () => {\n    const background = <use href={`#${GridType[gridType]}`} className=\"cb\" />;\n    const cover = <use href={`#${GridType[gridType]}`} className=\"cc\" />;\n\n    switch (state) {\n      case CellState.NEW:\n        // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n        return done ? (\n          <>\n            {cover}\n            <Text role={role} content={content} />\n          </>\n        ) : (\n          cover\n        );\n      case CellState.FLAGGED:\n      case CellState.UNCERTAIN:\n        return (\n          <>\n            {done === true && mine !== undefined ? background : cover}\n            <Text role=\"img\" content={content} />\n          </>\n        );\n      // @ts-ignore: noFallthroughCasesInSwitch\n      case CellState.OPEN:\n        if (mine === undefined && threatCount === 0) {\n          return background;\n        }\n      // eslint-disable-next-line no-fallthrough\n      case CellState.EXPLODED:\n        return (\n          <>\n            {background}\n            <Text role={role} content={content} />\n          </>\n        );\n    }\n    assertNever(state);\n  };\n\n  return (\n    <svg\n      viewBox={`0 0 ${cellSize} ${cellSize}`}\n      className=\"c\"\n      onMouseDown={done === true ? undefined : handleClick}\n      onContextMenu={done === true ? undefined : handleContextMenu}\n      data-s={state}\n      data-t={threatCount !== 0 && mine === undefined ? threatCount : undefined}\n      data-m={mine !== undefined ? true : undefined}\n    >\n      {render()}\n      {/**}\n      <text\n        className=\"cc\"\n        x={cellSize / 2}\n        y={cellSize / 2}\n        dominantBaseline=\"central\"\n        textAnchor=\"middle\"\n        fill=\"white\"\n        fontSize={fontSize}\n        stroke={'black'}\n        strokeWidth={0.3}\n        fontFamily=\"monospace\"\n        fillOpacity={1}\n        transform={transform}\n      >\n        {coordinate}\n      </text>\n      {/**/}\n    </svg>\n  );\n};\n\nconst Text = React.memo(\n  (\n    props: React.SVGProps<SVGTextElement> & {\n      content?: Content;\n    }\n  ) => {\n    const domProps = {\n      ...props,\n      content: undefined,\n    };\n    const { content } = props;\n    if (content != null && isSvgSymbol(content)) {\n      const size = (cellSize * 2) / 3;\n      const center = cellSize / 2;\n      const ix = center - size / 2;\n      if (isSvgHref(content) && !content.external) {\n        return (\n          <image\n            className=\"ct\"\n            x={ix}\n            y={ix}\n            width={size}\n            height={size}\n            href={content.href}\n          />\n        );\n      }\n      return isSvgDataHref(content) ? (\n        <use\n          href={`#${content.key}`}\n          className=\"ct\"\n          x={ix}\n          y={ix}\n          width={size}\n          height={size}\n        />\n      ) : (\n        <use\n          href={`${content.href}`}\n          className=\"ct\"\n          x={ix}\n          y={ix}\n          width={size}\n          height={size}\n        />\n      );\n    }\n    return (\n      <text\n        className=\"ct\"\n        x={cellSize / 2}\n        y={cellSize / 2}\n        dominantBaseline=\"central\"\n        textAnchor=\"middle\"\n        fill=\"white\"\n        fontSize={cellSize / 2}\n        {...domProps}\n      >\n        {content}\n      </text>\n    );\n  }\n);\n\n/*\n\n\n\n  const role = /^\\p{Number}$/u.test(content.toString()) ? undefined : 'img';\n\n  return (\n    <svg\n      viewBox={`0 0 ${cellSize} ${cellSize}`}\n      className=\"SvgCell\"\n      onMouseDown={handleClick}\n      onContextMenu={handleContextMenu}\n      data-s={CellState[state]}\n      data-t={threats}\n      data-m={mined ? true : undefined}\n    >\n      <use\n        href={`#${GridType[gridType]}`}\n        scale={cellSize}\n        className=\"cb\"\n        fillOpacity={1}\n      />\n      <Text\n        role={role}\n        rotated={rotated}\n        content={\n          state === CellState.OPEN && threats === 0 ? undefined : content\n        }\n      />\n      <use\n        href={`#${GridType[gridType]}`}\n        scale={cellSize}\n        className=\"cc\"\n        fillOpacity={1}\n        strokeWidth={0}\n      />\n      {state === CellState.FLAGGED || state === CellState.UNCERTAIN ? (\n        <Text role=\"img\" content={content} rotated={rotated} />\n      ) : (\n        undefined\n      )}\n      <Text\n        className=\"cc\"\n        stroke={'black'}\n        strokeWidth={0.3}\n        fontFamily=\"monospace\"\n        fillOpacity={1}\n        rotated={rotated}\n        content={coordinate}\n      />\n    </svg>\n  );\n};\n\nconst Text = (\n  props: React.SVGProps<SVGTextElement> & {\n    rotated: boolean;\n    content?: string | number;\n  }\n) => {\n  const domProps = {\n    ...props,\n    rotated: undefined,\n    content: undefined,\n  };\n  return (\n    <text\n      className=\"ct\"\n      x={cellSize / 2}\n      y={cellSize / 2}\n      dominantBaseline=\"central\"\n      textAnchor=\"middle\"\n      fill=\"white\"\n      fontSize={cellSize / 2}\n      writingMode={\n        props.rotated ? 'sideways-lr' : 'sideways-lr'\n        //? 'sideways-lr' : 'horizontal-tb'\n      }\n      {...domProps}\n    >\n      {props.content}\n    </text>\n  );\n};\n\n\n\n\n    <div\n      role=\"button\"\n      onMouseDown={handleClick}\n      className=\"Cell\"\n      data-s={CellState[state]}\n      data-t={threats}\n      data-m={mined ? true : undefined}\n      data-mine-type={mined ? random : undefined}\n    >\n      <span {...ariaProps}>{content}</span>\n      {/*threats === 0 ? undefined : <span {...ariaProps}>{content}</span>* /}\n      </div>\n*/\nexport default memo(SvgCell);\n","import * as React from 'react';\nimport './SvgBoard.css';\nimport {\n  CellRecord,\n  CellState,\n  Coordinate,\n  GameRecord,\n  GameState,\n  GridType,\n  Topology,\n  ValidationError,\n  calculateCoordinate,\n  calculateIndex,\n  getState,\n} from '../../../Game';\nimport { Dispatch } from 'react';\nimport { CmdAction } from '../../../store';\nimport { getContent } from './getContent';\nimport SvgCell, { cellSize } from './SvgCell';\nimport { onContextMenu } from '../..';\nimport { isEqual } from 'lodash';\nimport { NumeralSystem, assertNever, hexOffset } from '../../../lib';\n\ntype IProps = {\n  board: GameRecord;\n  rotated: boolean;\n  dispatch?: Dispatch<CmdAction>;\n  style?: React.CSSProperties;\n  numeralSystem: NumeralSystem;\n};\n\nconst SvgBoard = React.forwardRef<Readonly<SVGSVGElement>, IProps>(\n  ({ dispatch, board, style, numeralSystem, rotated }, ref) => {\n    const boardState = board.state;\n\n    switch (board.state) {\n      case GameState.ERROR:\n        const error =\n          board.error != null ? board.error.message : 'Unknown error';\n        let content;\n        if (board.error instanceof ValidationError) {\n          content = (\n            <pre style={{ textAlign: 'initial' }}>\n              {JSON.stringify(board.error.errors, undefined, 2)}\n            </pre>\n            /*\n          <dl>\n            {board.error.errors.map((err, i) => (\n              <React.Fragment key={i}>\n                <dt>Field: {err.field}</dt>\n                <dd>\n                  {err.msg}: {err.value}\n                </dd>\n              </React.Fragment>\n            ))}\n          </dl>\n          */\n          );\n        }\n        const cause =\n          board.error != null &&\n          board.error.cause != null &&\n          // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n          board.error.cause.message ? (\n            <p>{board.error.cause.message}</p>\n          ) : undefined;\n        if (board.error != null) {\n          console.error(board.error);\n        }\n        return (\n          <main className=\"Error\">\n            <header>\n              <h1>Error</h1>\n              <p>Something went wrong</p>\n            </header>\n            <p>{error}</p>\n            {content}\n            <section>\n              <h2>Cause</h2>\n              {cause ?? 'unknown'}\n            </section>\n          </main>\n        );\n      case GameState.NOT_INITIALIZED:\n      case GameState.COMPLETED:\n      case GameState.GAME_OVER:\n      case GameState.INITIALIZED:\n      case GameState.PLAYING:\n      case GameState.PAUSED:\n      case GameState.DEMO:\n        break;\n      default:\n        return assertNever(board.state);\n    }\n    // const { level } = board;\n    const { cols, rows, topology } = board.level;\n    const shouldRotate = rotated && rows !== cols;\n\n    const done =\n      boardState === GameState.GAME_OVER ||\n      boardState === GameState.COMPLETED ||\n      boardState === GameState.DEMO ||\n      boardState === GameState.ERROR;\n    const pointerEvents =\n      done || boardState === GameState.PAUSED ? 'none' : 'revert';\n\n    const getOffsets = () => {\n      const { type } = board.level;\n      switch (type) {\n        case GridType.SQUARE:\n          return {\n            xOffset: 0,\n            yFactor: 1,\n            width: cellSize * cols,\n            height: cellSize * rows,\n          };\n        case GridType.HEX:\n          const xOffset = cellSize / 2;\n          const width = cellSize * cols + xOffset;\n          const yFactor = hexOffset;\n          // last y + cellSize\n          const height = ((rows - 1) * yFactor + 1) * cellSize;\n          return { xOffset, yFactor, width, height };\n      }\n      assertNever(type);\n    };\n    const { xOffset, yFactor, width, height } = getOffsets();\n\n    // @ts-ignore\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const rotate = ({ x, y }: { x: number; y: number }) => {\n      const translationx = cols / 2;\n      const translationy = rows / 2;\n      const cos = 1;\n      const sin = 0;\n      return {\n        x: cos * (x - width / 2) + sin * (y - height / 2) + translationx,\n        y: cos * (y - height / 2) - sin * (x - width / 2) + translationy,\n      };\n    };\n\n    const mapCell = (cell: CellRecord, coordinate: Coordinate) => {\n      const { row, col } =\n        typeof coordinate === 'number'\n          ? calculateCoordinate(cols, coordinate)\n          : coordinate;\n\n      const x = col * cellSize + ((row & 1) === 1 ? xOffset : 0);\n      const y = row * cellSize * yFactor;\n      /*\n      if (rotated) {\n        const p = rotate({ x, y });\n        x = p.x;\n        y = p.y;\n      }\n*/\n      const additional: JSX.Element[] = [];\n      if (topology === Topology.TOROIDAL) {\n        if (col === 0) {\n          additional.push(mapCell(cell, { row, col: cols }));\n        } else if (col === 1) {\n          additional.push(mapCell(cell, { row, col: cols + 1 }));\n        } else if (col === cols - 1) {\n          additional.push(mapCell(cell, { row, col: -1 }));\n        } else if (col === cols - 2) {\n          additional.push(mapCell(cell, { row, col: -2 }));\n        }\n        if (row === 0) {\n          additional.push(mapCell(cell, { col, row: rows }));\n        } else if (row === 1) {\n          additional.push(mapCell(cell, { col, row: rows + 1 }));\n        } else if (row === rows - 1) {\n          additional.push(mapCell(cell, { col, row: -1 }));\n        } else if (row === rows - 2) {\n          additional.push(mapCell(cell, { col, row: -2 }));\n        }\n      }\n\n      const state = getState(cell);\n      const active =\n        !done &&\n        (boardState === GameState.PLAYING ||\n          boardState === GameState.NOT_INITIALIZED) &&\n        state !== CellState.EXPLODED;\n      const jsx = (\n        <SvgCell\n          coordinate={calculateIndex(cols, {\n            row: (row + rows) % rows,\n            col: (col + cols) % cols,\n          })}\n          gridType={board.level.type}\n          dispatch={active ? dispatch : undefined}\n          content={getContent(cell, boardState, numeralSystem)}\n          cell={cell}\n          done={done}\n        />\n      );\n      const key = `${x},${y}`;\n      return additional.length === 0 ? (\n        <svg key={key} x={x} y={y} width={cellSize} height={cellSize}>\n          {jsx}\n        </svg>\n      ) : (\n        <React.Fragment key={key}>\n          {[...additional]}\n          <svg x={x} y={y} width={cellSize} height={cellSize}>\n            {jsx}\n          </svg>\n        </React.Fragment>\n      );\n    };\n\n    const v =\n      topology === Topology.LIMITED\n        ? {\n            x: 0,\n            y: 0,\n            width,\n            height,\n          }\n        : {\n            x: -cellSize,\n            y: -(cellSize * 1.25),\n            width: width + cellSize * 2,\n            height: height + cellSize * 2.5,\n          };\n    const v2 = shouldRotate\n      ? {\n          x: v.y,\n          y: v.x,\n          width: v.height,\n          height: v.width,\n        }\n      : v;\n    const classes = ['SvgBoard'];\n    if (shouldRotate) {\n      classes.push('SvgBoard__rotated');\n    }\n    const viewBox = `${v2.x} ${v2.y} ${v2.width} ${v2.height}`;\n    const transform = shouldRotate\n      ? `translate(${height} 0) rotate(90 0 0)`\n      : undefined;\n\n    return (\n      <svg\n        ref={ref}\n        style={style}\n        preserveAspectRatio=\"xMidYMid meet\"\n        className={classes.join(' ')}\n        pointerEvents={pointerEvents}\n        viewBox={viewBox}\n        data-grid={GridType[board.level.type]}\n        data-s={GameState[boardState]}\n        data-r={shouldRotate ? 't' : 'f'}\n        onContextMenu={done ? undefined : onContextMenu}\n      >\n        <g transform={transform}>\n          <rect x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" />\n          {[...board.cells].map(mapCell)}\n        </g>\n      </svg>\n    );\n  }\n);\n\nexport default React.memo(SvgBoard, isEqual);\n","import { Action, ModalType, onGameOver } from './reducer';\nimport {\n  GameRecord,\n  GridType,\n  Level,\n  NextStateFunction,\n  Topology,\n  createGame,\n  validateLevel,\n} from '../Game';\nimport NumeralSystem from '../lib/NumeralSystem';\nimport { defaultTheme } from '../Theme';\nimport React from 'react';\nimport { ITheme } from '../Theme/theme';\nimport { zero } from '../lib';\nimport { loadValue } from './contexts/settings';\nimport _ from 'lodash';\n\ntype ILevels = {\n  [keyof: string]: Level;\n};\nconst type = GridType.HEX;\nconst topology = Topology.LIMITED;\n\nexport const LEVELS: ILevels = {\n  BEGINNER: { rows: 6, cols: 10, mines: 10, type, topology },\n  INTERMEDIATE: { rows: 16, cols: 16, mines: 40, type, topology },\n  EXPERT: { mines: 99, rows: 16, cols: 30, type, topology },\n};\n\nexport type ISettings = {\n  numeralSystem: NumeralSystem;\n  fitWindow: boolean;\n  theme: ITheme;\n};\n\nexport const initialSettings: ISettings = {\n  numeralSystem: NumeralSystem.HANGZHOU_NUMERAL,\n  theme: defaultTheme,\n  fitWindow: true,\n};\n\nexport type TimingEvent = number;\n\nexport type IState = Readonly<{\n  game: {\n    board: GameRecord;\n    nextState: NextStateFunction;\n  };\n  loading: boolean;\n  maxBoardDimensions: { maxWidth: string; maxHeight: string };\n  modalStack: ModalType[];\n  timingEvents: TimingEvent[];\n  elapsedTime(): number;\n  showMenu: boolean;\n  lives: 0 | 1 | 2;\n  rotated: boolean;\n  boardVersion: number;\n}>;\n\nlet level: Level | undefined;\ntry {\n  level = loadValue('object', 'level');\n  if (level != null) {\n    validateLevel(level);\n  }\n} catch (err) {}\n\nif (level == null) {\n  level = LEVELS.BEGINNER;\n}\n\nexport const initialState: IState = {\n  game: {\n    ...createGame(level, onGameOver),\n  },\n  loading: false,\n  maxBoardDimensions: {\n    maxHeight: 'revert',\n    maxWidth: 'revert',\n  },\n  modalStack: [],\n  timingEvents: [],\n  elapsedTime: zero,\n  showMenu: false,\n  lives: 2,\n  rotated: false,\n  boardVersion: 0,\n};\n\nexport default React.createContext<{\n  state: IState;\n  dispatch: React.Dispatch<Action>;\n  containerRef: React.RefObject<SVGSVGElement>;\n}>({\n  state: initialState,\n  dispatch: _.noop,\n  containerRef: React.createRef(),\n});\n","export const BOARD_BORDER_WIDTH = 7;\n\nexport default function getFitWindowCss(board: React.RefObject<SVGSVGElement>) {\n  if (board.current == null) {\n    return {\n      maxHeight: 'revert',\n      maxWidth: 'revert',\n    };\n  }\n  const { top } = board.current.getBoundingClientRect();\n  return {\n    maxWidth: '100vw',\n    // Must add 3-5 px to prevent scrollbars\n    maxHeight: `calc(100vh - ${BOARD_BORDER_WIDTH * 2 + top + 5}px)`,\n  };\n}\n","import { ITheme } from '../Theme/theme';\nimport { useDomTokenList } from './';\n\nconst useTheme = (theme: ITheme) =>\n  useDomTokenList(document.body, theme.classNames);\n\nexport default useTheme;\n","import { useEffect } from 'react';\nconst useDomTokenList = (\n  element: HTMLElement | null | undefined,\n  tokens?: string[] | Readonly<string[]>\n) => {\n  useEffect(() => {\n    if (element == null || tokens == null) {\n      return;\n    }\n    console.debug('useDomTokenList.useEffect');\n    // Set up\n    element.classList.add(...tokens);\n    // Clean up\n    return () => element.classList.remove(...tokens);\n  }, [element, tokens]);\n};\n\nexport default useDomTokenList;\n","import { useEffect } from 'react';\n\nfunction useTicker(timeout: number, isActive: boolean, cb: () => any) {\n  useEffect(() => {\n    if (isActive) {\n      const id = setInterval(cb, timeout);\n      console.debug('Create ticker', { id, timeout });\n      return () => {\n        console.debug('Cleanup ticker', { id });\n        clearInterval(id);\n      };\n    }\n    return;\n  }, [cb, isActive, timeout]);\n}\n\nexport default useTicker;\n","import React from 'react';\nimport './FormatNumber.scss';\nimport { NumeralSystem, formatNumber, formatTime } from '../lib';\nimport { NumeralSystemContext } from '../store/contexts/settings';\n\ntype Props = {\n  n: number;\n  numeralSystem: NumeralSystem;\n  className?: string;\n  fractionDigits?: undefined | 1 | 2;\n  asTime?: true;\n};\n\nconst FormatNumber: React.FC<Props> = ({\n  n,\n  className,\n  fractionDigits,\n  asTime,\n}) => {\n  const options = {\n    minimumFractionDigits: fractionDigits,\n    maximumFractionDigits: fractionDigits,\n  };\n  const { numeralSystem } = React.useContext(NumeralSystemContext);\n  const format = asTime === true ? formatTime : formatNumber;\n  return (\n    <span\n      className={className ?? 'FormatNumber'}\n      data-numeralsystem={NumeralSystem[numeralSystem]}\n      title={n.toString()}\n      aria-label={n.toString()}\n    >\n      {format(numeralSystem, n, options)}\n    </span>\n  );\n};\n\nexport default React.memo(FormatNumber);\n","import React, { useCallback } from 'react';\nimport { useTicker } from '../Hooks';\nimport FormatNumber from './FormatNumber';\nimport { NumeralSystem } from '../lib';\n\ninterface Props {\n  elapsedTime(): number;\n  running: boolean;\n  numeralSystem: NumeralSystem;\n}\n\nconst Timer: React.FC<Props> = React.memo(\n  ({ running, elapsedTime, numeralSystem }) => {\n    const [timer, setTimer] = React.useState(elapsedTime());\n    React.useEffect(() => setTimer(elapsedTime()), [elapsedTime]);\n\n    const cb = useCallback(() => setTimer(elapsedTime()), [elapsedTime]);\n\n    useTicker(1000, running, cb);\n\n    return (\n      <span\n        role=\"timer\"\n        aria-live={running ? 'polite' : 'off'}\n        className=\"Timer\"\n        title={timer.toString()}\n      >\n        <FormatNumber\n          numeralSystem={numeralSystem}\n          n={Math.floor(timer / 1000)}\n          asTime={true}\n        />\n      </span>\n    );\n  }\n);\n\nexport default Timer;\n","import {\n  LinkProps,\n  NavigateOptions,\n  Link as ReachLink,\n  navigate as reachNavigate,\n} from '@reach/router';\nimport React from 'react';\n\n// Workaround to use homepage='.'\n// Can't use subdirectories in route\n\nfunction base() {\n  const b = (\n    process.env.PUBLIC_URL === '.'\n      ? window.location.pathname.substring(\n          0,\n          window.location.pathname.lastIndexOf('/') + 1\n        )\n      : process.env.PUBLIC_URL ?? '/'\n  )\n    .split(/[/]+/)\n    .join('/');\n  return b === '' ? '/' : b;\n}\n\nexport const BASE = base();\n\nexport const Link = React.memo<React.PropsWithChildren<LinkProps<{}>>>(\n  ({ to = '', children, ...props }) => {\n    if (to[0] === '/') {\n      to = BASE + to;\n    }\n    return (\n      <ReachLink {...props} to={to} ref={undefined}>\n        {children}\n      </ReachLink>\n    );\n  }\n);\n\nexport const navigate = (\n  to: string,\n  options?: NavigateOptions<{}> | undefined\n) => {\n  if (to === '/' || to === '' || to == null) {\n    to = BASE;\n  } else if (to[0] === '/') {\n    to = BASE + to;\n  }\n  return reachNavigate(to, options);\n};\n","// TODO: How to type this function correctly\nconst registerEvent: typeof window.addEventListener = (\n  event: string,\n  callback: any\n) => {\n  window.addEventListener(event, callback);\n  return () => window.removeEventListener(event, callback);\n};\n\nexport default registerEvent;\n","import React from 'react';\nimport { Store } from '../../store';\nimport { CellState, GameState } from '../../Game';\nimport {\n  FitWindowContext,\n  NumeralSystemContext,\n  RotateContext,\n} from '../../store/contexts/settings';\nimport Timer from '../Timer';\nimport FormatNumber from '../FormatNumber';\nimport { DISARMED_MINE, EXPLODED_MINE, getFlag } from '../../graphics';\nimport { Link } from '../../router';\nimport registerEvent from './registerEvent';\nimport { assertNever } from '../../lib';\n\nconst StatusBar = () => {\n  const { state, dispatch, containerRef } = React.useContext(Store);\n\n  const { elapsedTime, showMenu, lives } = state;\n  const board = state.game.board;\n  const gameState = board.state;\n  const remaining =\n    board.level.mines -\n    board.cellStates[CellState.FLAGGED] -\n    board.cellStates[CellState.EXPLODED];\n\n  const remainingLives = lives - board.cellStates[CellState.EXPLODED];\n  const { numeralSystem } = React.useContext(NumeralSystemContext);\n  const handleGameStateClick = React.useCallback(() => {\n    switch (gameState) {\n      case GameState.PAUSED:\n        dispatch({\n          type: 'UNPAUSE',\n        });\n        break;\n      case GameState.PLAYING:\n        dispatch({\n          type: 'PAUSE',\n        });\n        break;\n      case GameState.COMPLETED:\n      case GameState.GAME_OVER:\n      case GameState.ERROR:\n        dispatch({\n          type: 'setLevel',\n        });\n    }\n  }, [dispatch, gameState]);\n  const { rotate, setRotate } = React.useContext(RotateContext);\n  const { fitWindow, setFitWindow } = React.useContext(FitWindowContext);\n  const [fullScreen, setFullScreen] = React.useState(document.fullscreen);\n\n  const itemsProps = { className: 'SvgMinesweeper__Controls__Item' };\n\n  React.useEffect(() => {\n    return registerEvent('fullscreenchange', () =>\n      setFullScreen(document.fullscreen)\n    );\n  }, []);\n\n  return (\n    <div className=\"SvgMinesweeper__Controls\">\n      <div role=\"button\" onClick={handleGameStateClick} {...itemsProps}>\n        <Timer\n          numeralSystem={numeralSystem}\n          elapsedTime={elapsedTime}\n          running={gameState === GameState.PLAYING}\n        />\n      </div>\n      <div\n        {...itemsProps}\n        role=\"button\"\n        onClick={handleGameStateClick}\n        aria-label={`Game state: ${GameState[gameState]}`}\n      >\n        {renderGameState(gameState, lives, remainingLives)}\n      </div>\n      <div {...itemsProps} role=\"button\">\n        <FormatNumber numeralSystem={numeralSystem} n={remaining} />\n        <span role=\"img\" aria-label=\"Remaining mines\">\n          {remaining >= 0 ? getFlag() : '💩'}\n        </span>{' '}\n      </div>\n      <details open={showMenu}>\n        <summary\n          onClick={e => {\n            e.preventDefault();\n            dispatch({ type: 'toggleMenu' });\n          }}\n          {...itemsProps}\n        >\n          <span role=\"img\" aria-label=\"menu\">\n            🍔\n          </span>\n        </summary>\n        <nav>\n          <ul role=\"menu\" className=\"Menu__List\">\n            <li role=\"menuitem\">\n              <Link to=\"level.html\">Select level</Link>\n            </li>\n            <li role=\"menuitem\">\n              <Link to=\"settings.html\">Settings</Link>\n            </li>\n            <li role=\"menuitemcheckbox\" aria-checked={fitWindow}>\n              <label>\n                <input\n                  onChange={React.useCallback(\n                    (e: React.SyntheticEvent<HTMLInputElement>) => {\n                      setFitWindow(e.currentTarget?.checked);\n                      dispatch({ type: 'fitWindow', ref: containerRef });\n                    },\n                    [containerRef, dispatch, setFitWindow]\n                  )}\n                  type=\"checkbox\"\n                  checked={fitWindow}\n                />\n                Fit to window\n              </label>\n            </li>\n            <li role=\"menuitemcheckbox\" aria-checked={rotate}>\n              <label>\n                <input\n                  onChange={React.useCallback(\n                    (e: React.SyntheticEvent<HTMLInputElement>) =>\n                      setRotate(e.currentTarget?.checked),\n                    [setRotate]\n                  )}\n                  type=\"checkbox\"\n                  checked={rotate}\n                />\n                Rotate\n              </label>\n            </li>\n            <li role=\"menuitemcheckbox\" aria-checked={fullScreen}>\n              <label>\n                <input\n                  onChange={() =>\n                    dispatch({\n                      type: fullScreen ? 'exitFullscreen' : 'requestFullscreen',\n                    })\n                  }\n                  type=\"checkbox\"\n                  checked={fullScreen}\n                />\n                Fullscreen\n              </label>\n            </li>\n          </ul>\n        </nav>\n      </details>\n    </div>\n  );\n};\n\nfunction renderGameState(state: GameState, lives: number, remaining: number) {\n  switch (state) {\n    case GameState.PAUSED:\n      return '🧘';\n    case GameState.COMPLETED:\n    case GameState.PLAYING:\n      return (\n        EXPLODED_MINE.repeat(lives - remaining) +\n        DISARMED_MINE.repeat(remaining + 1)\n      );\n    case GameState.ERROR:\n      return '🤔';\n    case GameState.GAME_OVER:\n      return '🤬';\n    case GameState.DEMO:\n    case GameState.INITIALIZED:\n    case GameState.NOT_INITIALIZED:\n      return '🎯';\n  }\n  assertNever(state);\n}\n\nexport default StatusBar;\n","import * as React from 'react';\nimport './SvgMinesweeper.scss';\nimport { GameState } from '../../Game';\nimport ErrorBoundary from '../ErrorBoundary';\nimport SvgBoard from './Board/SvgBoard';\nimport { onContextMenu } from '..';\nimport { useSettingsContext } from '../../store/contexts/settings';\nimport { Store } from '../../store';\nimport StatusBar from './StatusBar';\nimport registerEvent from './registerEvent';\nimport { BOARD_BORDER_WIDTH } from '../../lib';\n\nconst SvgMinesweeper: React.FC<{}> = () => {\n  const { state, dispatch, containerRef } = React.useContext(Store);\n\n  const { game } = state;\n  const { board } = game;\n\n  const {\n    fitWindow,\n    rotate: rotated,\n    numeralSystem,\n  } = useSettingsContext().state;\n\n  React.useEffect(() => {\n    return registerEvent('resize', () =>\n      dispatch({ type: 'fitWindow', ref: containerRef })\n    );\n  }, [containerRef, dispatch]);\n\n  React.useEffect(\n    () =>\n      registerEvent('keyup', (e: KeyboardEvent) => {\n        if (e.keyCode === 80) {\n          dispatch({\n            type: board.state === GameState.PLAYING ? 'PAUSE' : 'UNPAUSE',\n          });\n        }\n      }),\n\n    [board.state, containerRef, dispatch]\n  );\n\n  React.useEffect(() => {\n    return registerEvent('visibilitychange', () => {\n      if (\n        document.visibilityState !== 'visible' &&\n        board.state === GameState.PLAYING\n      ) {\n        dispatch({ type: 'PAUSE' });\n      }\n    });\n  }, [board.state, dispatch]);\n\n  React.useEffect(() => {\n    return registerEvent('blur', () => {\n      dispatch({ type: 'PAUSE' });\n    });\n  }, [dispatch]);\n\n  const done =\n    board.state === GameState.GAME_OVER ||\n    board.state === GameState.COMPLETED ||\n    board.state === GameState.ERROR;\n\n  const handlePointerDown = (e: React.PointerEvent) => {\n    if (done || board.state === GameState.PAUSED) {\n      e.preventDefault();\n      e.stopPropagation();\n    }\n  };\n  const classes = ['SvgMinesweeper', 'SvgMinesweeper__Container'];\n  /*\n  if (rotated) {\n    classes.push('SvgMinesweeper__rotated');\n  }\n*/\n  const handleRestartGame = React.useCallback(\n    e => {\n      onContextMenu(e);\n      window.navigator.vibrate(300);\n      dispatch({\n        type: 'setLevel',\n        level: board.level,\n      });\n    },\n    [board.level, dispatch]\n  );\n\n  const boardStyle: React.CSSProperties = fitWindow\n    ? { ...state.maxBoardDimensions }\n    : {};\n  // boardStyle.pointerEvents = modal != null || showMenu ? 'none' : undefined;\n\n  return (\n    <div>\n      <div\n        className={classes.join(' ')}\n        onPointerDown={handlePointerDown}\n        onContextMenu={done ? handleRestartGame : onContextMenu}\n      >\n        <StatusBar />\n        <ErrorBoundary>\n          <SvgBoard\n            rotated={rotated}\n            ref={containerRef}\n            dispatch={dispatch}\n            board={board}\n            style={{ borderWidth: `${BOARD_BORDER_WIDTH}px`, ...boardStyle }}\n            numeralSystem={numeralSystem}\n          />\n        </ErrorBoundary>\n      </div>\n    </div>\n  );\n};\n\nexport default SvgMinesweeper;\n","import React from 'react';\nimport Themes from '../../Theme';\nimport { ITheme } from '../../Theme/theme';\n\nconst themes = Themes();\n\ninterface IProps {\n  theme: ITheme;\n  onChange: (value: ITheme) => void;\n}\n\nconst ThemeChooser: React.FC<IProps> = ({ theme, onChange }) => {\n  return (\n    <div className=\"ThemeChooser\">\n      <select\n        value={themes.indexOf(theme)}\n        onChange={e => onChange(themes[parseInt(e.currentTarget.value)])}\n      >\n        {themes.map((t, i) => (\n          <option key={t.name} value={i}>\n            {t.name}\n          </option>\n        ))}\n      </select>\n    </div>\n  );\n};\n\nexport default React.memo(ThemeChooser);\n","import React, { AriaAttributes } from 'react';\nimport { navigate } from '../router';\n\ntype Props = {\n  text: string;\n  tooltip?: string;\n  close?(): void;\n  aria?: AriaAttributes;\n};\n\nconst CloseButton: React.FC<Props> = ({\n  close = () => navigate('/'),\n  text,\n  tooltip,\n  aria,\n}) => (\n  <button\n    {...aria}\n    title={tooltip}\n    className=\"CloseButton\"\n    type=\"button\"\n    onClick={close}\n  >\n    {text}\n  </button>\n);\n\nexport default React.memo(CloseButton);\n","import * as React from 'react';\nimport SvgBoard from '../Svg/Board/SvgBoard';\nimport { NumThreats, legend } from '../../Game';\nimport { renderThreats } from '../Svg/Board/getContent';\nimport './SettingsDialog.scss';\nimport './NumeralSystemChooser.scss';\nimport ThemeChooser from './ThemeChooser';\nimport { NumeralSystem } from '../../lib';\nimport { useSettingsContext } from '../../store/contexts/settings';\nimport { navigate } from '../../router';\nimport CloseButton from '../CloseButton';\n\nexport type SettingsDialogProps = {};\n\nconst SettingsDialog: React.FC<SettingsDialogProps> = () => {\n  const { state: initialState, setState } = useSettingsContext();\n  const [theme, setTheme] = React.useState(initialState.theme);\n  const [numeralSystem, setNumeralSystem] = React.useState(\n    initialState.numeralSystem\n  );\n\n  const containerRef = React.useCallback(\n    (e: HTMLDivElement) => {\n      if (e != null) {\n        e.classList.remove(...e.classList.values());\n        e.classList.add('Page', ...theme.styles.map(t => t.Theme));\n      }\n    },\n    [theme.styles]\n  );\n\n  const handleOnSubmit = (e: React.SyntheticEvent<any>) => {\n    e.preventDefault();\n    setState({ ...initialState, theme, numeralSystem });\n    navigate('/');\n  };\n  const handleOnReset = (e: React.SyntheticEvent<any>) => {\n    e.preventDefault();\n    setTheme(initialState.theme);\n    setNumeralSystem(initialState.numeralSystem);\n  };\n  return (\n    <div ref={containerRef}>\n      <form\n        className=\"SettingsDialog\"\n        onSubmit={handleOnSubmit}\n        onReset={handleOnReset}\n      >\n        <div\n          style={{\n            display: 'flex',\n            justifyContent: 'space-between',\n            flexWrap: 'wrap',\n          }}\n        >\n          <fieldset>\n            <legend>Numeral system</legend>\n            <NumeralSystemChooser\n              selected={numeralSystem}\n              onChange={setNumeralSystem}\n            />\n          </fieldset>\n          <fieldset>\n            <legend>Theme</legend>\n            <ThemeChooser theme={theme} onChange={setTheme} />\n          </fieldset>\n          <section className=\"SvgMinesweeper\">\n            <div\n              style={{\n                width: '200px',\n                height: 'auto',\n              }}\n            >\n              <SvgBoard\n                board={legend().board}\n                rotated={false}\n                numeralSystem={numeralSystem}\n              />\n            </div>\n          </section>\n        </div>\n        <div>\n          <section>\n            <main>\n              <button type=\"submit\">Apply changes</button>\n              <button type=\"reset\">Reset</button>\n              <CloseButton text=\"Cancel\" />\n            </main>\n          </section>\n        </div>\n      </form>\n    </div>\n  );\n};\n\ninterface NumeralSystemChooserProps {\n  selected: NumeralSystem;\n  onChange: (value: NumeralSystem) => void;\n}\n\nconst NumeralSystemChooser: React.FC<NumeralSystemChooserProps> = React.memo(\n  ({ selected, onChange }) => (\n    <ul className=\"NumeralSystemChooser\">\n      {Object.keys(NumeralSystem)\n        .filter(name => isNaN(Number(name)))\n        .map(name => {\n          const value = NumeralSystem[name as any] as unknown as NumeralSystem;\n          return (\n            <li key={value}>\n              <label title={name}>\n                <input\n                  checked={selected === value}\n                  type=\"radio\"\n                  name=\"numeralsystem\"\n                  value={value}\n                  onChange={e => {\n                    if (e.currentTarget.checked) {\n                      onChange(value);\n                    }\n                  }}\n                />{' '}\n                {[...new Array(8)].map((_v, n) => (\n                  <span\n                    className=\"NumeralSystemChooser__digit\"\n                    key={n}\n                    style={{\n                      color: `var(--cell-threats-${n + 1}-color)`,\n                    }}\n                  >\n                    {renderThreats(value, (n + 1) as NumThreats)}\n                  </span>\n                ))}\n              </label>\n            </li>\n          );\n        })}\n    </ul>\n  )\n);\n\nexport default SettingsDialog;\n","import React, { useCallback, useContext, useState } from 'react';\nimport {\n  CellState,\n  GameState,\n  GridType,\n  Level,\n  MAX_LEVEL,\n  MIN_LEVEL,\n  Topology,\n  fromObject,\n  maxMines,\n  minMines,\n} from '../Game';\n\nimport './LevelChooser.scss';\nimport SvgCell from './Svg/Board/SvgCell';\nimport CloseButton from './CloseButton';\nimport FormatNumber from './FormatNumber';\nimport { NumeralSystem, formatNumber } from '../lib';\nimport { NumeralSystemContext } from '../store/contexts/settings';\nimport { Store } from '../store';\nimport { navigate } from '../router';\n\ninterface LevelLite extends Omit<Level, 'type' | 'topology'> {}\n\n// const predefinedLevels: ReadonlyMap<string, Readonly<LevelLite>> = new Map();\nconst predefinedLevels = Object.freeze([\n  Object.freeze({ rows: 6, cols: 10, mines: 10, name: 'Beginner' }),\n  Object.freeze({ rows: 16, cols: 16, mines: 40, name: 'Intermediate' }),\n  Object.freeze({ mines: 99, rows: 16, cols: 30, name: 'Expert' }),\n]);\n\nexport const getLevel = (\n  key: string = 'Beginner',\n  type: GridType = GridType.SQUARE,\n  topology = Topology.LIMITED\n): Level => {\n  const lvl = predefinedLevels.find(l => l.name === key);\n  const v = lvl != null ? lvl : predefinedLevels[0];\n  return Object.freeze({ ...v, type, topology });\n};\n\nconst compareLevels = (a: LevelLite | Level, b: LevelLite | Level) =>\n  a.cols === b.cols && a.rows === b.rows && a.mines === b.mines;\n\ntype LevelChooserProps = {\n  onChange: (level: Level) => void;\n};\n\nconst custom = 'Custom';\n\nconst formatLevel = ({\n  rows,\n  cols,\n  mines,\n  numeralSystem,\n  name,\n  asString,\n}: LevelLite & {\n  name?: string;\n  numeralSystem: NumeralSystem;\n  asString?: boolean;\n}) => {\n  if (asString === true) {\n    const [r, c, m] = [rows, cols, mines].map(n =>\n      formatNumber(numeralSystem, n)\n    );\n    return (name != null ? `${name} : ` : '') + `${c} / ${r} (${m})`;\n  }\n  return (\n    <>\n      {name != null ? `${name}: ` : ''}\n      <FormatNumber numeralSystem={numeralSystem} n={rows} />\n      {' / '}\n      <FormatNumber numeralSystem={numeralSystem} n={cols} />\n      {' ('}\n      <FormatNumber numeralSystem={numeralSystem} n={mines} />\n      {')'}\n    </>\n  );\n}; /*\n  (v.name != null ? `${v.name}: ` : '') +\n  [v.rows, v.cols, v.mines]\n    .map(n => formatNumber(v.numeralSystem, n))\n    .join('; ');\n    */\n// `${v.name}: ${v.cols} x ${v.rows} (${v.mines})`;\n\nexport const LevelChooser: React.FC<LevelChooserProps> = ({ onChange }) => {\n  const { numeralSystem } = useContext(NumeralSystemContext);\n  const { state: context } = useContext(Store);\n  const initialLevel: Level = context.game.board.level;\n  // const numeralSystem = initialState.numeralSystem;\n  const [level, setLevel] = useState(initialLevel);\n  const { rows, cols, mines, type, topology } = level;\n  const maxM = maxMines({ rows, cols });\n  const minM = minMines({ rows, cols });\n  if (level.mines > maxM) {\n    setLevel({\n      ...level,\n      mines: maxM,\n    });\n  } else if (level.mines < minM) {\n    setLevel({\n      ...level,\n      mines: minM,\n    });\n  }\n\n  const selectedLevel = predefinedLevels.find(v =>\n    compareLevels(level, v)\n  )?.name;\n\n  const handleTypeChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) =>\n      setLevel({\n        ...level,\n        type: GridType[e.currentTarget.value as any] as unknown as GridType,\n      }),\n    [level]\n  );\n\n  const handleTopologyChange = useCallback(\n    (e: React.ChangeEvent<HTMLSelectElement>) =>\n      setLevel({\n        ...level,\n        topology: Topology[e.currentTarget.value as any] as unknown as Topology,\n      }),\n    [level]\n  );\n\n  return (\n    <div className=\"LevelChooser\">\n      <form\n        onSubmit={e => {\n          e.preventDefault();\n          onChange(level);\n          navigate('/');\n        }}\n        onReset={e => {\n          e.preventDefault();\n          setLevel(initialLevel);\n        }}\n      >\n        <fieldset>\n          <legend>Select level</legend>\n          <select\n            value={selectedLevel ?? custom}\n            onChange={e => {\n              setLevel(getLevel(e.target.value, level.type, level.topology));\n            }}\n          >\n            <option hidden={selectedLevel != null} value={custom}>\n              {formatLevel({\n                name: custom,\n                cols,\n                rows,\n                mines,\n                numeralSystem,\n                asString: true,\n              })}\n            </option>\n            {[...predefinedLevels.entries()].map(([k, v]) => (\n              <option value={v.name} key={k}>\n                {formatLevel({ ...v, numeralSystem, asString: true })}\n              </option>\n            ))}\n          </select>\n        </fieldset>\n        <fieldset>\n          <legend>Custom level</legend>\n          <label>\n            Rows: <FormatNumber numeralSystem={numeralSystem} n={rows} />\n            <input\n              onChange={e =>\n                setLevel({\n                  ...level,\n                  rows: e.currentTarget.valueAsNumber,\n                })\n              }\n              min={MIN_LEVEL}\n              max={MAX_LEVEL}\n              type=\"range\"\n              value={rows}\n              name=\"rows\"\n            />\n          </label>\n          <label>\n            Columns:\n            <FormatNumber numeralSystem={numeralSystem} n={cols} />\n            <input\n              onChange={e =>\n                setLevel({\n                  ...level,\n                  cols: e.currentTarget.valueAsNumber,\n                })\n              }\n              min={MIN_LEVEL}\n              max={MAX_LEVEL}\n              type=\"range\"\n              value={cols}\n              name=\"cols\"\n            />\n          </label>\n          <label>\n            Mines:\n            <FormatNumber numeralSystem={numeralSystem} n={mines} /> (\n            <FormatNumber\n              numeralSystem={numeralSystem}\n              n={(100 * mines) / (rows * cols)}\n              fractionDigits={1}\n            />\n            ﹪)\n            <input\n              min={minM}\n              max={maxM}\n              type=\"range\"\n              value={mines}\n              name=\"mines\"\n              onChange={e =>\n                setLevel({\n                  ...level,\n                  mines: e.currentTarget.valueAsNumber,\n                })\n              }\n            />\n          </label>\n          <button\n            disabled={rows === cols}\n            type=\"button\"\n            onClick={() =>\n              setLevel({\n                ...level,\n                rows: level.cols,\n                cols: level.rows,\n              })\n            }\n          >\n            Swap rows and columns\n          </button>\n        </fieldset>\n        <fieldset>\n          <legend>Grid type</legend>\n          {Object.keys(GridType)\n            .filter(name => isNaN(Number(name)))\n            .map(name => {\n              const checked = name === GridType[type];\n              const state = checked ? CellState.OPEN : CellState.NEW;\n              const content = checked ? '✓' : '';\n              return (\n                <label className=\"RadioGroup__Option\" key={name}>\n                  <input\n                    className=\"GridTypeRadio\"\n                    onChange={handleTypeChange}\n                    checked={checked}\n                    type=\"radio\"\n                    name=\"type\"\n                    value={name}\n                  />\n                  <div\n                    className=\"SvgBoard\"\n                    data-s={GameState[GameState.GAME_OVER]}\n                    style={{\n                      width: '32px',\n                      height: 'auto',\n                      display: 'inline-block',\n                      verticalAlign: 'middle',\n                    }}\n                  >\n                    {' '}\n                    <SvgCell\n                      cell={fromObject({\n                        state,\n                        threatCount: 2,\n                        mine: undefined,\n                      })}\n                      content={content}\n                      coordinate={0}\n                      gridType={GridType[name as any] as unknown as GridType}\n                    />\n                  </div>\n                </label>\n              );\n            })}\n          <select onChange={handleTopologyChange} value={Topology[topology]}>\n            {Object.keys(Topology)\n              .filter(name => !isNaN(Number(name)))\n              .map(k => {\n                const t: Topology = k as unknown as Topology;\n                const name = Topology[t];\n\n                return (\n                  <option key={name} value={name}>\n                    {name}\n                  </option>\n                );\n              })}\n          </select>\n        </fieldset>\n        <button type=\"submit\">OK</button>\n        <button type=\"reset\">Reset</button>\n        <CloseButton text=\"Cancel\" />\n      </form>\n    </div>\n  );\n};\n","import React from 'react';\nimport './App.css';\n// import Minesweeper, { LEVELS } from './Components/Minesweeper';\nimport SvgMinesweeper from './Components/Svg/SvgMinesweeper';\nimport { LevelAction, Store, initialState, reducer } from './store';\nimport SettingsContextProvider, {\n  ThemeContext,\n} from './store/contexts/settings';\nimport { useTheme } from './Hooks';\nimport { RouteComponentProps, Router } from '@reach/router';\nimport SettingsDialog, {\n  SettingsDialogProps,\n} from './Components/Settings/SettingsDialog';\nimport { LevelChooser } from './Components/LevelChooser';\nimport { BASE } from './router';\nimport { hexagonPoints } from './lib';\nimport { cellSize } from './Components/Svg/Board/SvgCell';\nimport { GridType } from './Game';\n\nconst Game = (_props: RouteComponentProps) => <SvgMinesweeper />;\n\nconst Settings = (_props: SettingsDialogProps & RouteComponentProps) => (\n  <SettingsDialog />\n);\n\nconst Levels = ({\n  dispatch,\n}: { dispatch: React.Dispatch<LevelAction> } & RouteComponentProps) => (\n  <LevelChooser\n    onChange={l => {\n      dispatch({\n        type: 'setLevel',\n        level: l,\n      });\n    }}\n  />\n);\n\nconst hexPoints = () =>\n  hexagonPoints()\n    .map(({ x, y }) => `${(x * cellSize) / 2},${(y * cellSize) / 2}`)\n    .join(' ');\n\nconst squarePoints = () => {\n  const gap = 2;\n  return [\n    [gap, gap],\n    [gap, cellSize - gap],\n    [cellSize - gap, cellSize - gap],\n    [cellSize - gap, gap],\n  ]\n    .map(([x, y]) => `${x},${y}`)\n    .join(' ');\n};\n\nconst App: React.FC<{}> = () => {\n  // const context = React.useContext(Store);\n  const [state, dispatch] = React.useReducer(reducer, initialState);\n  const { theme } = React.useContext(ThemeContext);\n  useTheme(theme);\n\n  return (\n    <div className=\"App\">\n      <div>\n        <Store.Provider\n          value={{ state, dispatch, containerRef: React.createRef() }}\n        >\n          <Router basepath={BASE}>\n            <Game default />\n            <Settings path=\"/settings.html\" />\n            <Levels dispatch={dispatch} path=\"/level.html\" />\n          </Router>\n        </Store.Provider>\n      </div>\n      <svg style={{ visibility: 'hidden' }}>\n        <defs>\n          <circle\n            id=\"circle\"\n            cx={cellSize / 2}\n            cy={cellSize / 2}\n            r={cellSize / 2 - 2}\n          />\n          <polygon\n            id={`${GridType[GridType.HEX]}`}\n            points={hexPoints()}\n            width={cellSize}\n            height={cellSize}\n            fillOpacity={1}\n            strokeWidth={0}\n          />\n          <polygon\n            id={`${GridType[GridType.SQUARE]}`}\n            points={squarePoints()}\n            width={cellSize}\n            height={cellSize}\n            fillOpacity={1}\n            strokeWidth={0}\n          />\n        </defs>\n      </svg>\n    </div>\n  );\n};\n\nexport default SettingsContextProvider(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n/*\nimport _ from 'lodash';\n\ntype Address = { row: number; col: number };\n\nconst translate = (\n  { row, col }: Address,\n  { row: dRow, col: dCol }: Address\n): Address => ({ row: row + dRow, col: col + dCol });\n\nconst calculateCoordinate = (cols: number, index: number) => {\n  //if (index < 0) {\n  //  throw new Error();\n  //}\n  const col = index % cols;\n  const row = (index - col) / cols;\n  return { col, row };\n};\n\nconst calculateIndex = (\n  { cols, rows }: { cols: number; rows: number },\n  { row, col }: Address\n) => {\n  let dRow = 0;\n  let dCol = 0;\n  if (row < 0) {\n    dRow = rows + row;\n  }\n  if (col < 0) {\n    dCol = cols + col;\n  }\n  if (row < 0 || col < 0) {\n    const nc = calculateIndex(\n      { cols, rows },\n      translate({ row, col }, { row: dRow, col: dCol })\n    );\n    console.log({ nc, row, col });\n  }\n  return col + cols * row;\n};\n\nfunction formatCoordinate({ row, col }: Address) {\n  return (\n    <pre>\n      {col}, {row}\n    </pre>\n  );\n}\n\nconst renderCell = (\n  { cols, rows }: { cols: number; rows: number },\n  coordinate: Address\n) => {\n  const index = calculateIndex({ cols, rows }, coordinate);\n  const newCoordinate = calculateCoordinate(cols, index);\n  const newIndex = calculateIndex({ cols, rows }, newCoordinate);\n  return (\n    <ul>\n      <li>{index}</li>\n      <li\n        style={{\n          backgroundColor: index === newIndex ? 'green' : 'red',\n        }}\n      >\n        {newIndex}\n      </li>\n      <li>{formatCoordinate(coordinate)}</li>\n      <li\n        style={{\n          backgroundColor: _.isEqual(coordinate, newCoordinate)\n            ? 'green'\n            : 'red',\n        }}\n      >\n        {formatCoordinate(newCoordinate)}\n      </li>\n    </ul>\n  );\n};\n\nconst Test = () => {\n  const cols = 16;\n  const rows = 14;\n  return (\n    <table>\n      <tbody>\n        {[...new Array(rows)].map((_i, row) => (\n          <tr key={row}>\n            {[...new Array(cols)].map((_j, col) => (\n              <td key={col}>\n                {renderCell(\n                  { cols, rows },\n                  { row: row - rows / 2, col: col - cols / 2 }\n                )}\n              </td>\n            ))}\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n*/\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}