.Minesweeper.rotated .Cell {
  rotate: -90deg;
}

.Cell {
  rotate: 0deg;
  padding: 3px;
  margin: 0;
  transition: color 0.2s linear, background-color 0.2s linear;
  /*
  transition: color 0.2s linear;
  transition: background-color 0.2s linear;
  */
  border-color: var(--cell-border, black);

  border-width: 2px;
  border-radius: 5px;

  border-style: outset;
  background-color: var(--cell-background, grey);
  display: flex;
  justify-content: center;
  align-items: center;
  background-size: cover;
  -webkit-user-select: none; /* Chrome all / Safari all */
  -moz-user-select: none; /* Firefox all */
  -ms-user-select: none; /* IE 10+ */
  -o-user-select: none;
  user-select: none;
}

.Cell {
  font-family: 'color-emoji';
  color: var(--cell-color, inherit);
  background-repeat: no-repeat;
  background-position: center;
}

.Cell[data-state='OPEN'][data-threats='0'] {
  pointer-events: none;
}

.Cell[data-state='FLAGGED'],
.Cell[data-state='UNCERTAIN'] {
  color: var(--cell-flagged-color);
}

.Cell[data-state='MINED'] {
  color: var(--cell-mined-color);
}

.Cell[data-state='FLAGGED'] {
  background-image: var(--cell-flagged);
}

.Cell[data-state='UNCERTAIN'] {
  background-image: var(--cell-flagged-uncertain);
}

.Board[data-state='PAUSED'] .Cell {
  background-color: var(--cell-background) !important;
  background-image: none !important;
  color: transparent !important;
}

.Board[data-state='PAUSED'] .Cell * {
  visibility: hidden;
}

.Board[data-state='GAME_OVER']
  .Cell:not([data-state='OPEN']):not([data-state='EXPLODED']) {
  background-color: var(
    --cell-background-game-over,
    var(--cell-background, revert)
  );
}

.Board[data-state='GAME_OVER'] .Cell[data-mined]:not([data-state='EXPLODED']),
.Board[data-state='COMPLETED'] .Cell[data-mined]:not([data-state='EXPLODED']) {
  background-image: var(--mine-disarmed);
}

.Board[data-state='GAME_OVER'] .Cell[data-mined],
.Board[data-state='COMPLETED'] .Cell[data-mined] {
  font-size: calc(var(--cell-size) * 0.75);
}

.Board[data-state='GAME_OVER'] .Cell[data-state='FLAGGED'][data-mined],
.Board[data-state='COMPLETED'] .Cell[data-state='FLAGGED'][data-mined] {
  background-image: var(--mine-disarmed);
}

.Board[data-state='GAME_OVER'] .Cell[data-state='FLAGGED']:not([data-mined]) {
  background-image: var(--cell-flagged-wrong);
  background-color: var(--cell-background-flagged-wrong);
  color: var(--cell-color-flagged-wrong, revert);
  animation: var(--mine-detonated-animation) !important;
}

.Board[data-state='GAME_OVER'] .Cell[data-state='UNCERTAIN'][data-mined],
.Board[data-state='COMPLETED'] .Cell[data-state='UNCERTAIN'][data-mined] {
  background-image: var(--mine-uncertain-disarmed);
}

.Board[data-state='GAME_OVER'] .Cell[data-mine-type='0'][data-state='NEW'],
.Board[data-state='COMPLETED'] .Cell[data-mine-type='0'][data-state='NEW'] {
  background-image: var(--mine-0);
}

.Board[data-state='GAME_OVER'] .Cell[data-mine-type='1'][data-state='NEW'],
.Board[data-state='COMPLETED'] .Cell[data-mine-type='1'][data-state='NEW'] {
  background-image: var(--mine-1);
}

.Board[data-state='GAME_OVER'] .Cell[data-mine-type='2'][data-state='NEW'],
.Board[data-state='COMPLETED'] .Cell[data-mine-type='2'][data-state='NEW'] {
  background-image: var(--mine-2);
}

.Board[data-state='GAME_OVER'] .Cell[data-mine-type='3'][data-state='NEW'],
.Board[data-state='COMPLETED'] .Cell[data-mine-type='3'][data-state='NEW'] {
  background-image: var(--mine-3);
}

.Board[data-state='GAME_OVER'] .Cell[data-mine-type='4'][data-state='NEW'],
.Board[data-state='COMPLETED'] .Cell[data-mine-type='4'][data-state='NEW'] {
  background-image: var(--mine-4);
}

.Board[data-state='GAME_OVER'] .Cell[data-mine-type='5'][data-state='NEW'],
.Board[data-state='COMPLETED'] .Cell[data-mine-type='5'][data-state='NEW'] {
  background-image: var(--mine-5);
}

.Board[data-state='GAME_OVER'] .Cell[data-mine-type='6'][data-state='NEW'],
.Board[data-state='COMPLETED'] .Cell[data-mine-type='6'][data-state='NEW'] {
  background-image: var(--mine-6);
}

.Board[data-state='GAME_OVER'] .Cell[data-mine-type='7'][data-state='NEW'],
.Board[data-state='COMPLETED'] .Cell[data-mine-type='7'][data-state='NEW'] {
  background-image: var(--mine-7);
}

.Board[data-state='GAME_OVER'] .Cell[data-mine-type='8'][data-state='NEW'],
.Board[data-state='COMPLETED'] .Cell[data-mine-type='8'][data-state='NEW'] {
  background-image: var(--mine-8);
}

.Board[data-state='GAME_OVER'] .Cell[data-mine-type='9'][data-state='NEW'],
.Board[data-state='COMPLETED'] .Cell[data-mine-type='9'][data-state='NEW'] {
  background-image: var(--mine-9);
}

.Board[data-state='GAME_OVER'] .Cell[data-mine-type][data-state='NEW'],
.Board[data-state='COMPLETED'] .Cell[data-mine-type][data-state='NEW'] {
  background-color: var(--mine-detonated-background);
}

.Cell[data-state='EXPLODED'] {
  background-image: var(--mine-detonated);
  background-color: var(--mine-detonated-background);
  animation: var(--mine-detonated-animation) !important;
  z-index: 1;
  pointer-events: none;
}

.Cell[data-threats='0'][data-state='OPEN'] {
  font-family: monospace;
  background-color: var(--cell-background-open, revert);
}

.Cell[data-threats='0']:not([data-state='FLAGGED']):not([data-state='UNCERTAIN'])
  > * {
  visibility: hidden;
}

.Cell[data-threats='1'] {
  color: var(--cell-threats-1-color, blue);
}

.Cell[data-threats='2'] {
  color: var(--cell-threats-2-color, green);
}

.Cell[data-threats='3'] {
  color: var(--cell-threats-3-color, red);
}

.Cell[data-threats='4'] {
  color: var(--cell-threats-4-color, indigo);
}

.Cell[data-threats='5'] {
  color: var(--cell-threats-5-color, darkslateblue);
}

.Cell[data-threats='6'] {
  color: var(--cell-threats-6-color, orange);
}

.Cell[data-threats='7'] {
  color: var(--cell-threats-7-color, brown);
}

.Cell[data-threats='8'] {
  color: var(--cell-threats-8-color, black);
}

.Cell[data-threats][data-state='OPEN'] {
  font-family: monospace;
  animation: font-fade-in 0.1s ease 0s 1;
}

.Cell[data-state='OPEN'],
.Cell:disabled {
  background-color: var(--cell-background-open, white);
}
/*
.Cell[data-state='NEW']:hover {
  background-color: var(--cell-hover);
}
*/
@keyframes pressed {
  0% {
    transform: scale(1);
  }

  100% {
    transform: scale(0.9);
    background-color: var(--cell-pressed-color, revert) !important;
  }
}

.Cell:active {
  border-style: inset;
  transform: scale(0.9);
  background-color: var(--cell-pressed-color, revert) !important;
}

.Cell:active[data-state='FLAGGED'] {
  background-image: var(--cell-flagged-uncertain);
}

@keyframes font-fade-in {
  0% {
    transform: scale(0.75);
  }
  25% {
    transform: scale(0.5);
  }
  50% {
    transform: scale(0.75);
  }
  75% {
    transform: scale(1.25);
  }
  100% {
    transform: scale(1);
  }
}
